<html><head><meta http-equiv="content-type" name="description" content="text/html; charset=UTF-8"> <title>lamp</title><link rel="stylesheet" href="../../acldoc-styles.css" type="text/css"></head><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><b>Class</b></td><td align="left" bgcolor="#00FFFF"><b>Package: cg</b></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/classes/cg/lamp.htm">8.1 version</a></td></tr></table><h2 id="2">lamp</h2>

<p id="3">
The class of the <a href="lamp.htm"><code>lamp</code></a> control. The <a href="widget-window.htm"><code>widget-window</code></a> of the
control is a member of the <a href="lamp-pane.htm"><code>lamp-pane</code></a> class.
</p>
<p id="4">
The lamp control is a colored shape (a circle, rectangle, triangle, or
diamond) which can be on or off, or can blink between on and off. The
on and off colors may be any colors, and may be changed at any time.
 A single lamp widget can optionally display an
entire rectangular array of lamp images, which may individually be on
or off or blinking, and may be different colors.
</p>


<p id="5">
The <a href="../../operators/cg/v/value.htm"><b>value</b></a>
property of the widget may be <code>t</code> (meaning the
lamp is on), <code>nil</code> (meaning it is off),
<code>:blinking</code> (meaning it switches between on and off,
with the interval determined by <a href="../../operators/cg/b/blink-off-milliseconds.htm"><b>blink-off-milliseconds</b></a> and <a href="../../operators/cg/b/blink-on-milliseconds.htm"><b>blink-on-milliseconds</b></a>),
or an array of such values.  The lamp displays its <a href="../../operators/cg/o/on-color.htm"><b>on-color</b></a> when it is on, and its
<a href="../../operators/cg/o/off-color.htm"><b>off-color</b></a> when it
is off.
</p>

<p id="6">
The <a href="../../operators/cg/o/off-color.htm"><b>off-color</b></a>
property value is <code>nil</code> by default, in which
case the effective off-color is derived automatically from the <a href="../../operators/cg/o/on-color.htm"><b>on-color</b></a> and the <a href="../../operators/cg/o/off-color-factor.htm"><b>off-color-factor</b></a>.  The <a href="../../operators/cg/o/off-color-factor.htm"><b>off-color-factor</b></a> is a number between
zero and one by which to multiply the <a href="../../operators/cg/o/on-color.htm"><b>on-color</b></a> RGB values to produce a dimmer version
of the same hue for the off state.
</p>
<p id="7">
The <a href="../../operators/cg/l/lamp-shape.htm"><b>lamp-shape</b></a> property may be
either <code>:circle</code>, <code>:triangle</code>,
<code>:rectangle</code>, or <code>:diamond</code> to draw
the lamp in a particular shape. The border around the lamp is
controlled with the <a href="../../operators/cg/b/border-color.htm"><b>border-color</b></a> and <a href="../../operators/cg/b/border-width.htm"><b>border-width</b></a> properties (where a <a href="../../operators/cg/b/border-width.htm"><b>border-width</b></a> of zero would draw no
border).
</p>
<p id="8">
The <a href="../../operators/cg/t/title.htm"><b>title</b></a> property may be
either a string to display on one side of the lamp, or else <code>nil</code> to display no string. The <a href="../../operators/cg/t/title-side.htm"><b>title-side</b></a> property may be
<code>:left</code>, <code>:top</code>,
<code>:right</code>, or <code>:bottom</code> to position
the title on a particular side of the lamp image, or
<code>:center</code> to position the title within the (typically
rectangular) lamp image. As with other widgets, the <a href="../../operators/cg/f/font.htm"><b>font</b></a> property determines the font with which to
draw the title string.
</p>


<p id="9">
The size of the lamp image within the widget may be specified
explicitly by setting the <a href="../../operators/cg/l/lamp-width.htm"><b>lamp-width</b></a> and <a href="../../operators/cg/l/lamp-height.htm"><b>lamp-height</b></a> properties to the desired pixel
size. By default these properties are <code>nil</code>
instead, which means use the size ten pixels. The positioning of a
single lamp image or an array of them is affected by the <a href="../../operators/cg/o/outer-horizontal-margin.htm"><b>outer-horizontal-margin</b></a>, <a href="../../operators/cg/i/inner-horizontal-margin.htm"><b>inner-horizontal-margin</b></a>, <a href="../../operators/cg/o/outer-vertical-margin.htm"><b>outer-vertical-margin</b></a>, and <a href="../../operators/cg/i/inner-vertical-margin.htm"><b>inner-vertical-margin</b></a> properties.  The
"outer" margins are between the image and the edge of the widget,
while the "inner" margins are between the lamp image and the title, or
between the multiple lamp images when the value property is an array
(see below). The outer margins are particularly useful when laying out
lamps on a form, allowing you to snap the widgets up against each
other without the lamp images or title strings running into each
other.
</p>
<p id="10">
By default, lamp images are placed near one or two sides of the widget
to leave all remaining space for any labels.  But if the <a href="../../operators/cg/c/center-all.htm"><b>center-all</b></a> property is turned on, then
all images and labels are centered as a group within the widget.
</p>


<h3 id="11">
Making an array of lamps
</h3>


<p id="12">
To make a lamp widget display a rectangular grid of lamp images, set
the <a href="../../operators/cg/v/value.htm"><b>value</b></a> property to be a
two-dimensional array, where the major dimension of the array
indicates the row, and the minor dimension the column.  Each value in
the array should be either <code>nil</code>, <code>t</code>, or <code>:blinking</code> to specify the
state of each lamp in the grid. When the <a href="../../operators/cg/v/value.htm"><b>value</b></a> property is an array, then the <a href="../../operators/cg/t/title.htm"><b>title</b></a> and <a href="../../operators/cg/t/title-side.htm"><b>title-side</b></a> properties are not used, and the
following properties are used instead: <a href="../../operators/cg/r/row-labels.htm"><b>row-labels</b></a>, <a href="../../operators/cg/c/column-labels.htm"><b>column-labels</b></a>, <a href="../../operators/cg/r/row-label-side.htm"><b>row-label-side</b></a>, <a href="../../operators/cg/c/column-label-side.htm"><b>column-label-side</b></a>, <a href="../../operators/cg/r/row-label-margin.htm"><b>row-label-margin</b></a>, <a href="../../operators/cg/c/column-label-margin.htm"><b>column-label-margin</b></a>, <a href="../../operators/cg/r/row-label-offset.htm"><b>row-label-offset</b></a>, <a href="../../operators/cg/c/column-label-offset.htm"><b>column-label-offset</b></a>, and <a href="../../operators/cg/c/column-label-orientation.htm"><b>column-label-orientation</b></a>. The lamp shape will be
the same for all lamps in the grid, and any blinking lamps will blink
in unison. The <a href="../../operators/cg/o/on-color.htm"><b>on-color</b></a> and
<a href="../../operators/cg/o/off-color.htm"><b>off-color</b></a> properties may be an
array of the same dimensions as the value array to make each image use
a different color; if <a href="../../operators/cg/o/off-color.htm"><b>off-color</b></a> is <code>nil</code> then
an <a href="../../operators/cg/o/off-color.htm"><b>off-color</b></a> will be derived
for each image individually.
</p>
<p id="13">
Replacing any lamp property will automatically update the appearance
of the widget, as usual, either on a form or at runtime. But when the
value is an array, it is simpler and more efficient to modify the
existing array object, rather than consing up a new array for each
change.  Since the <a href="../../operators/cg/v/value.htm"><b>value</b></a>
property remains the same object in this case, the widget will not
update itself automatically. To cause the widget to update its
appearance after modifying the array object, call <a href="../../operators/cg/u/update-lamp.htm"><b>update-lamp</b></a>.
</p>
<h3 id="14">
Using lamp widgets in grid-widget cells
</h3>

<p id="15">
A lamp widget can be displayed in one or more cells of a <a href="grid-widget.htm"><code>grid-widget</code></a>. To do so, create the
lamp dialog-item as usual, but do not place it onto a parent window
(which you would normally do either by including the lamp widget in
the list of <a href="../../operators/cg/d/dialog-items.htm"><b>dialog-items</b></a> of
the parent window, or by calling <a href="../../operators/cg/a/add-component.htm"><b>add-component</b></a>). Instead, associate the lamp
dialog-item with a <a href="grid-widget.htm"><code>grid-widget</code></a> in one of the two following ways.
Thereafter, whenever you modify properties of the lamp dialog-item,
the changes will automatically be drawn in any grid cells that display
that lamp.
</p>

<h4 id="16">
Method 1 for placing lamps in a grid-widget
</h4>

<p id="17">
To make a column of lamp cells, use the <a href="lamp-column-mixin.htm"><code>lamp-column-mixin</code></a> class along with the <a href="widget-row-mixin.htm"><code>widget-row-mixin</code></a> class, as usual
when using the various <a href="widget-column-mixin.htm"><code>widget-column-mixin</code></a> classes in a <a href="grid-widget.htm"><code>grid-widget</code></a>.  The <a href="../../operators/cg/l/lamp-widget.htm"><b>lamp-widget</b></a> property of the <a href="grid-column.htm"><code>grid-column</code></a> will be the actual lamp dialog-item.
</p>
<p id="18">
The <b>Employee Grid</b> example in the IDE's <a href="../../ide-menus-and-dialogs/navigator-dialog.htm">Navigator Dialog</a> includes a lamp
column. That example has grown rather large, so search for
<b><code>lamp-column-mixin</code></b> and then for the
<b><code>stressed-column</code></b> class that uses that mixin.
Below is the code from that example that makes the lamp column (with a
few properties removed here).  It uses the <a href="../../operators/cg/d/data-reader.htm"><b>data-reader</b></a> property to read a value from an
employee's <code>stressed</code> slot, then the <a href="../../operators/cg/d/data-read-converter.htm"><b>data-read-converter</b></a> property to
convert the user value <code>:extremely</code> from the
<code>stressed</code> slot to the value
<code>:blinking</code> for the lamp widget to handle in the
usual way. The <a href="../../operators/cg/t/title-reader.htm"><b>title-reader</b></a>
property is used to make a title string to display in each cell.  A
sort-predicate is specified in case the user sorts the grid rows by
that grid column, to sort the blinking cells to the top, followed by
the <code>on</code> cells, and finally the
<code>off</code> cells at the bottom.  And finally the <a href="../../operators/cg/l/lamp-widget.htm"><b>lamp-widget</b></a> property is set to be a
real lamp widget.  Its <a href="../../operators/cg/w/wrapping.htm"><b>wrapping</b></a> property is turned on to make the
labels fit better in a narrow grid column.
</p>

<pre id="19">
  (make-instance 'stressed-column ;; a subclass of lamp-column-mixin
    :name :stressed
    :data-reader 'stressed
    :data-read-converter (lambda (user-value)
                           (case user-value
                             (:extremely :blinking)
                             (t user-value)))
    :title-reader (lambda (employee)
                    (format nil "Is ~:(~a~) stressed?"
                      (name employee)))
    :sort-predicate (lambda (a b)
                      (or (eq a :blinking)
                          (and a (not b))))
    :lamp-widget (make-instance 'lamp
                   :outer-horizontal-margin 8
                   :inner-horizontal-margin 10
                   :wrapping t))
</pre>

<h4 id="20">
Method 2 for placing lamps in a grid-widget xxxxxxxxx
</h4>

<p id="21">
To add a lamp to a single arbitrary grid cell, write a <a href="../../operators/cg/c/cell-widget.htm"><b>cell-widget</b></a> method (as usual for
widgets in individual cells).  When the <i>grid-row</i>
and <i>grid-column</i> arguments to the method indicate
a cell that should contain a lamp, then the method should return two
values, which are the keyword symbol <code>:lamp</code> and the
actual lamp dialog-item to be displayed there.  See <a href="../../operators/cg/c/cell-widget.htm"><b>cell-widget</b></a> for more information. The <a href="../../operators/cg/c/cell-widget.htm"><b>cell-widget</b></a> example in the IDE's
<b>Navigator Dialog</b> also displays an arrayed lamp in one cell.
</p>

<h3 id="22">
Lamp example
</h3>

<p id="23">
Here is an example that creates a simple lamp and an arrayed lamp on a
dialog.
</p>

<pre id="24">
(let* ((simple-lamp (make-instance 'lamp
                      :value t
                      :on-color green
                      :title "Simple Lamp"
                      :left 20 :top 20 :width 160 :height 24))
       (array-lamp (make-instance 'lamp
                     :value #2a((nil t nil)
                                (t nil :blinking)
                                (:blinking t t))
                     :on-color #2a((#.yellow #.light-blue #.red)
                                   (#.yellow #.light-blue #.red)
                                   (#.yellow #.light-blue #.red))
                     :row-labels '("One" "Two" "Three")
                     :column-labels '("Apple" "Blueberry" "Cherry")
                     :column-label-orientation :vertical
                     :row-label-side :right
                     :lamp-shape :triangle
                     :lamp-height 12
                     :lamp-width 16
                     :row-label-margin 10
                     :column-label-margin 8
                     :inner-horizontal-margin 8
                     :center-all nil
                     :left 20 :top 60 :width 160 :height 120)))
  (make-window :lamp-example
    :class 'dialog
    :title "Lamp Example"
    :resizable nil
    :dialog-items (list simple-lamp array-lamp)
    :interior (make-box-relative 300 100 200 200)))
</pre>





<p id="25">
A diagram of window and widget classes is shown in <a href="../../cgide.htm#widget-classes-1">Widget and window
classes</a> in <a href="../../cgide.htm">cgide.htm</a>.
</p>


<hr><p id="26"><small>Copyright (c) 1998-2010, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br><small>Documentation for Allegro CL version 8.2. This page was not revised from the 8.1 page.</small><br>
<small>Created 2010.1.21.</small>
<br></p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"></td><td align="left" bgcolor="#00FFFF"></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/classes/cg/lamp.htm">8.1 version</a></td></tr></table></body></html>