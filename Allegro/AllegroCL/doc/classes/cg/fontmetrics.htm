<html><head><meta http-equiv="content-type" name="description" content="text/html; charset=UTF-8"> <title>fontmetrics</title><link rel="stylesheet" href="../../acldoc-styles.css" type="text/css"></head><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><b>Class</b></td><td align="left" bgcolor="#00FFFF"><b>Package: cg</b></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/classes/cg/fontmetrics.htm">8.1 version</a></td></tr></table><h2 id="2">fontmetrics</h2>

<p id="3">
The class of fontmetrics objects. 
Some functions that return attributes of fonts may be passed the font
object directly, but most of them must instead be passed a fontmetrics
object that reflects the font as it is used on a particular graphical
stream.
</p>
<p id="4">
A fontmetrics is created by calling either <a href="../../operators/cg/m/make-fontmetrics.htm"><b>make-fontmetrics</b></a> or <a href="../../operators/cg/f/fontmetrics.htm"><b>fontmetrics</b></a>, and is
returned by each of those functions as well as by <a href="../../operators/cg/n/nfontmetrics.htm"><b>nfontmetrics</b></a>.  Once a fontmetrics
object is returned by a call to either <a href="../../operators/cg/f/fontmetrics.htm"><b>fontmetrics</b></a> or <a href="../../operators/cg/n/nfontmetrics.htm"><b>nfontmetrics</b></a>, it holds the values
of various attributes of the current font of the window. Various
accessor functions such as <a href="../../operators/cg/f/font-leading.htm"><b>font-leading</b></a> and <a href="../../operators/cg/f/font-fixed-width-p.htm"><b>font-fixed-width-p</b></a> can then be
called on the fontmetrics object to obtain information about the font
as used on that stream.
</p>
<p id="5">
Most of the fontmetrics accessors return the size (in pixels) of
various parts of a character cell, such as <a href="../../operators/cg/f/font-descent.htm"><b>font-descent</b></a> to return the part of
each character cell that is reserved for the parts of characters that
descend below the baseline.  These values may be different on
different streams, even for a font of a particular declared pixel size
(see <a href="../../operators/cg/f/font-size.htm"><b>font-size</b></a>
and <a href="../../operators/cg/m/make-font-ex.htm"><b>make-font-ex</b></a>).  This might even be
true among different kinds of windows on a single screen at a
particular resolution.  Therefore, these accessor functions do not
work on a font object by itself, and must instead by passed a
fontmetrics object that reflects the current font of a particular
stream on which it may be used.
</p>
<h3 id="6">
Example
</h3>

<p id="7">
In this example, the form will return the internal font leading of the
specified font when it is used on the window "my-window".
</p>
<pre id="8">
(let* ((font-37 (make-font-ex nil "Arial" 24)))
  (with-font (my-window font-37)
    (font-internal-leading (fontmetrics my-window))))
</pre>
<p id="9">
Here is an example function that collects all of the attributes of a
font and returns them as a plist. It allows you to pass in the stream
where the font might be used, in case any measurements may differ
based on the stream, and otherwise uses the screen for measurements.
The function illustrates how some font attribute functions must be
passed a fontmetrics object, while others take the font itself.
</p>
<pre id="10">
(defun font-attributes (font &amp;key (stream (screen *system*)))
  
  ;; This is needed if the stream is the screen or an instance
  ;; of os-widget-window, since these streams do not have permanent
  ;; device-contexts as &quot;regular&quot; windows do.
  (with-device-context (hdc stream)
    
    ;; Assign the font to the stream, and THEN retrieve a
    ;; fontmetrics object for the stream, which will then reflect
    ;; that font as used on that stream.
    (with-font (stream font)
      (let* ((fm (fontmetrics stream))
             (plist nil))
        
        ;; Collect every attribute that requires a fontmetrics
        ;; object from our fontmetrics object that reflects the font.
        (dolist (accessor
                 '#.(reverse
                     '(font-height
                       font-ascent font-descent font-leading
                       font-external-leading font-internal-leading
                       font-fixed-width-p font-average-char-width
                       font-max-char-width font-vector-p
                       font-truetype-p font-device-p font-direction)))
          (push (funcall accessor fm) plist)
          (push accessor plist))
        
        ;; Add to the list the other font attributes that can be
        ;; called directly on the font object itself.
        (dolist (accessor
                 '#.(reverse
                     '(font-family
                       font-face font-size font-style
                       font-style-word font-size-is-char-height)))
          (push (funcall accessor font) plist)
          (push accessor plist))
        
        ;; Return the list of all of the font's attributes.
        plist))))

;;; Try printing the attributes of an example font.
(pprint (font-attributes (make-font-ex nil &quot;Arial&quot; 24 '(:bold))))

==&gt; (font-family nil font-face &quot;Arial&quot; font-size 24 font-style (:bold)
             font-style-word 1 font-size-is-char-height t
             font-height 30 font-ascent 23 font-descent 6
             font-leading 6 font-external-leading 1
             font-internal-leading 5 font-fixed-width-p nil
             font-average-char-width 11 font-max-char-width 64
             font-vector-p t font-truetype-p t font-device-p nil
             font-direction :left-right)
</pre>

<hr><p id="11"><small>Copyright (c) 1998-2010, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br><small>Documentation for Allegro CL version 8.2. This page was not revised from the 8.1 page.</small><br>
<small>Created 2010.1.21.</small>
<br></p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"></td><td align="left" bgcolor="#00FFFF"></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/classes/cg/fontmetrics.htm">8.1 version</a></td></tr></table></body></html>