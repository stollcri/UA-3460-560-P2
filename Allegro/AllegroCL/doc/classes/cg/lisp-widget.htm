<html><head><meta http-equiv="content-type" name="description" content="text/html; charset=UTF-8"> <title>lisp-widget</title><link rel="stylesheet" href="../../acldoc-styles.css" type="text/css"></head><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><b>Class</b></td><td align="left" bgcolor="#00FFFF"><b>Package: cg</b></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/classes/cg/lisp-widget.htm">8.1 version</a></td></tr></table><h2 id="2">lisp-widget</h2>

<p id="3">
This is the class of all dialog-items that are implemented from
scratch in Common Graphics, rather than utilizing controls that are
supplied by the operating system. Common Graphics exports several such
widgets, namely the <a href="outline.htm"><code>outline</code></a>, <a href="dropping-outline.htm"><code>dropping-outline</code></a>,
<a href="grid-widget.htm"><code>grid-widget</code></a>, <a href="multi-picture-button.htm"><code>multi-picture-button</code></a>, <a href="drawable.htm"><code>drawable</code></a>, and <a href="group-box.htm"><code>group-box</code></a> widgets.
</p>
<p id="4">
Applications may also write their own lisp-widgets. The basic
procedure for defining a custom lisp-widget consists of the following:
</p>
<ol>
<li id="5">
Creating a subclass of <a href="lisp-widget.htm"><code>lisp-widget</code></a> for the dialog-item
itself.
</li>
<li id="6">
Creating a class that is a subclass of <a href="lisp-widget-top-window.htm"><code>lisp-widget-top-window</code></a>, to serve as
the actual window that appears on the screen for the dialog-item. (In
release 6.2 and earlier, two superclasses needed to be specified:
<a href="lisp-widget-top-window.htm"><code>lisp-widget-top-window</code></a> and <a href="lisp-widget-window.htm"><code>lisp-widget-window</code></a>. In
7.0, only <a href="lisp-widget-top-window.htm"><code>lisp-widget-top-window</code></a> should be a
superclass. Specifying <a href="lisp-widget-window.htm"><code>lisp-widget-window</code></a> as well will cause
problems.)
</li>
<li id="7">
Adding a <a href="../../operators/cg/w/widget-device.htm"><b>widget-device</b></a> method to associate
the two subclasses above with each other.
</li>
<li id="8">
Adding a <a href="../../operators/excl/device-open.htm"><b>device-open</b></a> method
for the <a href="lisp-widget-top-window.htm"><code>lisp-widget-top-window</code></a> subclass,
which gets called automatically whenever an instance of the
lisp-widget subclass is placed onto a parent window. This method
should call <a href="../../operators/cg/o/open-lisp-widget-window.htm"><b>open-lisp-widget-window</b></a> on the
stream object that is passed to <a href="../../operators/excl/device-open.htm"><b>device-open</b></a>; this will create the actual
window on the screen that is represented by the <a href="lisp-widget-window.htm"><code>lisp-widget-window</code></a> object. The
<a href="../../operators/excl/device-open.htm"><b>device-open</b></a> method should
also do any needed initial setup of the widget, such as processing the
initargs that were passed to <a href="../../../ansicl/dictentr/make-ins.htm"><b>make-instance</b></a> to create the dialog-item
instance.  There is a built-in <a href="../../operators/excl/device-open.htm"><b>device-open</b></a> method for <a href="lisp-widget-top-window.htm"><code>lisp-widget-top-window</code></a> that simply
calls <a href="../../operators/cg/o/open-lisp-widget-window.htm"><b>open-lisp-widget-window</b></a>, so if that is
sufficient then this step can be skipped.
</li>
<li id="9">
Adding a <a href="../../operators/cg/r/redisplay-window.htm"><b>redisplay-window</b></a> method for the
<a href="lisp-widget-window.htm"><code>lisp-widget-window</code></a> subclass, to
draw the widget whenever it is uncovered or its value changes.
</li>
<li id="10">
If the widget may have a value and needs to be redisplayed to reflect
a new value, then adding a <a href="../../operators/cg/w/widget-set-value.htm"><b>widget-set-value</b></a> method for the
<a href="lisp-widget-window.htm"><code>lisp-widget-window</code></a> subclass. This
method should call <a href="../../operators/cg/i/invalidate.htm"><b>invalidate</b></a> on the <a href="lisp-widget-window.htm"><code>lisp-widget-window</code></a>,
which causes its <a href="../../operators/cg/r/redisplay-window.htm"><b>redisplay-window</b></a> method to be
called.
</li>
<li id="11">
If the widget should respond to user mouse or keyboard events, adding
methods on the <a href="lisp-widget-window.htm"><code>lisp-widget-window</code></a> subclass for
such generic functions as <a href="../../operators/cg/m/mouse-left-down.htm"><b>mouse-left-down</b></a>, <a href="../../operators/cg/m/mouse-moved.htm"><b>mouse-moved</b></a>, or <a href="../../operators/cg/v/virtual-key-down.htm"><b>virtual-key-down</b></a>.  These methods
will typically determine a new value for the widget and call <a href="../../operators/cg/v/value.htm"><b>(setf value)</b></a>
to update the widget according to the user gesture.
</li>
<li id="12">
Perhaps defining additional <a href="lisp-widget-window.htm"><code>lisp-widget-window</code></a> subclasses for
any child windows that the widget may have. (Widgets usually do not
have child windows.) These classes should NOT also be subclasses of
<a href="lisp-widget-top-window.htm"><code>lisp-widget-top-window</code></a>. The <a href="../../operators/excl/device-open.htm"><b>device-open</b></a> method should also
create the needed child window instances, but by calling <a href="../../operators/cg/m/make-window.htm"><b>make-window</b></a> rather than
calling <a href="../../operators/cg/o/open-lisp-widget-window.htm"><b>open-lisp-widget-window</b></a>. The name
of the <a href="lisp-widget-window.htm"><code>lisp-widget-window</code></a> subclass should
be passed as the :class argument to <a href="../../operators/cg/m/make-window.htm"><b>make-window</b></a>.
</li>
<li id="13">
Perhaps adding a <a href="../../operators/cg/l/lisp-widget-draw-focus.htm"><b>lisp-widget-draw-focus</b></a> method and a
<a href="../../operators/cg/l/lisp-widget-clear-focus.htm"><b>lisp-widget-clear-focus</b></a> for the
<a href="lisp-widget-window.htm"><code>lisp-widget-window</code></a> subclass that
either draws or erases an indication that the widget currently has the
keyboard focus. These methods are called automatically as the widget
gains and loses the keyboard focus. If the widget does not need to
visually indicate when it has the focus, then these methods are not
needed.
</li>
</ol>
<p id="14">
Details of the above procedure may be found in the source code for the
Navigator examples called "Custom Widgets: implementing in lisp" and
"Circle Widget: a simpler lisp widget". Navigator examples are
displayed by the <a href="../../ide-menus-and-dialogs/help-menu.htm">Help
menu</a> | <a href="../../ide-menus-and-dialogs/help-menu.htm#examples">CG Examples</a> menu command.
</p>





<p id="15">
A diagram of window and widget classes is shown in <a href="../../cgide.htm#widget-classes-1">Widget and window
classes</a> in <a href="../../cgide.htm">cgide.htm</a>.
</p>


<hr><p id="16"><small>Copyright (c) 1998-2010, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br><small>Documentation for Allegro CL version 8.2. This page was not revised from the 8.1 page.</small><br>
<small>Created 2010.1.21.</small>
<br></p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"></td><td align="left" bgcolor="#00FFFF"></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/classes/cg/lisp-widget.htm">8.1 version</a></td></tr></table></body></html>