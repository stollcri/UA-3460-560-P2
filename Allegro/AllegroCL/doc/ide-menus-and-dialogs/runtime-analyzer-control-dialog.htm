<html><head><meta http-equiv="content-type" name="description" content="text/html; charset=UTF-8"> <title>runtime-analyzer-control-dialog</title><link rel="stylesheet" href="../acldoc-styles.css" type="text/css"></head><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><b>IDE Dialog</b></td><td align="left" bgcolor="#00FFFF"></td><td align="center" bgcolor="#00FFFF"><a href="../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/ide-menus-and-dialogs/runtime-analyzer-control-dialog.htm">8.1 version</a></td></tr></table><h2 id="2">Runtime Analyzer Control dialog</h2>

<p id="3"><img src="../pictures/run-an-control.jpg"></p>

<p id="4">
This dialog is displayed with the <a href="run-menu.htm#runtime-analyzer-control">Run | Runtime Analyzer
Control Dialog</a> command.
</p>
<p id="5">
This dialog has buttons for starting, suspending, and stopping the
collection of runtime analyzer data, and also has controls for
specifying the type of data to be collected. Runtime analyzer data are
useful for determining which functions in your application are using a
lot of time or are using a lot of memory to create lisp objects. See
<a href="../runtime-analyzer.htm">runtime-analyzer.htm</a> for a full description of the
runtime analyzer in Allegro CL.
</p>

<h3 id="6">Type radio buttons</h3>

<p id="7">
The radio-buttons at the upper left indicate the basic type of runtime
analysis data to be collected, depending on whether you are interested
in what code is taking most of the time (a <b>Time</b> analysis), what
code is doing most of the consing of new objects (a <b>Space</b>
analysis), or which functions are getting called frequently (<b>Call
Counts</b> analysis).
</p>

<h3 id="8">The Interpret Closures check-box</h3>

<p id="9">
The Interpret Closures check-box indicates whether separate nodes will
be created in the analysis statistics for closures (when checked, they
will, when unchecked, they will not).
</p>
<h3 id="10">The Call Counting Field</h3>

<p id="11">
The controls at the upper right determine whether function calls are
counted, what particular functions should definitely be counted, and
the maximum number of functions that will be counted. Once you have
checked that call counts are to be included, you may then enter
function names into the <b>Functions to Count</b> text widget (one
per line is suggested, though you need only include spaces between
function names) and/or enter how many functions should be counted.
</p>

<h3 id="12">The Select Processes to Exclude Item List</h3>

<p id="13">
This item-list on the right allows you to exclude particular processes
from the analysis. Just single-click the names of any processes that
are not of interest, and dark highlighting will indicate that they are
being excluded. Single-click them again to return them to the
processes being analyzed. If not all of the current processes are
shown in the list, invoking the <a href="run-menu.htm#runtime-analyzer-control">Run | Runtime Analyzer Control
Dialog</a> command again will refresh the list to reflect all
current processes.  You may want to exclude the IDE GUI thread, for
example, since code running there is usually running the IDE itself
rather than the application that you are developing in the IDE.
</p>

<h3 id="14">
The Granularity and Max Samples widgets
</h3>

<p id="15">
The <b>Granularity</b> widget on the right below the <b>Select
Processes to Exclude</b> item list sets the value of the variable
<a href="../variables/prof/s_granularity_s.htm"><code>prof:*granularity*</code></a>, which specifies the
number of clock ticks between each sample that is taken.  It
must be a positive integer, and the dialog will reject other values.
</p>
<p id="16">
The <b>Max Samples</b> widget below the <b>Granularity</b> widget sets
the value of the variable <a href="../variables/prof/s_maxsamples_s.htm"><code>prof:*maxsamples*</code></a>, which specifies the
maximum number of samples that will be collected.  It must be a
positive integer, and the dialog will reject other values.
</p>

<h3 id="17">The Start/Suspend/Stop/Show buttons</h3>

<p id="18">
When you click the <b>Start Sampling</b> button, <a href="../operators/prof/start-profiler.htm"><b>start-profiler</b></a> is called to begin
collecting data, passing arguments that correspond to the
information that you have specified in the various other controls on
the dialog.
</p>
<p id="19">
While sampling is occurring, you may press either the <b>Suspend</b>
button or the <b>Stop</b> button. The <b>Suspend</b> button
discontinues sampling temporarily (allowing you to add more samples to
the same dataset a bit later; see <a href="../operators/prof/stop-sampling.htm"><b>stop-sampling</b></a>). Note that the same parameters
(granularity, maximum samples, type) are used when you resume sampling
as when sampling started: it is not possible to change parameters
while suspended. The <b>Stop</b> button ends data collection and
prepares things for analysis (see <a href="../operators/prof/stop-profiler.htm"><b>stop-profiler</b></a>).
</p>
<p id="20">
You may also stop while suspended. While in the
suspended state, the title of the <b>Start Sampling</b> button changes
to say <b>Resume</b>, and will call <a href="../operators/prof/start-sampling.htm"><b>start-sampling</b></a> (rather than <a href="../operators/prof/start-profiler.htm"><b>start-profiler</b></a>) to continue
sampling using the parameters that were in place when the analysis was
first started.
</p>
<p id="21">
The <b>Show Results</b> button may be pressed after data collection
has been stopped. It displays the <a href="runtime-analyzer-results-dialog.htm">Runtime Analyzer
Results</a> dialog and (programmatically) presses its
<b>Update</b> button (if it is available) to display the results of
the new analysis in that dialog.
</p>
<p id="22">
Note that the <b>Start / Resume</b>, <b>Suspend</b>, and <b>Stop</b>
buttons have global keyboard accelerators so that you may start and
stop an analysis, for example, while a <a href="run-menu.htm#run-project">Run | Run Project</a>
application window is selected. This lets you avoid switching to or
from the IDE while sampling may be occurring. The global keyboard
shortcuts are shown in the IDE status-bar when the mouse cursor is
held over the buttons, and are also shown in the <a href="run-menu.htm#runtime-analyzer-control">Run | Runtime Analyzer Control</a>
submenu of the <b>Run</b> menu on the IDE menu-bar.
</p>
<p id="23">
Also, when sampling is started from the <b>Start Sampling</b> command
in the <a href="run-menu.htm#runtime-analyzer-control">Run | Runtime Analyzer Control</a>
submenu, the parameters that are currently selected in the Runtime
Analyzer Control Dialog (if it has been invoked in this IDE session)
are still used.  This is true even if the dialog has been "closed",
since the IDE actually just hides this dialog when a close gesture is
made on it.
</p>
<h3 id="24">Static Text state indicator at the lower left</h3>
<p id="25">
The static-text control at the lower left indicates the current state
of the runtime analyzer, as returned by <a href="../operators/prof/profiler-status.htm"><b>profiler-status</b></a>.  When the state is
<b>Sampling</b>, it is shown in red to help you avoid collecting a
huge sample by inadvertently remaining in this state for a long time.
</p>

<hr><p id="26"><small>Copyright (c) 1998-2010, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br><small>Documentation for Allegro CL version 8.2. This page was not revised from the 8.1 page.</small><br>
<small>Created 2010.1.21.</small>
<br></p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"></td><td align="left" bgcolor="#00FFFF"></td><td align="center" bgcolor="#00FFFF"><a href="../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/ide-menus-and-dialogs/runtime-analyzer-control-dialog.htm">8.1 version</a></td></tr></table></body></html>