<html><head><meta http-equiv="content-type" name="description" content="text/html; charset=UTF-8"> <title>highlight-hotspot</title><link rel="stylesheet" href="../../../acldoc-styles.css" type="text/css"></head><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><b>Generic Function</b></td><td align="left" bgcolor="#00FFFF"><b>Package: cg</b></td><td align="center" bgcolor="#00FFFF"><a href="../../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/cg/h/highlight-hotspot.htm">8.1 version</a></td></tr></table><h2 id="2">highlight-hotspot</h2>

<p id="3"><b>Arguments: </b><i>
hotspot </i>&amp;key <i>off</i><i>
</i></p>

<p id="4">
This generic function is called internally whenever a hotspot may need
to be highlighted or unhighlighted.  The default method will draw or
erase highlighting if the hotspot's <a href="../h/highlight-style.htm"><b>highlight-style</b></a> is <code>:invert</code> or
<code>:outline</code> (rather than <code>nil</code>).
</p>
<p id="5">
<i>hotspot</i> is the <a href="../../../classes/cg/hotspot.htm"><code>hotspot</code></a> that could be highlighted or
unhighlighted.  <i>off</i> will be <code>nil</code> when the hotspot should be highlighted, or true
when it should be unhighlighted.
</p>
<p id="6">
If the default highlighting styles are not adequate, an application
could supply its own <a href="../h/highlight-hotspot.htm"><b>highlight-hotspot</b></a> method to draw the
highlighting in some arbitrary way. The default method sets the
<a href="../p/paint-operation.htm"><b>paint-operation</b></a> to <a href="../../../variables/cg/po-xor.htm"><code>po-xor</code></a> so that it can draw and
erase the highlighting without any knowledge of what is drawn beneath
the highlighting. A custom method could do likewise, or it could draw
in the usual <a href="../../../variables/cg/po-replace.htm"><code>po-replace</code></a>
mode. In the latter case, erasing the highlight consists of drawing
whatever is usually drawn in the window without redrawing the hotspot
highlighting over it. So a custom method could simply call <a href="../i/invalidate.htm"><b>invalidate</b></a> on the hotspot when the
<i>off</i> argument is true (which will cause the
window's <a href="../r/redisplay-window.htm"><b>redisplay-window</b></a>
method to redraw that area without the highlighting), and draw any
sort of hotspot highlighting when the <i>off</i>
argument is <code>nil</code>.  The method can call <a href="../h/hotspot-region.htm"><b>hotspot-region</b></a> on the hotspot to find
the coordinates of the hotspot, and call <a href="../r/region-box.htm"><b>region-box</b></a> on that region to find the smallest
box that contains the hotspot's coordinates.
</p>
<p id="7">
Specifically, <a href="../h/highlight-hotspot.htm"><b>highlight-hotspot</b></a> is called by the default
<a href="../m/mouse-in.htm"><b>mouse-in</b></a> and <a href="../m/mouse-out.htm"><b>mouse-out</b></a> methods for hotspots. It is also
called by a <a href="../r/redisplay-window.htm"><b>redisplay-window</b></a>
method for <a href="../../../classes/cg/hotspot-mixin.htm"><code>hotspot-mixin</code></a>
whenever there is a hotspot under the mouse while the window is being
redisplayed for any reason. The <i>off</i> argument will
be true if and only if the call is made by <a href="../m/mouse-out.htm"><b>mouse-out</b></a>.
</p>
<p id="8">
Here is an example of a custom <a href="../h/highlight-hotspot.htm"><b>highlight-hotspot</b></a> method.  It is used by the
Navigator's hotspots example when its <b>Custom Opaque
Highlighting</b> check-box is checked. (See the <a href="../../../ide-menus-and-dialogs/navigator-dialog.htm">Navigator Dialog</a> and
the hotspot example titled <b>Hotspots: mouse-active highlighting
regions</b>.)
</p>

<pre id="9">
(defmethod highlight-hotspot ((hotspot my-hotspot) &key off)
  
  ;; This is an example of a custom highlight-hotspot method
  ;; that an application might define instead of using one of
  ;; the two built-in highlighting styles.
  ;; This draws opaque highlighting rather than xoring
  ;; screen colors as the built-in styles do.
  
  ;; If we are turning the highlight off, then just invalidate
  ;; the hotspot so that the window's redisplay-window method
  ;; will be called to redraw the hotspot's region without the
  ;; hotspot highlighting.
  (if* off
     then (invalidate hotspot)
          
          ;; Otherwise draw highlighting over the top of whatever
          ;; is usually drawn in the window.
     else (let* ((window (parent hotspot))
                 (region (hotspot-region hotspot)))
            (with-background-color (window yellow)
              (with-foreground-color (window black)
                
                ;; This interprets all four kinds of hotspot-region.
                
                ;; A simple orthogonal rectangle hotspot.
                (cond ((boxp region)
                       
                       ;; Defer to the built-in highlighting for
                       ;; box hotspots.
                       (call-next-method))
                      
                      ;; A polygon hotspot.
                      ((or (vectorp region)
                           (cddr region))
                       
                       ;; These "erase" functions really draw,
                       ;; but in the current background color.
                       ;; So fill with the background color.
                       (erase-contents-polygon window region)

                       ;; And outline in the foreground color.
                       (draw-polygon window region))
                      
                      ;; A circle hotspot.
                      ((integerp (second region))
                       (erase-contents-circle window (first region)
                                              (second region))
                       (draw-circle window (first region)
                                    (second region)))
                      
                      ;; A line hotspot.
                      ;; Use with-clipping-box here to prevent this
                      ;; thick line from extending outside the
                      ;; region-box that will be erased by a simple
                      ;; call to invalidate on the hotspot.
                      (t (with-clipping-box (window (region-box region))
                           (with-line-width (window 10)
                             (with-foreground-color (window blue)
                               (draw-line window (first region)
                                          (second region))))))))))))

</pre>




<hr><p id="10"><small>Copyright (c) 1998-2010, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br><small>Documentation for Allegro CL version 8.2. This page was not revised from the 8.1 page.</small><br>
<small>Created 2010.1.21.</small>
<br></p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"></td><td align="left" bgcolor="#00FFFF"></td><td align="center" bgcolor="#00FFFF"><a href="../../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/cg/h/highlight-hotspot.htm">8.1 version</a></td></tr></table></body></html>