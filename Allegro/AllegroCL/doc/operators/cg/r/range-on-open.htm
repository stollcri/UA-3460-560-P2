<html><head><meta http-equiv="content-type" name="description" content="text/html; charset=UTF-8"> <title>range-on-open</title><link rel="stylesheet" href="../../../acldoc-styles.css" type="text/css"></head><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><b>Generic Function</b></td><td align="left" bgcolor="#00FFFF"><b>Package: cg</b></td><td align="center" bgcolor="#00FFFF"><a href="../../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/cg/r/range-on-open.htm">8.1 version</a></td></tr></table><h2 id="2">range-on-open</h2>

<p id="3"><b>Arguments: </b><i>
outline item-value range
</i></p>

<p id="4">
Returns the list of child <a href="../../../classes/cg/outline-item.htm"><code>outline-item</code></a>s that an <a href="../../../classes/cg/outline-item.htm"><code>outline-item</code></a> should
display when its state is <code>:open</code>. This generic
function is called internally whenever an <a href="../../../classes/cg/outline-item.htm"><code>outline-item</code></a> is opened, either
interactively by the end user or programmatically by calling <a href="../s/state.htm"><b>(setf state)</b></a>
on the <a href="../../../classes/cg/outline-item.htm"><code>outline-item</code></a> or <a href="../o/open-outline-item-value.htm"><b>open-outline-item-value</b></a> on its
value. The returned value is then stored as the new <a href="../r/range.htm"><b>range</b></a> of the <a href="../../../classes/cg/outline-item.htm"><code>outline-item</code></a>.
</p>
<p id="5">
The default method returns the current list of outline-items that is
stored as the value of the <a href="../r/range.htm"><b>range</b></a> property of this <a href="../../../classes/cg/outline-item.htm"><code>outline-item</code></a>. An
application may supply a custom <a href="../r/range-on-open.htm"><b>range-on-open</b></a> method for an <a href="../../../classes/cg/outline.htm"><code>outline</code></a> subclass in
order to create most of the outline-items lazily if and when the end
user opens each parent item. If all outline-items are instead created
when creating the outline itself (or if they are added later with
<a href="../a/add-outline-item.htm"><b>add-outline-item</b></a>
or <a href="../a/add-outline-item-value.htm"><b>add-outline-item-value</b></a>), then there
is no need to write a <a href="../r/range-on-open.htm"><b>range-on-open</b></a> method.
</p>
<p id="6">
<i>outline</i> is the outline control that the
outline-item being opened is on. <i>item-value</i> is
the current value of this outline-item. <i>range</i> is
the list of child items currently stored as the <a href="../r/range.htm"><b>range</b></a> of the outline-item.
<p id="7">
</p>
When a custom <a href="../r/range-on-open.htm"><b>range-on-open</b></a> method creates new
outline-items, these items typically do not in turn have child items
yet, because such items would be created later if and when <a href="../r/range-on-open.htm"><b>range-on-open</b></a> is further
called for the items being created now.  The outline will not know at
this time whether <a href="../r/range-on-open.htm"><b>range-on-open</b></a> would later return
further child items, and so by default would draw the new items as
leaf nodes.  To prevent this from happening, the <a href="../h/has-range-on-open.htm"><b>has-range-on-open</b></a> property of each
new item being created should be set to true if that item is expected
to have child items if and when it is opened later.
</p>

<p id="8">
The user is allowed to open all descendent items of an outline-item
either by control-clicking its icon or by selecting the item and
pressing control-right-arrow.  This could cause many items (or even an
infinite number if items loop) to be opened if <a href="../r/range-on-open.htm"><b>range-on-open</b></a> methods are written in a way that
allow that. If this recursive-opening operation is taking a long
time, the user can press the Escape key to interrupt the operation and
display whatever items have been opened so far.
</p>

<p id="9">
Below is the <a href="../r/range-on-open.htm"><b>range-on-open</b></a> method from the
<a href="../../../ide-menus-and-dialogs/navigator-dialog.htm">Navigator
Dialog's</a> basic outline example.
</p>
<pre id="10">
;; The generic function range-on-open is called whenever an
;; outline-item is opened.  We add this method to lazily open the
;; outline-items in the outline in the right half of the dialog.
(defmethod range-on-open ((outline my-class-outline) item-value range)
  
  ;; If this item has already been opened, then the range we gave
  ;; it last time is passed back in on this call.  Assume that the
  ;; set of subclasses we found previously is still current, and
  ;; just return them again to show the same subclasses this time.
  (or range
      
      ;; If no child items were passed in, then either this
      ;; class has no subclasses or this outline-item has not
      ;; yet been opened.  So find the subclasses for the latter
      ;; case and create new outline-items for them the first
      ;; time the user opens this item.
      (mapcar #'make-subclass-item-lazily
        (mop:class-direct-subclasses item-value))))

;; This function is used by the outline in the right half of the dialog
;; to create outline-items "lazily" for the direct subclasses of a class
;; when that class' outline-item is opened by the user.
(defun make-subclass-item-lazily (class)
  (make-instance 'outline-item
    :value class
    :state :closed
    
    ;; Since this outline is opening items lazily, Common Graphics doesn't yet
    ;; know if the outline-item is REALLY a "leaf" with no sub-items.
    ;; So check ahead for subclasses of this subclass, and if there
    ;; are any then tell the outline to draw this item as an
    ;; openable item rather than as a leaf.
    :has-range-on-open (and (mop:class-direct-subclasses class) t)))
</pre>





<hr><p id="11"><small>Copyright (c) 1998-2010, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br><small>Documentation for Allegro CL version 8.2. This page was not revised from the 8.1 page.</small><br>
<small>Created 2010.1.21.</small>
<br></p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"></td><td align="left" bgcolor="#00FFFF"></td><td align="center" bgcolor="#00FFFF"><a href="../../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/cg/r/range-on-open.htm">8.1 version</a></td></tr></table></body></html>