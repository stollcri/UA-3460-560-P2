<html><head><meta http-equiv="content-type" name="description" content="text/html; charset=UTF-8"> <title>read-cell-value</title><link rel="stylesheet" href="../../../acldoc-styles.css" type="text/css"></head><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><b>Generic Function</b></td><td align="left" bgcolor="#00FFFF"><b>Package: cg</b></td><td align="center" bgcolor="#00FFFF"><a href="../../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/cg/r/read-cell-value.htm">8.1 version</a></td></tr></table><h2 id="2">read-cell-value</h2>

<p id="3"><b>Arguments: </b><i>
row column row-number column-number
</i></p>

<p id="4">
This generic function may be called to retrieve a value from an
application's master data to display in the grid cell defined by the
<i>row</i> and <i>column</i> arguments.
The <i>row-number</i> and
<i>column-number</i> arguments define which replication
of replicated rows or columns is being addressed (see <a href="../s/section-count.htm"><b>section-count</b></a>).
</p>
<p id="5">
Typically <a href="../r/read-cell-value.htm"><b>read-cell-value</b></a> is called by a
<a href="../d/draw-cell.htm"><b>draw-cell</b></a> method
to find the value to draw in a particular cell. If the grid column
uses one of the built-in grid-column classes such as <a href="../../../classes/cg/editable-text-column-mixin.htm"><code>editable-text-column-mixin</code></a>, then
the draw-cell method that is supplied with the built-in column class
will call <a href="../r/read-cell-value.htm"><b>read-cell-value</b></a>
internally. Otherwise an application may supply custom <a href="../d/draw-cell.htm"><b>draw-cell</b></a> methods that
call <a href="../r/read-cell-value.htm"><b>read-cell-value</b></a>. The default
<a href="../r/read-cell-value.htm"><b>read-cell-value</b></a>
method (shown below) assumes that the common grid paradigm is being
used where each grid row represents a data object (such as an
employee) and each grid column represents an attribute of those
objects (such as an employee's department).
</p>
<pre id="6">
;; The default read-cell-value method
(defmethod read-cell-value ((row grid-row)(column grid-column)
                            row-number column-number)
  (declare (ignore row-number column-number))
  (let ((data-object (data-object row)))
    (and data-object
         (funcall (data-reader column)
                  data-object))))
</pre>
<p id="7">
The default method may be used for cells that fit this paradigm if the
application has therefore supplied <a href="../d/data-object.htm"><b>data-object</b></a> values for the grid
rows and <a href="../d/data-reader.htm"><b>data-reader</b></a> functions for the grid
columns. For grids that do not fit the
object-rows-and-attribute-columns paradigm, the application could
either supply a <a href="../r/read-cell-value.htm"><b>read-cell-value</b></a> method that reads
grid data from the application in a custom way, or else not use
<a href="../r/read-cell-value.htm"><b>read-cell-value</b></a>
at all in its draw-cell methods.
</p>
<p id="8">
For example, a <a href="../d/draw-cell.htm"><b>draw-cell</b></a> method to display a
pixmap representing each employee's department could be written as
follows (where the application has supplied a department-pixmap
function):
</p>
<pre id="9">
(defmethod draw-cell ((row employee-row) (col department-column)
                      subrow-num subcolumn-num cell-box stream)
  (let* ((department (read-cell-value row column subrow-num subcolumn-num)))
    (copy-to-stream (department-pixmap department)
      stream cell-box)))
</pre>
<p id="10">
The above call to the default <a href="../r/read-cell-value.htm"><b>read-cell-value</b></a> method depends on
the grid row having a <a href="../d/data-object.htm"><b>data-object</b></a> (which would typically
be an instance of the "employee" class), and on the grid column having
a <a href="../d/data-reader.htm"><b>data-reader</b></a>
that is the name of a function, such as employee-department, that will
return the department of that data-object. Alternately, since the
above method already knows that the column is a department-column,
instead of calling <a href="../r/read-cell-value.htm"><b>read-cell-value</b></a> it could instead
call (employee-department (data-object row)).
</p>

<h3 id="11">Compatibility note:</h3>

<p id="12">
The <i>row-number</i> and
<i>column-number</i> arguments are new to version 6.2.
Applications that define methods on this generic function must add the
new parameters to the method definitions.  And any application calls to
this generic function must pass the new arguments (just pass zeros to
retain the old behavior). See the new example on the Examples tab of
the <a href="../../../ide-menus-and-dialogs/navigator-dialog.htm">Navigator</a> dialog called
<b>Grid-widget: a basic replicated editable-text column</b> to see how
to write a <a href="../r/read-cell-value.htm"><b>read-cell-value</b></a> method that uses
these handy new arguments.
</p>
<p id="13">
See also <a href="../w/write-cell-value.htm"><b>write-cell-value</b></a> and the
description of the <a href="../../../classes/cg/grid-widget.htm"><code>grid-widget</code></a>.
</p>





<hr><p id="14"><small>Copyright (c) 1998-2010, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br><small>Documentation for Allegro CL version 8.2. This page was not revised from the 8.1 page.</small><br>
<small>Created 2010.1.21.</small>
<br></p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"></td><td align="left" bgcolor="#00FFFF"></td><td align="center" bgcolor="#00FFFF"><a href="../../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/cg/r/read-cell-value.htm">8.1 version</a></td></tr></table></body></html>