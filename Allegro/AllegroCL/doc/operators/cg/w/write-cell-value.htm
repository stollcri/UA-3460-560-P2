<html><head><meta http-equiv="content-type" name="description" content="text/html; charset=UTF-8"> <title>write-cell-value</title><link rel="stylesheet" href="../../../acldoc-styles.css" type="text/css"></head><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><b>Generic Function</b></td><td align="left" bgcolor="#00FFFF"><b>Package: cg</b></td><td align="center" bgcolor="#00FFFF"><a href="../../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/cg/w/write-cell-value.htm">8.1 version</a></td></tr></table><h2 id="2">write-cell-value</h2>

<p id="3"><b>Arguments: </b><i>
grid-row grid-column row-number column-number value
</i></p>

<p id="4">
This generic function may be called to write a value that the user has
interactively entered into the grid cell defined by the
<i>row</i> and <i>column</i> arguments
back into an application's master data.  The
<i>row-number</i> and <i>column-number</i>
arguments define which replication of replicated rows or columns is
being addressed (see <a href="../s/section-count.htm"><b>section-count</b></a>).
</p>
<p id="5">
Typically <a href="../w/write-cell-value.htm"><b>write-cell-value</b></a> is called by a
<a href="../c/cell-click.htm"><b>cell-click</b></a> method
or a <a href="../c/cell-key-down.htm"><b>cell-key-down</b></a> method that has
interpreted a new cell value from the end user's mouse or keyboard
gesture. If the grid column uses one of the built-in grid-column
classes such as <a href="../../../classes/cg/editable-text-column-mixin.htm"><code>editable-text-column-mixin</code></a>, then
the <a href="../c/cell-click.htm"><b>cell-click</b></a> or
<a href="../c/cell-key-down.htm"><b>cell-key-down</b></a>
method that is supplied with the built-in column class will call
write-cell-value internally. Otherwise an application may supply
custom <a href="../c/cell-click.htm"><b>cell-click</b></a>
or <a href="../c/cell-key-down.htm"><b>cell-key-down</b></a>
methods that call write-cell-value. The default write-cell-value
method (shown below) assumes that the common grid paradigm is being
used where each grid row represents a data object (such as an
employee) and each grid column represents an attribute of those
objects (such as an employee's department).
</p>
<pre id="6">
;; default write-cell-value method
(defmethod write-cell-value ((row grid-row)(column grid-column)
                             row-num column-num value)
  (declare (ignore row-num column-num))
  (let* ((data-object (data-object row)))
    (and data-object
         (let* ((data-writer (data-writer column)))
           (funcall (if (functionp data-writer)
                        data-writer
                      ;; This is needed for (setf foo) cases.
                      (fdefinition data-writer))
                    value data-object)))))
</pre>
<p id="7">
The default method may be used for cells that fit this paradigm if the
application has therefore supplied <a href="../d/data-object.htm"><b>data-object</b></a> values for the grid
rows and <a href="../d/data-writer.htm"><b>data-writer</b></a> functions for the grid
columns. For grids that do not fit the
object-rows-and-attribute-columns paradigm, the application could
either supply a write-cell-value method that writes grid data to the
application in a custom way, or else not use write-cell-value at all
in its <a href="../c/cell-click.htm"><b>cell-click</b></a>
and <a href="../c/cell-key-down.htm"><b>cell-key-down</b></a>
methods.
</p>

<h3 id="8">Verifying user-entered values in a write-cell-value method</h3>

<p id="9">
Even if you can use the default <a href="../w/write-cell-value.htm"><b>write-cell-value</b></a> method, you may still want to
add your own method in order to validate the value that the user has
entered, for example. Here is an example <a href="../w/write-cell-value.htm"><b>write-cell-value</b></a> method that could be used with
an <a href="../../../classes/cg/editable-text-column-mixin.htm"><code>editable-text-column-mixin</code></a> column to allow the
user to enter only integers.
</p>

<pre id="10">
(defmethod write-cell-value ((row my-grid-row)(column my-grid-column)
                             row-number column-number value)

  ;; Read a lisp object from the text that the user typed.
  ;; Alternately you could use a data-write-converter function
  ;; to convert the string.
  (let* ((object (ignore-errors (read-from-string value))))

    ;; Make sure that the object is an integer.
    (if* (integerp object)

            ;; Don't bother to write the integer to the master data
            ;; if it's equal to the current value.
       then (unless (= object
                       (read-cell-value row column
                                        row-number column-number))

              ;; Call the default write-cell-value method, which
              ;; will call this column's data-writer function on
              ;; this row's data-object.
              (call-next-method row column row-number column-number

                                ;; Pass the converted value explicitly
                                ;; if you didn't use a
                                ;; data-write-converter function.
                                object))

       else (pop-up-message-dialog
             nil "Invalid Value" "The value must be an integer."
             warning-icon "~OK"))))
</pre>

<h3 id="11">Compatibility note:</h3>

<p id="12">
The <i>row-number</i> and
<i>column-number</i> arguments are new to version 6.2.
Applications that define methods on this generic function must add the
new parameters to the method definitions.  And any application calls to
this generic function must pass the new arguments (just pass zeros to
retain the old behavior). See the new example on the Examples tab of
the <a href="../../../ide-menus-and-dialogs/navigator-dialog.htm">Navigator</a> dialog called
<b>Grid-widget: a basic replicated editable-text column</b> to see how
to write a <a href="../w/write-cell-value.htm"><b>write-cell-value</b></a> method that uses
these handy new arguments.
</p>
<p id="13">
See also <a href="../r/read-cell-value.htm"><b>read-cell-value</b></a> and the description
of the <a href="../../../classes/cg/grid-widget.htm"><code>grid-widget</code></a>.
</p>





<hr><p id="14"><small>Copyright (c) 1998-2010, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br><small>Documentation for Allegro CL version 8.2. This page was not revised from the 8.1 page.</small><br>
<small>Created 2010.1.21.</small>
<br></p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"></td><td align="left" bgcolor="#00FFFF"></td><td align="center" bgcolor="#00FFFF"><a href="../../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/cg/w/write-cell-value.htm">8.1 version</a></td></tr></table></body></html>