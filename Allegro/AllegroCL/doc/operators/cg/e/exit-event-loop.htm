<html><head><meta http-equiv="content-type" name="description" content="text/html; charset=UTF-8"> <title>exit-event-loop</title><link rel="stylesheet" href="../../../acldoc-styles.css" type="text/css"></head><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><b>Function</b></td><td align="left" bgcolor="#00FFFF"><b>Package: cg</b></td><td align="center" bgcolor="#00FFFF"><a href="../../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/cg/e/exit-event-loop.htm">8.1 version</a></td></tr></table><h2 id="2">exit-event-loop</h2>

<p id="3"><b>Arguments: </b><i>
</i>&amp;key  (<i>process</i> multiprocessing:*current-process*) (<i>exit-code</i> 0)<i>
</i></p>

<p id="4">
This function provides a way to exit non-locally from an
event-handling loop on request. This is an alternative to exiting
based on the conditions that were specified when the event-handling
loop was first entered.
<p id="5">
</p>
If the specified process is currently inside a call to <a href="../e/event-loop.htm"><b>event-loop</b></a> (see <a href="../i/inside-event-loop.htm"><b>inside-event-loop</b></a>), then
this function will post an event (message) to the process that causes
it to return from the call to <a href="../e/event-loop.htm"><b>event-loop</b></a> when the process reads
the posted event. If the process is not inside a call to <a href="../e/event-loop.htm"><b>event-loop</b></a>, then nothing
is done.
<p id="6">
</p>
The process will not exit its call to <a href="../e/event-loop.htm"><b>event-loop</b></a> until it returns from
handling the event that it is currently handling (if any) and it
handles any already-queued events. If the process is inside nested
calls to <a href="../e/event-loop.htm"><b>event-loop</b></a> (which would not
normally be the case), then only the innermost call is exited for each
call to <a href="../e/exit-event-loop.htm"><b>exit-event-loop</b></a>.
<p id="7">
</p>
The value of the <i>process</i> keyword argument should
be the process to which the message will be posted. The default value
is the current process (the value of <a href="../../../variables/system/s_current-process_s.htm"><code>*current-process*</code></a>).
<p id="8">
</p>
The value of the <i>exit-code</i> keyword argument
should be a value that will be returned from the call to <a href="../e/event-loop.htm"><b>event-loop</b></a>. When a
standalone Common Graphics application is generated from a project,
then typically either the initial process of the application calls
<a href="../e/event-loop.htm"><b>event-loop</b></a>
internally (when a window is returned from the <a href="../../ide/on-initialization.htm"><b>on-initialization</b></a> function) or else
the <a href="../../ide/on-initialization.htm"><b>on-initialization</b></a> function calls
<a href="../e/event-loop.htm"><b>event-loop</b></a> as the
last thing that its body does. In either of these cases, the value
returned by <a href="../e/event-loop.htm"><b>event-loop</b></a> will then be returned to
the operating system as the application exits. Therefore, this value
normally should be an exit code that would make sense to the operating
system (when the specified process is the initial one, which would
cause the program to exit). The default is zero, which in most
operating systems means that the program completed successfully.  An
application could return other values when it knows that it is exiting
due to a failure.
</p>

<hr><p id="9"><small>Copyright (c) 1998-2010, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br><small>Documentation for Allegro CL version 8.2. This page was not revised from the 8.1 page.</small><br>
<small>Created 2010.1.21.</small>
<br></p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"></td><td align="left" bgcolor="#00FFFF"></td><td align="center" bgcolor="#00FFFF"><a href="../../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/cg/e/exit-event-loop.htm">8.1 version</a></td></tr></table></body></html>