<html><head><meta http-equiv="content-type" name="description" content="text/html; charset=UTF-8"> <title>double-buffered</title><link rel="stylesheet" href="../../../acldoc-styles.css" type="text/css"></head><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><b>Generic Function</b></td><td align="left" bgcolor="#00FFFF"><b>Package: cg</b></td><td align="center" bgcolor="#00FFFF"><a href="../../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../../introduction.htm#updates-s">Moderately revised from 8.1.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/cg/d/double-buffered.htm">8.1 version</a></td></tr></table><h2 id="2">double-buffered</h2>

<p id="3"><b>Arguments: </b><i>
window-or-lisp-widget
</i></p>

<p id="4">
Returns whether a window or a lisp-widget uses a memory bitmap to
reduce flashing effects when the window is redisplayed.  The value may
be set either by calling <a href="../d/double-buffered.htm"><b>(setf double-buffered)</b></a> or by passing
the :double-buffered initarg when using <a href="../m/make-window.htm"><b>make-window</b></a> to create the window or <a href="../../../../ansicl/dictentr/make-ins.htm"><b>make-instance</b></a> to create the
lisp-widget.
</p>
<p id="5">
<i>window-or-lisp-widget</i> should be either an
instance of <a href="../../../classes/cg/basic-pane.htm"><code>basic-pane</code></a> or
one of its subclasses, or an instance of <a href="../../../classes/cg/lisp-widget.htm"><code>lisp-widget</code></a> or one of its subclasses.  The value
should be true to put the window into double-buffering mode, or
<code>nil</code> to take it out of double-buffering mode.
The default value is <code>nil</code> except for <a href="../../../classes/cg/outline.htm"><code>outline</code></a> and <a href="../../../classes/cg/grid-widget.htm"><code>grid-widget</code></a>, where the default is <code>t</code>.
</p>
<p id="6">
Double-buffering works by redirecting all drawing function calls to
actually draw on the window's internal memory bitmap, and later
copying the memory bitmap to the visible window in a single operation.
This typically eliminates the flash that occurs when a window is first
blanked out before redrawing its content.  This flash is often
noticable when the user interactively scrolls or resizes a window, or
when the application programmatically updates the contents of a window
for animation effects.
</p>
<p id="7">
Drawing is redirected to the memory bitmap only when a drawing
function is called inside a <a href="../r/redisplay-window.htm"><b>redisplay-window</b></a> method that was called by
Common Graphics (rather than the application calling it directly), or
when the drawing function is called inside a <a href="../w/with-double-buffering.htm"><b>with-double-buffering</b></a> macro call. When an
application updates the contents of a window, it normally should call
<a href="../i/invalidate.htm"><b>invalidate</b></a> on the window to
trigger a redisplay (and then perhaps <a href="../u/update-window.htm"><b>update-window</b></a> to force the redisplay to happen
immediately), and then Common Graphics will call the window's <a href="../r/redisplay-window.htm"><b>redisplay-window</b></a> method. But if you
really need to draw directly to a window and would still like
double-buffering to occur, then this can be achieved by doing the
drawing inside a call to <a href="../w/with-double-buffering.htm"><b>with-double-buffering</b></a>.
</p>
<p id="8">
The <a href="../d/double-buffered.htm"><b>double-buffered</b></a> property
may not be applied to os-widgets because Common Graphics does not have
control over the drawing of them.  In addition, the <a href="../../../classes/cg/bitmap-pane.htm"><code>bitmap-pane</code></a> window and the <a href="../../../classes/cg/drawable.htm"><code>drawable</code></a> and <a href="../../../classes/cg/multi-picture-button.htm"><code>multi-picture-button</code></a> lisp-widgets implement
special types of double-buffering, and so this general
double-buffering facility may not be used with instances of those
classes.  (If you do turn the double-buffered property on for them, a
warning is signaled and the request is ignored.)
</p>
<p id="9">
The <a href="../d/double-buffered.htm"><b>double-buffered</b></a> property
will automatically create a memory bitmap that is the size of the
window's interior, and replace it with a larger one when needed.  A
<a href="../../../classes/cg/bitmap-pane.htm"><code>bitmap-pane</code></a>, by contrast,
creates a memory bitmap that is the size of the entire scrollable page
(or canvas) of the window.  So a bitmap-pane is more expensive in
terms of memory usage, but will also remember an entire drawing so
that the application does not need to redraw it at all when the window
is exposed or scrolled.
</p>

<p id="10">
Creating or resizing a double-buffered window could signal an error of
type <a href="../../../classes/cg/memory-bitmap-not-created.htm"><code>memory-bitmap-not-created</code></a> if there is not enough
memory for the memory bitmap.
</p>


<h3 id="11">
GTK Note
</h3>

<p id="12">
This property has no effect on GTK, which always does its own
double-buffering internally.  All windows on GTK will therefore behave
as if this property is true.
</p>

<h3 id="13">
Example
</h3>

<p id="14">
There is a complete code example of using the double-buffered property
for animation in the section <a href="../../../cg/cg-drawing.htm#animation-1">Animation</a> in <a href="../../../cg/cg-drawing.htm">cg-drawing.htm</a>.
</p>

<hr><p id="15"><small>Copyright (c) 1998-2010, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br><small>This page has had moderate revisions compared to the 8.1 page.</small><br>
<small>Created 2010.1.21.</small>
<br></p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"></td><td align="left" bgcolor="#00FFFF"></td><td align="center" bgcolor="#00FFFF"><a href="../../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../../introduction.htm#updates-s">Moderately revised from 8.1.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/cg/d/double-buffered.htm">8.1 version</a></td></tr></table></body></html>