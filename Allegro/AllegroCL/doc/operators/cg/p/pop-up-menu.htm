<html><head><meta http-equiv="content-type" name="description" content="text/html; charset=UTF-8"> <title>pop-up-menu</title><link rel="stylesheet" href="../../../acldoc-styles.css" type="text/css"></head><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><b>Generic Function</b></td><td align="left" bgcolor="#00FFFF"><b>Package: cg</b></td><td align="center" bgcolor="#00FFFF"><a href="../../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/cg/p/pop-up-menu.htm">8.1 version</a></td></tr></table><h2 id="2">pop-up-menu</h2>

<p id="3"><b>Arguments: </b><i>
menu 
</i> &amp;optional <i>window-or-screen position horizontal-justification vertical-justification button</i><i>
</i></p>

<p id="4">
This function returns two values after displaying a pop-up-menu at the
mouse cursor or at an arbitrary position. If a menu-item is chosen by
the user, it then calls <a href="../h/handle-menu-selection.htm"><b>handle-menu-selection</b></a> on the chosen
menu-item and returns the value returned by <a href="../h/handle-menu-selection.htm"><b>handle-menu-selection</b></a>. (By default
the return value will be the value of the selected menu-item, since
the default <a href="../h/handle-menu-selection.htm"><b>handle-menu-selection</b></a> method
returns the value returned by the menu's <a href="../o/on-click.htm"><b>on-click</b></a> function, and the default
<a href="../o/on-click.htm"><b>on-click</b></a> function
of a menu simply returns the menu's value.) This function returns <code>nil</code>
if the user cancels from the menu by clicking outside the menu or
pressing the ESCAPE key. A second returned value is t if the user
chose an item or <code>nil</code> if the user canceled the menu.
</p>
<p id="5">
<b><i>menu</i></b> is the menu to display. Menus are
created by calling <a href="../o/open-menu.htm"><b>open-menu</b></a>.
</p>
<p id="6">
<b><i>window-or-screen</i></b> is a window or the
screen. The default value is the screen. This argument is relevant
only when the position argument is passed, in which case the position
is in this stream's coordinate system. In an application with multiple
Common Graphics threads, this argument should not be a window in a
thread other than the thread that is calling <a href="../p/pop-up-menu.htm"><b>pop-up-menu</b></a>, because that would
prevent keystrokes from alternately being used to select a menu item
or exit the menu.
</p>
<p id="7">
<b><i>position</i></b> may be either <code>nil</code> to place the menu at the current mouse cursor
position or a position (see <a href="../m/make-position.htm"><b>make-position</b></a>) to place the menu at
an explicit position. The default is <code>nil</code>. The
position should be in the device coordinates of
<i>stream</i>; that is, relative to the upper-left
interior corner of the window or screen.
</p>
<p id="8">
<b><i>horizontal-justification</i></b> may be either
<code>nil</code>, <code>:left</code>,
<code>:center</code>, or <code>:right</code> to indicate
which edge or center of the menu should horizontally align with the
specified menu position. (If <i>position</i> is <code>nil</code>, this aligns the specified part of the menu with
the mouse cursor.)  The default is <code>:left</code>, and
<code>nil</code> is interpreted as
<code>:left</code>.
</p>
<p id="9">
<b><i>vertical-justification</i></b> may be either
<code>nil</code>, <code>:top</code>,
<code>:center</code>, or <code>:bottom</code> to indicate
which edge or center of the menu should vertically align with the
specified menu position. (If <i>position</i> is <code>nil</code>, this aligns the specified part of the menu with
the mouse cursor.)  The default is <code>:top</code>, and
<code>nil</code> is interpreted as
<code>:top</code>.
</p>
<p id="10">
<b><i>button</i></b> may be either
<code>:left</code> or <code>:right</code> to indicate
which buttons may be used to select an item from the
menu. <code>:left</code> indicates that only the left button may
be used. <code>:right</code> indicates that either the left or
right button may be used. Passing <code>:right</code> may be
particularly useful for menus that were invoked by a right click
(typically in a custom <a href="../m/mouse-right-down.htm"><b>mouse-right-down</b></a> method), since
this allows the user to optionally hold the button down while dragging
to the desired item and then to release the mouse button to select the
item and exit the menu with a single click. The default is
<code>:left</code>. On GTK, this argument is ignored, and the
user always must use the left button to select a menu-item.
</p>
<p id="11">
See also the more specialized functions <a href="../p/pop-up-lettered-menu.htm"><b>pop-up-lettered-menu</b></a> and <a href="../p/pop-up-shortcut-menu.htm"><b>pop-up-shortcut-menu</b></a>.
Also, an alternative way to ask the user for a choice from a list is
to call <a href="../a/ask-user-for-choice-from-list.htm"><b>ask-user-for-choice-from-list</b></a>.
This function may be better when the list of choices is large, as it
uses a scrolling <a href="../../../classes/cg/single-item-list.htm"><code>single-item-list</code></a> or <a href="../../../classes/cg/multi-item-list.htm"><code>multi-item-list</code></a>.  For
four choices or fewer, <a href="../a/ask-user-for-choice.htm"><b>ask-user-for-choice</b></a> may be used.
</p>

<p id="12">
<b>Microsoft Windows note</b>: to make it easy for the user to select
a choice or to cancel a pop-up menu, you may want to ensure that a
window from the same process has the keyboard focus, or at least that
such a window is present on the screen.  In Microsoft Windows,
keypresses will apply to a pop-up menu only if the window that
currently has the keyboard focus was created in the process that
popped up the menu.  Otherwise the Escape key will not dismiss the
menu, and a choice cannot be made with the keyboard.  Clicking the
mouse outside a pop-up menu will dismiss the menu only if the click is
on a window that either was created in the process that is calling
<a href="../p/pop-up-menu.htm"><b>pop-up-menu</b></a>, or is in a window
hierarchy that contains such as window).
</p>

<p id="13">
<b>Example</b>: Here is a simple example where either clicking the
right mouse button or pressing the spacebar will create a pop-up menu
on the fly and call <a href="../p/pop-up-menu.htm"><b>pop-up-menu</b></a> to display it, and then
close the menu afterwards to free up the operating system resource for
the menu.
</p>
<pre id="14">
(defclass my-frame (frame-window)())

(defmethod mouse-right-down ((window my-frame) buttons cursor-pos)
  (declare (ignore buttons cursor-pos))
  (show-my-menu window))

(defmethod virtual-key-down ((window my-frame) buttons
                             (key-code (eql vk-space)))
  (declare (ignore buttons))
  (show-my-menu window))

(defun show-my-menu (window)
  (let* ((menu (open-menu (list (make-instance 'menu-item
                                  :title "~Yellow"
                                  :value 'yellow)
                                (make-instance 'menu-item
                                  :title "~Green"
                                  :value 'green)
                                (make-instance 'menu-item
                                  :title "~Cyan"
                                  :value 'cyan))
                          'pop-up-menu (screen *system*)))
         answer)
    (unwind-protect
        (progn
          (setq answer (pop-up-menu menu (screen *system*) nil
                                    :left :center :right))
          (when answer
            (setf (background-color window)(symbol-value answer))
            (invalidate window))) ;; redraw in new color
      (close menu))))

(make-window :color-test
  :class 'my-frame
  :title "Right-Click or Press the Spacebar to Change Color")
</pre>





<hr><p id="15"><small>Copyright (c) 1998-2010, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br><small>Documentation for Allegro CL version 8.2. This page was not revised from the 8.1 page.</small><br>
<small>Created 2010.1.21.</small>
<br></p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"></td><td align="left" bgcolor="#00FFFF"></td><td align="center" bgcolor="#00FFFF"><a href="../../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/cg/p/pop-up-menu.htm">8.1 version</a></td></tr></table></body></html>