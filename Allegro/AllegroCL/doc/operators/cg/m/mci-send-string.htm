<html><head><meta http-equiv="content-type" name="description" content="text/html; charset=UTF-8"> <title>mci-send-string</title><link rel="stylesheet" href="../../../acldoc-styles.css" type="text/css"></head><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><b>Function</b></td><td align="left" bgcolor="#00FFFF"><b>Package: cg</b></td><td align="center" bgcolor="#00FFFF"><a href="../../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/cg/m/mci-send-string.htm">8.1 version</a></td></tr></table><h2 id="2">mci-send-string</h2>

<p id="3"><b>Arguments: </b><i>
command-string </i>&amp;key <i>callback-window</i><i>
</i></p>

<p id="4">
Command-string should be a standard MCI command string, exactly the
same as if it were passed from C or any other language using the
winapi function mciSendString. Refer to the Microsoft MCI command
string documentation to learn how to formulate particular strings.
</p>
<p id="5">
If callback-window is passed (it should be a window) and the command
string includes the word "notify", then when the operation has
completed the <a href="../m/mci-notify.htm"><b>mci-notify</b></a> generic function will be
called with the callback-window as its first argument. You may respond
to these notifications by defining your own mci-notify method on your
own window class, and then passing an instance of that class as the
callback window to <a href="../m/mci-send-string.htm"><b>mci-send-string</b></a>.  The parameters of
<a href="../m/mci-notify.htm"><b>mci-notify</b></a> are:
((window basic-pane) status device-id).
</p>
<p id="6">
<a href="../m/mci-send-string.htm"><b>mci-send-string</b></a>
is an alternative to using various other mci functions such as <a href="../m/mci-open.htm"><b>mci-open</b></a> and <a href="../m/mci-play.htm"><b>mci-play</b></a>.  Since each
command is sent to the operating system as a literal string, <a href="../m/mci-send-string.htm"><b>mci-send-string</b></a> may not
be as efficient as the other mci functions, but its advantages are
that (1) you can send the same standard mci strings that you would
send from any other language using the winapi function mciSendString,
and (2) you can presently send any MCI command this way, whereas
Allegro has not yet implemented some MCI commands as individual
functions.
</p>
<p id="7">
The following example will open the "tada" wave file from the Windows
<i>media</i> subdirectory (in win2000 it is
<i>winnt\media\</i>), play the "da" part of the sound
(starting at 140 milliseconds into the sound), and then close the wave
device. Notification messages are sent arbitrarily to the debug
window; since this window uses the default <a href="../m/mci-notify.htm"><b>mci-notify</b></a> method, notification
messages are simply printed. Note that when we open the wave device we
assign it an arbitrary alias of "yay" by which we can refer to it
later.
</p>
<pre id="8">
&gt; (mci-send-string
     &quot;open waveaudio!c:\\windows\\media\\tada.wav 
      alias yay notify&quot;
     :callback-window (find-window :debug-window))
&quot;1&quot;
</pre>
<p id="9">
The default mci-notify method was called on :debug-window with a
:success notification for MCI device 1.
</p>
<pre id="10">
&gt; (mci-send-string &quot;play yay from 140 notify&quot;
    :callback-window (find-window :debug-window))
&quot;&quot;
</pre>
<p id="11">
The default mci-notify method was called on :debug-window with a :success notification for MCI device 1.
</p>
<pre id="12">
&gt; (mci-send-string &quot;close yay&quot;)
&quot;&quot;
</pre>
<p id="13">
See <a href="../../../cg/cg-mci.htm">cg-mci.htm</a> for information about
MCI support in Common Graphics.
</p>





<hr><p id="14"><small>Copyright (c) 1998-2010, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br><small>Documentation for Allegro CL version 8.2. This page was not revised from the 8.1 page.</small><br>
<small>Created 2010.1.21.</small>
<br></p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"></td><td align="left" bgcolor="#00FFFF"></td><td align="center" bgcolor="#00FFFF"><a href="../../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/cg/m/mci-send-string.htm">8.1 version</a></td></tr></table></body></html>