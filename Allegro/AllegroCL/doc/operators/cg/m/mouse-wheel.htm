<html><head><meta http-equiv="content-type" name="description" content="text/html; charset=UTF-8"> <title>mouse-wheel</title><link rel="stylesheet" href="../../../acldoc-styles.css" type="text/css"></head><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><b>Generic Function</b></td><td align="left" bgcolor="#00FFFF"><b>Package: cg</b></td><td align="center" bgcolor="#00FFFF"><a href="../../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/cg/m/mouse-wheel.htm">8.1 version</a></td></tr></table><h2 id="2">mouse-wheel</h2>

<p id="3"><b>Arguments: </b><i>
window buttons delta-major delta-minor x y
</i></p>

<p id="4">
This generic function is called when the user rotates the wheel of the
mouse (if it has a wheel). The default behavior is to scroll the
window if possible, but an application may add <a href="../m/mouse-wheel.htm"><b>mouse-wheel</b></a> methods that scroll in
some alternate way or interpret the gesture in some arbitrary way
unrelated to scrolling. An application should not call <a href="../m/mouse-wheel.htm"><b>mouse-wheel</b></a>.
</p>
<p id="5">
<a href="../m/mouse-wheel-present.htm"><b>mouse-wheel-present</b></a> may be called
to determine if the end user's mouse has a wheel, though <a href="../m/mouse-wheel.htm"><b>mouse-wheel</b></a> will simply
not be called if the mouse does not have a wheel.
</p>
<p id="6">
When defining a <a href="../m/mouse-wheel.htm"><b>mouse-wheel</b></a> method to do some
arbitrary non-scrolling operation, the window should have no
scrollbars. The reason is that if the operating system sees that the
wheel message handler (the <a href="../m/mouse-wheel.htm"><b>mouse-wheel</b></a> function in Common
Graphics) could have scrolled the window in the requested direction
but did not, then the Operating System sends scroll messages to scroll the
window. So there is no way to override the operating system's
scrolling behavior for the wheel if either scrollbar is given to the
window.
</p>
<p id="7">
The default method passes the message back to the Operating System,
which then scrolls the window vertically if it has a vertical
scrollbar, or else horizontally if it has a horizontal scrollbar, and
otherwise passes the wheel message to the parent window (if any),
resulting in <a href="../m/mouse-wheel.htm"><b>mouse-wheel</b></a> being called on the
parent window. The Operating System will scroll the window by calling
<a href="../u/user-scroll.htm"><b>user-scroll</b></a> a
number of times for each notch that the wheel was rotated, specifying
a :char scroll to scroll by one line-height or character-width each
time. The number of times that <a href="../u/user-scroll.htm"><b>user-scroll</b></a> will be called for each
notch is equal to the value returned by <a href="../m/mouse-wheel-scroll-lines.htm"><b>mouse-wheel-scroll-lines</b></a>.  (If the
user has set the mouse wheel to do page scrolls in Control Panel, then
<a href="../u/user-scroll.htm"><b>user-scroll</b></a> will
instead be called once to do a page scroll.)
</p>
<p id="8">
This generic function is not supported in Windows 95, where it will
not be called. It will be called in all other versions of Windows
that Common Graphics runs on.
</p>
<p id="9">
The arguments are:
</p>
<ul>
<li id="10">
<i>buttons</i> works as in <a href="../m/mouse-left-down.htm"><b>mouse-left-down</b></a>. In addition,
certain mice such as the MicroSoft IntelliMouse that have extra
buttons may pass the first-x-button or second-x-button bits when these
buttons are down.
</li>
<li id="11">
<i>delta-major</i> is an integer denoting how many
notches the user rotated the wheel. Positive values indicate pulling
the wheel backward (equivalent to dragging a scrollbar downward or
rightward) and negative values indicate pushing the wheel forward
(equivalent to dragging a scrollbar upward or leftward).
</li>
<li id="12">
<i>delta-minor</i> is an integer denoting a fine
rotation less than a single notch. This is not yet supported by
Windows or wheel mice; the value should always be zero currently.
</li>
<li id="13">
<i>x</i> is an integer indicating the pixel distance
from the left edge of the screen to the current mouse cursor position.
</li>
<li id="14">
<i>y</i> is an integer indicating the pixel distance
from the top edge of the screen to the current mouse cursor position.
</li>
</ul>

<h3 id="15">Example:</h3>

<p id="16">
The following is a sample mouse-wheel method that emulates the
default Operating System behavior except that it scrolls the set of
lines for each wheel notch (the default is 3) or entire wheel "roll"
all at once rather than line one at a time as the default OS behavior
does.  This will more quickly scroll a window but the scrolling motion
will not look as smooth.  This example illustrates the various
considerations that must be made when writing custom mouse wheel
behavior.
</p>
<pre id="17">
(defmethod mouse-wheel ((window my-window) buttons
                        delta-major delta-minor x y)
  (declare (ignore buttons delta-minor x y))
  
  ;; This method emulates the OS behavior for scrolling with the mouse
  ;; wheel, except that it scrolls more quickly (but less smoothly)
  ;; in one step rather than scrolling each line separately.
  (let* ((scroll-lines (mouse-wheel-scroll-lines))
         (scrollbars (scrollbars window))
         (horizontal (eq scrollbars :horizontal)))
    
    ;; Avoid handling this wheel message if the user has disabled
    ;; the wheel in Control Panel or if the wheel rotation is zero.
    (unless (or (eq scroll-lines 0)    ;; Wheel disabled
                (eq delta-major 0))    ;; No actual wheel rotation
      
      ;; If a scrollbar is turned on, then this method
      ;; interprets the mouse wheel to scroll the window.
      (if* scrollbars
              
              ;; If the user has set the mouse to scroll by pages
              ;; in the Control Panel, then scroll by a page for
              ;; a wheel "roll" of any number of notches.
         then (if* (eq scroll-lines t)
                 then (user-scroll window
                                   (if* (minusp delta-major)
                                      then (if horizontal :left :up)
                                      else (if horizontal :right :down))
                                   :page)
                      
                      ;; Otherwise scroll by the number of lines
                      ;; per notch specified in Control Panel (default 3).
                      ;; Do this in one jump for a quick scroll, unlike
                      ;; the OS which would call user-scroll once for each
                      ;; line to be scrolled.
                 else (with-positions (pos1)
                        (scroll
                         window
                         (if* horizontal
                            then (nmake-position
                                     pos1
                                   (* scroll-lines
                                      delta-major
                                      (space-width window))
                                   0)
                            else (nmake-position
                                     pos1 0
                                   (* scroll-lines
                                      delta-major
                                      (line-height window)))))))
              
              ;; This window has no scrollbars, so pass this message on.
              ;; The default method will pass the message to the parent.
         else (call-next-method)))))
</pre>




<hr><p id="18"><small>Copyright (c) 1998-2010, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br><small>Documentation for Allegro CL version 8.2. This page was not revised from the 8.1 page.</small><br>
<small>Created 2010.1.21.</small>
<br></p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"></td><td align="left" bgcolor="#00FFFF"></td><td align="center" bgcolor="#00FFFF"><a href="../../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/cg/m/mouse-wheel.htm">8.1 version</a></td></tr></table></body></html>