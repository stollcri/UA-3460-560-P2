<html><head><meta http-equiv="content-type" name="description" content="text/html; charset=UTF-8"> <title>source-file</title><link rel="stylesheet" href="../../acldoc-styles.css" type="text/css"></head><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><b>Function</b></td><td align="left" bgcolor="#00FFFF"><b>Package: excl</b></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/excl/source-file.htm">8.1 version</a></td></tr></table><h2 id="2">source-file</h2>

<p id="3"><b>Arguments: </b><i>object </i> &amp;optional <i>type</i></p>

<p id="4">
This function returns the source file for <i>object</i>
if such information is available and returns <code>nil</code> otherwise.
</p>

<p id="5">
<i>object</i> identifies the object for which
source-file information is desired. <i>type</i>, if
provided, may be a symbol, a list or t. The behavior of <a href="source-file.htm"><b>source-file</b></a> depends on the value of
<i>type</i>. If <i>type</i> is not
provided, and there is a single source file defining object, the
pathname of that file is returned. If there is no source file
information, <code>nil</code> is returned. If there are
different source files in which are different types of definitions
related to <i>object</i>, a continuable error is
signaled and specific type information is requested if one continues
from the error.</p>

<p id="6">
<i>type</i> may be any symbol, a list of symbols, or
<code>t</code>. If unspecified,
<code>:function</code> and <code>:macro</code> are tried
(i.e., if <i>object</i> is or names a macro,
<i>type</i> defaults to <code>:macro</code>,
otherwise it defaults to <code>:function</code>).
</p>
<p id="7">
The predefined symbols are <code>:function</code>,
<code>:macro</code>, <code>:operator</code>, and
<code>:variable</code>. 
</p>
<p id="8">
<code>:function</code> is used
for functions, generic functions and methods, flavor methods, and
defstruct accessors.
</p>
<p id="9">
<code>:macro</code> is used for
macros. 
</p>
<p id="10">
<code>:operator</code> is used for any type of operator (sort of
a union of <code>:function</code> and
<code>:macro</code>).
</p>
<p id="11">
<code>:variable</code> is used for variables and constants.
</p>
<p id="12"> 
Those are the only objects for which source file information
is automatically recorded. If type is one of these symbols, the
pathname of the relevant source file is returned if the information
exists, and <code>nil</code> if it does not exist. If
there is no object of the specified type identified by
<i>object</i>, an error is signaled. 
</p>
<p id="13">
For example, if
<code>foo</code> is a function (and has no other definitions
recorded), 
</p>

<pre id="14">
(source-file 'foo :function)
</pre>

<p id="15">and </p>

<pre id="16">
(source-file 'foo)
</pre>

<p id="17">
both return the pathname of the source file, if it is known, and
<code>nil</code> if it is not known, but
</p>

<pre id="18">
(source-file 'foo :macro)
</pre>

<p id="19">
will signal an error.
</p>

<p id="20">
<strong>Note:</strong> there may be several source files defining
generic functions and methods named by a symbol. All of these files
are remembered, but only the latest one is printed by
</p>

<pre id="21">
(source-file 'foo :function)
</pre>

<p id="22">or</p>

<pre id="23">
(source-file 'foo)
</pre>

<p id="24">However,</p>

<pre id="25">
(source-file 'foo t)
</pre>

<p id="26">prints a list of dotted pairs identifying all files where something
named by <code>foo</code> is defined, including the file with the
<a href="../../../ansicl/dictentr/defgener.htm"><b>defgeneric</b></a> (if there is one)
and all files containing <a href="../../../ansicl/dictentr/defmetho.htm"><b>defmethod</b></a>'s.</p>

<p id="27">If <i>type</i> is a list of allowable types, a list
of dotted pairs of the form </p>

<pre id="28">
(type . pathname)
</pre>

<p id="29">is returned with a pair for each type for which a source file can
be found. If no source files can be found, <code>nil</code> is returned. No error is signaled even if object
is neither a macro nor a function. </p>

<p id="30">If <i>type</i> is <code>t</code>, again a
list of dotted pairs is returned with pairs for each of the allowable
types for which a source file is known. No error is signaled if no
source file is known for a given type. </p>

<p id="31"><a href="../../../ansicl/dictentr/setfpset.htm"><b>setf</b></a> can be used to
record source file information manually, in which case the
<i>type</i> must be given and be a symbol. </p>

<p id="32">Note that the value of 
<a href="../../variables/excl/s_source-pathname_s.htm"><code>*source-pathname*</code></a>
is a string, while 
<a href="source-file.htm"><b>source-file</b></a> returns a
pathname. The pathname is simply generated by calling the
<a href="../../../ansicl/dictentr/pathnam3.htm"><b>pathname</b></a> 
function with the string as an
argument.</p>

<p id="33">The source file for a definition typed to the top-level 
is the keyword <code>:top-level</code>.</p>

<p id="34">
See also <a href="../../source-file-recording.htm">source-file-recording.htm</a> for general
information on source file recording in Allegro
CL.
</p>

<hr><p id="35"><small>Copyright (c) 1998-2010, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br><small>Documentation for Allegro CL version 8.2. This page was not revised from the 8.1 page.</small><br>
<small>Created 2010.1.21.</small>
<br></p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"></td><td align="left" bgcolor="#00FFFF"></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/excl/source-file.htm">8.1 version</a></td></tr></table></body></html>