<html><head><meta http-equiv="content-type" name="description" content="text/html; charset=UTF-8"> <title>match-regexp</title><link rel="stylesheet" href="../../acldoc-styles.css" type="text/css"></head><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><b>Function</b></td><td align="left" bgcolor="#00FFFF"><b>Package: excl</b></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/excl/match-regexp.htm">8.1 version</a></td></tr></table><h2 id="2">match-regexp</h2>

<p id="3"><b>Arguments: </b><i>string-or-regexp string-to-match </i>&amp;key <i>newlines-special case-fold return start end shortest</i></p>

<p id="4">The <i>string-or-regexp</i> argument is a regular
expression object (the result of <a href="compile-regexp.htm"><b>compile-regexp</b></a>) or it is a string (in which
case it will be compiled into a regular expression object). The
<i>string-to-match</i> is a string to match against the
regular expression. This function will attempt to match the regular
expression against the <i>string-to-match</i> starting
at the first character of the <i>string-to-match</i>,
and if that fails it will look inside the
<i>string-to-match</i> for a match (unless the regular
expression begins with a caret).</p>

<p id="5">The keyword arguments are:</p>

<table width="95%">
<tbody>
  <tr>
    <td Align="top"><i>newlines-special</i></td>
    <td>If true (default is true) then a newline will not 
    match the . (i.e. a period) 
    regular expression. This
    is useful to prevent multiline matches.</td>
  </tr>
  <tr>
    <td vAlign="top"><i>case-fold</i></td>
    <td>If true then the <i>string-to-match</i> 
    is effectively mapped to lower case before
    doing the match. Thus lower case characters in the regular 
    expression match either case
    and upper case characters match only upper case characters.</td>
  </tr>
  <tr>
    <td vAlign="top"><i>return</i></td>
    <td>The return value from a failed match is 
    <code>nil</code>. If the value of return is 
    <code>:string</code>
    then the return value from a successful match are multiple values. 
    The first value is <code>t</code>.
    The second value is the substring of the 
    <i>string-to-match</i> that matched the regular
    expression. The third value (if any) is the substring 
    that matched group 1. The fourth
    value is the substring that matched group 2. 
    And so on. If you use the \| form, then some
    groups may have no associated match in which 
    case <code>nil</code> will be returned as
    that value. In highly nested \| forms, a group may 
    return a match string when in the final
    match that group had no match. <p id="6">If the value of 
    return is <code>:index</code> then it is
    just like <code>:string</code> except that instead of 
    the strings being returned, a cons
    is returned giving the start and end indices in the 
    original <i>string-to-match</i> of
    the match. The end index is one greater than the 
    last character in the substring.</p>
    <p id="7">If the value of return is <code>nil</code> 
    then the one value <code>t</code> is
    returned when the match succeeds.</p></td>
  </tr>
  <tr>
    <td vAlign="top"><i>start</i></td>
    <td>The first character in the 
    <i>string-to-match</i> to match against.</td>
  </tr>
  <tr>
    <td vAlign="top"><i>end</i></td>
    <td>One past the last character in the 
    <i>string-to-match</i> to match against.</td>
  </tr>
  <tr>
    <td vAlign="top"><i>shortest</i></td>
    <td>This makes <a href="match-regexp.htm"><b>match-regexp</b></a> 
    return the shortest rather than the longest
    match. One motivation for this is parsing html. Suppose you 
    want to search for the next
    item in italics, which in html looks like 
    <code>
    &lt;i&gt;foo&lt;/i&gt;
    </code>. Suppose your <i>string</i> is
    <code>&quot;&lt;i&gt;foo&lt;/i&gt; and &lt;i&gt;bar&lt;/i&gt;&quot;</code>.
    The following example shows the difference:
    <pre id="8">
    user(10): (match-regexp &quot;&lt;i&gt;.*&lt;/i&gt;&quot; string)
    &quot;&lt;i&gt;foo&lt;/i&gt; and  &lt;i&gt;bar&lt;/i&gt;&quot;
    user(11): (match-regexp &quot;&lt;i&gt;.*&lt;/i&gt;&quot; string
                        :shortest t)
    &quot;&lt;i&gt;foo&lt;/i&gt;&quot;
     </pre></td>
  </tr>
</tbody>
</table>

<p id="9"><strong>Compilation note</strong>: there is a compiler macro
defined for <a href="match-regexp.htm"><b>match-regexp</b></a>
that will handle in a special way <a href="match-regexp.htm"><b>match-regexp</b></a> calls where the first argument is
a constant string. That is, this form <code>(match-regexp "foo"
x)</code> will compile to code that will arrange to call <a href="compile-regexp.htm"><b>compile-regexp</b></a> on the string when
the code is fasl'ed in. Since the cost of <a href="compile-regexp.htm"><b>compile-regexp</b></a> is high, this saves a lot of
time. </p>

<p id="10">
See <a href="../../regexp.htm">regexp.htm</a>
for more information.
</p>

<hr><p id="11"><small>Copyright (c) 1998-2010, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br><small>Documentation for Allegro CL version 8.2. This page was not revised from the 8.1 page.</small><br>
<small>Created 2010.1.21.</small>
<br></p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"></td><td align="left" bgcolor="#00FFFF"></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/excl/match-regexp.htm">8.1 version</a></td></tr></table></body></html>