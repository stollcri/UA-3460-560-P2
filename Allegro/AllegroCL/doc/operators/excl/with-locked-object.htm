<html><head><meta http-equiv="content-type" name="description" content="text/html; charset=UTF-8"> <title>with-locked-object</title><link rel="stylesheet" href="../../acldoc-styles.css" type="text/css"></head><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><b>Macro</b></td><td align="left" bgcolor="#00FFFF"><b>Package: excl</b></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/excl/with-locked-object.htm">8.1 version</a></td></tr></table><h2 id="2">with-locked-object</h2>

<p id="3"><b>Arguments: </b><i>
(object </i>&amp;key <i>type block non-smp typecheck</i><i>) </i> &amp;body <i>body</i><i>
</i></p>



<p id="4">
This macro expands into code that waits until the executing process
acquires control of the object, then evaluates the forms in the body
as an implicit progn. It then releases control of the object and
returns whatever values the last form in the body returned.
</p>
<p id="5">
The arguments are:
</p>
<ul>
<li id="6">
<b><i>object</i></b>: a form that is evaluated once to
get the object to be locked. the object must be an instance of
<a href="../../classes/excl/lockable-object.htm"><code>lockable-object</code></a> or of a
subclass of <a href="../../classes/excl/lockable-object.htm"><code>lockable-object</code></a> unless the type argument is
included and specifies otherwise
</li>
<li id="7">
<b><i>type</i></b>: can be one of the following
<ul>
<li id="8">
<code>:clos</code> (the default): the object form must evaluate
to an instance of <a href="../../classes/excl/lockable-object.htm"><code>lockable-object</code></a> or of a subclass of
<a href="../../classes/excl/lockable-object.htm"><code>lockable-object</code></a>.
</li>
<li id="9">
<code>:struct</code>: the object form must evaluate to an
instance of <a href="../../classes/excl/synchronizing-structure.htm"><code>synchronizing-structure</code></a> or of a subtype of
<a href="../../classes/excl/synchronizing-structure.htm"><code>synchronizing-structure</code></a>.
</li>
</ul>
</li>
<li id="10">
block: used for special internal functions. Users should not specify
this.
</li>
<li id="11">
non-smp: what code to generate in a non-smp lisp. Legal values are:
<ul>
<li id="12">
<code>:without-scheduling</code> to get the equivalent of
<code>(without-scheduling . body)</code>
</li>
<li id="13">
<code>:without-interrupts</code> to get the equivalent of
<code>(with-delayed-interrupts . body)</code>
</li>
<li id="14">
<code>:atomically</code> (only valid when
the <i>type</i> argument is
<code>:struct</code>) to get the equivalent
of <code>(fast-and-clean . body)</code>
</li>
<li id="15">
[omitted]: to get object-locking code like SMP.
This may be inefficient or even
problematic in a non-smp lisp,
and is not allowed in the 8.1 patch.
</li>
</ul>
</li>
<li id="16">
<b><i>typecheck</i></b>: if specified
as <code>nil</code>, the generated code does not include
an explicit typecheck of the object. If specified as
non-<code>nil</code> the generated code checks that the
object is of the appropriate type. If <i>typecheck</i>
is ommitted, the type check code is generated unless the type argument
is <code>:clos</code> (explicitly or by default)
</li>
</ul>

<p id="17">
It is not an error for a process that already owns an object to try to
lock it again. When this happens, the object is not released until the
outermost lock form is exited.
</p>
<p id="18">
The release of the object is performed in an <a href="../../../ansicl/dictentr/unwind-p.htm"><b>unwind-protect</b></a> cleanup form, so non-local
exits from body are allowed.
</p>
<p id="19">
See <a href="../../smp.htm">smp.htm</a>
and <a href="../../multiprocessing.htm">multiprocessing.htm</a> for more information on
this macro and on multiprocessing.
</p>

<hr><p id="20"><small>Copyright (c) 1998-2010, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br><small>Documentation for Allegro CL version 8.2. This page was not revised from the 8.1 page.</small><br>
<small>Created 2010.1.21.</small>
<br></p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"></td><td align="left" bgcolor="#00FFFF"></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/excl/with-locked-object.htm">8.1 version</a></td></tr></table></body></html>