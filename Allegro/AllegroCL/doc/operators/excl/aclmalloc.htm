<html><head><meta http-equiv="content-type" name="description" content="text/html; charset=UTF-8"> <title>aclmalloc</title><link rel="stylesheet" href="../../acldoc-styles.css" type="text/css"></head><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><b>Function</b></td><td align="left" bgcolor="#00FFFF"><b>Package: excl</b></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/excl/aclmalloc.htm">8.1 version</a></td></tr></table><h2 id="2">aclmalloc</h2>

<p id="3"><b>Arguments: </b><i>size </i>&amp;key <i>restart-relocation</i><i>
</i></p>

<p id="4">Uses the C <strong>aclmalloc()</strong> function to allocate a data
block that is persistent across dumplisp/restarts. The location in the
restarted image is guaranteed to be the same as in the dumped image
(if Lisp is unable to map it to that location, Lisp startup will
fail).  This means that addresses in locations allocated by <a href="aclmalloc.htm"><b>aclmalloc</b></a> will be valid.
</p>
<p id="5">
The block is guaranteed to be aligned to at least an 8-byte
boundary. The returned value is an integer whose magnitude is the
machine address of the allocated block. (0 is returned
if <a href="aclmalloc.htm"><b>aclmalloc</b></a> is unable to
get the requested space.)
</p>

<p id="6">
The <i>size</i> argument specifies the number of bytes
to allocate.
</p>

<p id="7">
The <i>restart-relocation</i> keyword argument has no
effect in Allegro CL. It is intended for possible future enhancements.
</p>

<p id="8">
<a href="aclfree.htm"><b>aclfree</b></a> frees space
allocated by <a href="aclmalloc.htm"><b>aclmalloc</b></a>.
</p>


<h3 id="9">
Note on various Allegro CL malloc and free functions
</h3>

<p id="10">
The space allocated by <a href="malloc.htm"><b>excl:malloc</b></a> and its C counterpart malloc()
(described here collectively as "malloc") is different than the space
allocated by <a href="aclmalloc.htm"><b>excl:aclmalloc</b></a>
and the C <b>aclmalloc()</b> (described collectively as "aclmalloc").
Malloc allocates in space defined and maintained by the system, in
whatever manner the system defines.  Some operating systems allow the
linking in of alternate versions of <b>malloc()</b> and its cohorts
(usually including <b>free()</b>, <b>calloc()</b>, <b>realloc()</b>,
and others), giving some flexibility in debugging malloc bugs (but of
course this need arises much less often in Lisp programming).  The
aclmalloc functionalities are part of the Allegro CL library and
allocate from space usually known as Aclmalloc heap space. <a href="aclmalloc.htm"><b>aclmalloc</b></a> is useful for allocating objects
which should survive the rebirth of a dumped lisp.
</p>
<p id="11">
The <a href="free.htm"><b>free</b></a> and <a href="aclfree.htm"><b>aclfree</b></a> functionalities must always
match objects to free with the mallocs of the same kind; i.e. one
should never <a href="free.htm"><b>free</b></a> an <a href="aclmalloc.htm"><b>aclmalloc</b></a>'d object, nor should one
call an <a href="aclfree.htm"><b>aclfree</b></a> function on
an object created with <a href="malloc.htm"><b>malloc</b></a>.  Note that one <b>can</b> mix <a href="aclmalloc.htm"><b>aclmalloc</b></a>/<a href="aclfree.htm"><b>aclfree</b></a> with <a href="aclmalloc-aligned.htm"><b>aclmalloc-aligned</b></a>/<a href="aclfree-aligned.htm"><b>aclfree-aligned</b></a>, but only after proper
conversions are done; see <a href="../ff/address-to-aligned.htm"><b>ff:address-to-aligned</b></a> and <a href="../ff/aligned-to-address.htm"><b>ff:aligned-to-address</b></a>.
</p>


<hr><p id="12"><small>Copyright (c) 1998-2010, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br><small>Documentation for Allegro CL version 8.2. This page was not revised from the 8.1 page.</small><br>
<small>Created 2010.1.21.</small>
<br></p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"></td><td align="left" bgcolor="#00FFFF"></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/excl/aclmalloc.htm">8.1 version</a></td></tr></table></body></html>