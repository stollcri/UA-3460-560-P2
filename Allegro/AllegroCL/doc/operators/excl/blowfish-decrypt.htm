<html><head><meta http-equiv="content-type" name="description" content="text/html; charset=UTF-8"> <title>blowfish-decrypt</title><link rel="stylesheet" href="../../acldoc-styles.css" type="text/css"></head><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><b>Function</b></td><td align="left" bgcolor="#00FFFF"><b>Package: excl</b></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/excl/blowfish-decrypt.htm">8.1 version</a></td></tr></table><h2 id="2">blowfish-decrypt</h2>

<p id="3"><b>Arguments: </b><i>
encrypted </i>&amp;key <i>key end context</i> (<i>pad</i> t)<i> string in-place</i> (<i>external-format</i> :utf-8) (<i>mode</i> :ecb)<i> iv</i><i>
</i></p>



<p id="4">
This function decrypts <i>encrypted</i>, which should be
an (unsigned-byte 8) array returned by a call to <a href="blowfish-encrypt.htm"><b>blowfish-encrypt</b></a>. 
</p>
<p id="5">
This function returns one or two values, as the
<i>string</i> keyword argument is true or false.  If
<i>string</i> is true, a string is returned as the only
returned value.  If <i>string</i> is false, an
(unsigned-byte 8) array representing the decryption and an integer
specifying how many bytes there are in the decrypted result are
returned. The second returned value is the length of the array returned
as the first returned value when the <i>in-place</i>
keyword argument is false, and is a value less than or equal to the
length when <i>in-place</i> is true.
</p>
<p id="6">
The arguments are:
</p>

<ul>
<li id="7">
<i>encrypted</i> (the single required argument): an
(unsigned-byte 8) array as returned by <a href="blowfish-encrypt.htm"><b>blowfish-encrypt</b></a>.
</li>
<li id="8">
<i>key</i>: a string or (unsigned-byte 8) array. It must
be the same key used by <a href="blowfish-encrypt.htm"><b>blowfish-encrypt</b></a> to produce the value
<i>encrypted</i>. Do not specify a value for this
argument and for <i>context</i>.
</li>
<li id="9">
<i>end</i>: an integer or <code>nil</code>.
If an integer, the length of the encrypted portion of
<i>encrypted</i> (the same value as the second value
returned by <a href="blowfish-encrypt.htm"><b>blowfish-encrypt</b></a>). If <code>nil</code>, then the whole of <i>encrypted</i>
is used. (The <i>in-place</i> argument to both this function and
to <a href="blowfish-encrypt.htm"><b>blowfish-encrypt</b></a> allows
using an existing (unsigned-byte 8) array, which may be larger than
necessary to hold the encrypted value. This argument allows you to
specify the actual encrypted portion and ignore the remainder of the
array.)
</li>
<li id="10">
<i>context</i>: an object (again, an (unsigned-byte 8)
array) returned by <a href="blowfish-init.htm"><b>blowfish-init</b></a> when passed the key used to
encrypt <i>encrypted</i>. This argument is typically
used when a number of things need to be encrypted or decrypted using
the same key. (The first step in encryption and decryption is to
convert the key into a context object. Using the context object
directly avoids repeating this step for each encryption/decryption.)
Do not specify a value for this argument and for
<i>key</i>.
</li>
<li id="11">
<i>pad</i> (default is <code>t</code>): the
value should be the same as was passed as the <i>pad</i>
argument to <a href="blowfish-encrypt.htm"><b>blowfish-encrypt</b></a>. It tells whether the
encrypted value was padded out to have an octet length of 8.
</li>
<li id="12">
<i>string</i>: if specified true, the (unsigned-byte 8)
array raw decryption result is converted to be a string using the
<code>:utf-8</code> external format, and the resulting string is
returned as the single returned value. If <code>nil</code>, the raw (unsigned-byte 8) array is returned as
the first value and the length of the decrypted portion in the array
is returned as the second value.
</li>
<li id="13">
<i>in-place</i>: if specified true, the value of
<i>encrypted</i> will be modified to hold the decrypted
value (if possible). If it is not possible to decrypt in place then
this argument will be ignored and a new (unsigned-byte 8) array will
be created. If <i>encrypted</i> is used and
<i>string</i> is <code>nil</code>, the
second returned value (the number of bytes in the decryption) may be
less than the length of the first returned value.
</li>
<li id="14">
<i>external-format</i>: this argument specifies the
external format to be used when decrypting the string to be
encrypted. Its value should be the same as used when the string was
encrypted. The default is <code>:utf-8</code> and that is in
general a good choice. When
<code>:default</code> is specified, the value returned by
<code>(find-external-format :default)</code> is used
(see <a href="find-external-format.htm"><b>find-external-format</b></a>).
That value is not recommended because the value of the default
external format (which depends on the value of <a href="../../variables/excl/s_locale_s.htm"><code>*locale*</code></a>) may change between
encryption and decryption. 
</li>
<li id="15">
<i>mode</i>: this argument allows specifying ECB
(Electronic Code Book) decryption of CBC (Cipher Block Chaining)
decryption. The default is <code>:ecb</code>, meaning use
ECB. Specify <code>:cbc</code> for CBC. The text must be
decrypted in the same mode as was used for encryption. If CBC
encryption mode is requested, the initialization vector (IV) must be
provided by using keyword argument <i>iv</i>. The IV
must be an (unsigned-byte 8) array of at least 8 elements. The IV <b>will be
modified</b> so that it may be used for subsequent encrypt/decrypt
calls.
</li>
<li id="16">
<i>iv</i>: ignored unless <i>mode</i> is
specified <code>:cbc</code>. When mode is
<code>:cbc</code>, the value, called the initialization vector
or IV, must be the same (unsigned-byte 8) array of at least 8 elements
as was usedf for encryption. The IV <b>will be modified</b> so that it
may be used for subsequent encrypt/decrypt calls.
</li>
</ul>
<p id="17">
See also <a href="blowfish-encrypt.htm"><b>blowfish-encrypt</b></a> and <a href="blowfish-init.htm"><b>blowfish-init</b></a>.
</p>
<p id="18">
See also the new auxilliary functions <a href="hex-string-to-usb8-array.htm"><b>hex-string-to-usb8-array</b></a> and <a href="usb8-array-to-hex-string.htm"><b>usb8-array-to-hex-string</b></a>.
</p>

<p id="19">
See <a href="../../miscellaneous.htm#blowfish-2">Support for
Blowfish encryption</a> in <a href="../../miscellaneous.htm">miscellaneous.htm</a>
for information on Blowfish encryption and Blowfish encryption support
in Allegro CL. There are examples of blowfish encryption and decryption
in that section. <a href="../../miscellaneous.htm#encrypt-1">Support for
encryption</a> in the same document discusses encryption support
in Allegro CL in general.
</p>

<hr><p id="20"><small>Copyright (c) 1998-2010, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br><small>Documentation for Allegro CL version 8.2. This page was not revised from the 8.1 page.</small><br>
<small>Created 2010.1.21.</small>
<br></p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"></td><td align="left" bgcolor="#00FFFF"></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/excl/blowfish-decrypt.htm">8.1 version</a></td></tr></table></body></html>