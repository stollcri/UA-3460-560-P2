<html><head><meta http-equiv="content-type" name="description" content="text/html; charset=UTF-8"> <title>read-octets</title><link rel="stylesheet" href="../../acldoc-styles.css" type="text/css"></head><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><b>Function</b></td><td align="left" bgcolor="#00FFFF"><b>Package: excl</b></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/excl/read-octets.htm">8.1 version</a></td></tr></table><h2 id="2">read-octets</h2>

<p id="3"><b>Arguments: </b><i>
stream buffer start end blocking
</i></p>

<p id="4">
Reads as many octets from the argument stream's handle as
possible. The input handle is examined, and if it is a stream
(i.e. encapsulated), then that input handle is read from in a manner
similar to <a href="read-vector.htm"><b>read-vector</b></a>,
except that no further checking of arguments is done; it is assumed
that the caller has done whatever checking that is
necessary. Otherwise, if the handle is an operating-system-defined
handle, the system read function is called.
</p>
<p id="5">
<i>buffer</i> is any specialized simple-array of one
dimension (it will be treated as if it were a simple vector of
octets). Buffer can also be a fixnum, in which case it is
treated as an aligned pointer and the "vector" is the memory implied
by the aligned pointer. (See <a href="../../ftype.htm#aligned-pointers-1">Aligned pointers</a>
in <a href="../../ftype.htm">ftype.htm</a>.)
</p>
<p id="6">
If <i>buffer</i>
is <code>nil</code>, then the standard buffer slot will be
supplied.
</p>
<p id="7">
The <i>blocking</i> controls what happens if not even
one octet can be read. If it is true, the function will block if the
first character cannot be read; if it is <code>nil</code>,
the function does not block. See <a href="../../streams.htm#block-non-block-3">Blocking behavior in simple-streams</a>
in <a href="../../streams.htm">streams.htm</a>.
</p>
<p id="8">
Return values:
</p>
<ul>
<li id="9">
<b>A number greater than or equal to 0:</b>
the number of bytes actually read. 0 bytes are only ever transferred
when <i>blocking</i> is nil.</li>
<li id="10">
<b>-1:</b> EOF is returned.</li>
<li id="11">
<b>-3:</b> Special return value for a no-hang query. If the 
start and end arguments are eql and if blocking is nil, 
then a 0 return means no data will be read, and a -3 value 
means data would have been read.</li>
<li id="12">
<b>(- -10 errno):</b> the value of the error return from the system 
operation. For example, -19 represents an errno value of 9, which is EBADF
(bad file number) on most systems.</li>
</ul>
<p id="13">
Note: <a href="device-read.htm"><b>device-read</b></a>
implementations may use the return value of read-octets directly, but
if an EOF is not "latching" (i.e. there may be more data read after an
EOF condition), then the -1 value should be converted into a -2 value
(soft EOF) before returning from the device-read method.
</p>

<p id="14">
This function is intended for implementing device-level
functionality and should not be used except for that purpose. See <a href="../../streams.htm#ss-description-2">Simple-stream Description</a>
in <a href="../../streams.htm">streams.htm</a> for a description of the device-level.
</p>
<p id="15">
See <a href="../../streams.htm">streams.htm</a> for information on the
simple-streams implementation in Allegro CL. 
</p>

<hr><p id="16"><small>Copyright (c) 1998-2010, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br><small>Documentation for Allegro CL version 8.2. This page was not revised from the 8.1 page.</small><br>
<small>Created 2010.1.21.</small>
<br></p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"></td><td align="left" bgcolor="#00FFFF"></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/excl/read-octets.htm">8.1 version</a></td></tr></table></body></html>