<html><head><meta http-equiv="content-type" name="description" content="text/html; charset=UTF-8"> <title>def-remote-function</title><link rel="stylesheet" href="../../acldoc-styles.css" type="text/css"></head><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><b>Macro</b></td><td align="left" bgcolor="#00FFFF"><b>Package: net.rpc</b></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/rpc/def-remote-function.htm">8.1 version</a></td></tr></table><h2 id="2">def-remote-function</h2>

<p id="3"><b>Arguments: </b><i>
name arglist
</i>&amp;key <i>port result mode destination close final</i><i>
</i></p>

<p id="4">
This macro defines a Lisp function that will perform a remote call
when it is called. If the <i>port</i> argument is
omitted, the call is made through the default connection. If the 
<i>port</i>
argument is specified, it is evaluated at each call to yield an
rpc-port instance. If the port instance is a server port, it must be
connected. If the port instance is a client port, it will be connected
if necessary.  The other keyword arguments are expressions that modify
the remote call.
</p>
<p id="5">
If the <i>name</i> argument is a symbol, the same symbol
is assumed to exist in the called image. If the
<i>name</i> argument is a list, the first element is the
local name of the function. The remainder of the list is like a call
to <a href="rref.htm"><b>rref</b></a> and defines the
function to be called in the remote image. The most reliable and case
portable way to reference a remote function is with the
<i>name</i> argument:
</p>
<pre id="6">
   (local-name "ppp::nnnnn")
</pre>
<p id="7">
where <b>ppp</b> is the package name and <b>nnnnn</b> is the symbol
name of the remote function.
</p>
<p id="8">
The <i>arglist</i> is similar to a <a href="../../../ansicl/dictentr/defun.htm"><b>defun</b></a> lambda list but &aux variables are not
allowed, default and supplied-p variable are not allowed on optional
or keyword parameters. If a lambda list item is a symbol (not a
keyword) or <code>nil</code>, that argument position is
converted by default rules. If a lambda list item is a keyword, that
keyword is treated as the :type argument in a call to <a href="rref.htm"><b>rref</b></a> when converting that
argument position. If a lambda list item is a list, that list is
treated as the tail of a call to <a href="rref.htm"><b>rref</b></a> &nbsp;<code>(rref
arg :type . list)</code>.
</p>
<p id="9">
The position after &rest has additional semantics. If the item
after &rest is a symbol (not a keyword) or <code>nil</code>, then each item in the argument list of the call
is encoded as a separate argument to the remote call. If the item
after &rest is a keyword, then each item in the argument list of the
call is encoded separately according to the keyword. If the item after
&rest is a list beginning with :rest, then a single item is encoded
and passed to the remote call. Any other list after &rest is applied
individually to any items in the actual call argument list.
</p>
<p id="10">
The positions after &key have additional semantics. A symbol (not
a keyword) denotes a keyword parameter passed by default rules. A list
consists of a keyword variable followed by conversion advice.
</p>
<pre id="11">
(def-remote-function foo (:ref-only :ref-only) :result :ref-only)
</pre>
<p id="12">
This call defines a function foo that is called foo in the remote
image too. It expects two arguments that must be both passed as
references and it always returns a reference. Thus (foo 1 2) would
signal an error before the call was even made since fixnums cannot be
passed by reference.  
</p>
<pre id="13">
(def-remote-function bar (nil &key key1 (key2 :ref)))
</pre>
<p id="14">
This call defines a function bar that is called bar in the remote
image too. The remote function will get the first argument by default
rules, the keyword argument :key1 will be passed by default rules, the
keyword argument :key2 will be passed as a reference if possible.
</p>
<pre id="15">
(def-remote-function baz (&rest (:rest nil)))
</pre>
<p id="16">
This call defines a function baz that is called baz in the remote
image too. In the local image, baz may be called with any number of
arguments. The remote version of baz will get a single argument which
is the list of arguments to local baz passed as a single object by
default rules. If the list is one that may be passed by value, remote
baz will get a copied list, otherwise remote baz will get a remote
reference.
</p>

<p id="17">
See also <a href="../../rpc.htm">rpc.htm</a> for general information on the
Remote Procedure Call utility in Allegro CL.
</p>

<hr><p id="18"><small>Copyright (c) 1998-2010, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br><small>Documentation for Allegro CL version 8.2. This page was not revised from the 8.1 page.</small><br>
<small>Created 2010.1.21.</small>
<br></p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"></td><td align="left" bgcolor="#00FFFF"></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/rpc/def-remote-function.htm">8.1 version</a></td></tr></table></body></html>