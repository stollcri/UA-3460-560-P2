<html><head><meta http-equiv="content-type" name="description" content="text/html; charset=UTF-8"> <title>client-funcall</title><link rel="stylesheet" href="../../acldoc-styles.css" type="text/css"></head><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><b>Function</b></td><td align="left" bgcolor="#00FFFF"><b>Package: net.rpc</b></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/rpc/client-funcall.htm">8.1 version</a></td></tr></table><h2 id="2">client-funcall</h2>

<p id="3"><b>Arguments: </b><i>
client op
</i> &amp;rest <i>
args
</i><i>
</i></p>

<p id="4">
This function calls a function in the client image and returns the values.
</p>
<p id="5">
The <i>client</i> argument must be a <a href="../../classes/rpc/client-lisp.htm"><code>client-lisp</code></a> instance.
</p>
<p id="6">
The <i>op</i> argument may be a symbol, a string, or a
remote object instance.  A symbol denotes the corresponding symbol in
the client image.  A string is decoded with <a href="../../../ansicl/dictentr/read-fro.htm"><b>read-from-string</b></a> in the client image; the
result should be a symbol. A remote object instance must denote a
funcallable object in the client image.
</p>
<p id="7">
The remaining arguments are the arguments passed to the function in 
the client image. 
</p>
<p id="8">
This function should be called only after <a href="client-ready-p.htm"><b>client-ready-p</b></a> returns <code>t</code>. If called when the client is not ready, an error
will be signaled.
</p>

<p id="9">
See <a href="../../rpc.htm#several-images-1">Running several
communicating Allegro CL images</a> in
<a href="../../rpc.htm">rpc.htm</a> for information on running several Lisp
images.
</p>

<hr><p id="10"><small>Copyright (c) 1998-2010, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br><small>Documentation for Allegro CL version 8.2. This page was not revised from the 8.1 page.</small><br>
<small>Created 2010.1.21.</small>
<br></p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"></td><td align="left" bgcolor="#00FFFF"></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/rpc/client-funcall.htm">8.1 version</a></td></tr></table></body></html>