<html><head><meta http-equiv="content-type" name="description" content="text/html; charset=UTF-8"> <title>import-remote-class</title><link rel="stylesheet" href="../../acldoc-styles.css" type="text/css"></head><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><b>Generic Function</b></td><td align="left" bgcolor="#00FFFF"><b>Package: net.rpc</b></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/rpc/import-remote-class.htm">8.1 version</a></td></tr></table><h2 id="2">import-remote-class</h2>

<p id="3"><b>Arguments: </b><i>
home-location class-name import-name 
</i> &amp;optional <i>propagate</i><i>
</i></p>

<p id="4">
This function defines a mapping from the string to the local class
named by <i>class-name</i>. It returns the class name.
This class must be a sub-class of <a href="../../classes/rpc/rpc-remote-ref.htm"><code>rpc-remote-ref</code></a> or an error is
signaled. <i>home-location</i> must be an instance of
<a href="../../classes/rpc/rpc-port.htm"><code>rpc-port</code></a> or of <a href="../../classes/rpc/rpc-port-server.htm"><code>rpc-port-server</code></a> (its presence
allows the generic function to behave differently on the two classes).
</p>
<p id="5">
When a remote reference to a class arrives at a port, the class is
identified by a string.  This string is compared (with <a href="../../../ansicl/dictentr/stringst.htm"><b>string-equal</b></a>) to the
import-name strings defined by this function. If a match occurs, an
instance of the corresponding class-name is created instead of a
direct instance of <a href="../../classes/rpc/rpc-remote-ref.htm"><code>rpc-remote-ref</code></a>.
</p>
<p id="6">
To avoid ambiguities or conflicts caused by package and case
differences between remote images, an application can use <a href="export-remote-symbol.htm"><b>export-remote-symbol</b></a> in the
sender to define unique class identifier strings and <a href="import-remote-class.htm"><b>import-remote-class</b></a> in the receiver to
interpret these unique strings.
</p>

<h3 id="7">
Method: (rpc-port-server t t)
</h3>
<p id="8">
This method updates the table stored in the <a href="../../classes/rpc/rpc-port-server.htm"><code>rpc-port-server</code></a> instance.  The table is
copied to any new <a href="../../classes/rpc/rpc-port.htm"><code>rpc-port</code></a> instances created from the server.
If the <i>propagate</i> argument is non-nil, then all
active ports created from this server are updated as well.
</p>

<h3 id="9">
Method: (rpc-port t t)
</h3>
<p id="10">
This method updates the table in the specified <a href="../../classes/rpc/rpc-port.htm"><code>rpc-port</code></a> instance.
The <i>propagate</i> argument is ignored.
</p>

<h3 id="11">
Programming Note and Warning:
</h3>
<p id="12">
Subclasses of <a href="../../classes/rpc/rpc-remote-ref.htm"><code>rpc-remote-ref</code></a> must not be instantiated by
application programs.  Any instance of <a href="../../classes/rpc/rpc-remote-ref.htm"><code>rpc-remote-ref</code></a> created by a direct call to
<a href="../../../ansicl/dictentr/make-ins.htm"><b>make-instance</b></a>
will cause serious errors in the application.
</p>
<p id="13">
Instances of <a href="../../classes/rpc/rpc-remote-ref.htm"><code>rpc-remote-ref</code></a> (and any subclasses) are
only created when a remote reference arrives at an <a href="../../classes/rpc/rpc-port.htm"><code>rpc-port</code></a>, or when an
application needs to create an explicit wrapper with a call to <a href="rref.htm"><b>rref</b></a> or <a href="rpc-ref.htm"><b>rpc-ref</b></a>.
</p>

<h3 id="14">Example</h3>

<p id="15">
Image A calls image B with:
</p>
<pre id="16">
(rcall 'foo (make-instance 'bar))
</pre>

<p id="17">
In image B, the function <b>foo</b> gets an instance of <a href="../../classes/rpc/rpc-remote-ref.htm"><code>rpc-remote-ref</code></a> as its one
argument <i>x</i>.  <code>(rr-type x)</code>
returns the string "bar".  Image B can only obtain additional
information about the object <i>x</i> by calling back to
A.
</p>
<p id="18">
But image B could also do as follows:
</p>
<pre id="19">
(defclass far-bar (rpc-remote-ref) ())
(import-remote-class port-to-a 'far-bar "bar")
</pre>

<p id="20">
At this point, the function <b>foo</b> gets an instance of
<code>far-bar</code> as an argument. This is a local class that
may be used to dispatch appropriate methods in image B.
</p>
<p id="21">
For example, in image A, the class <code>bar</code> may have a
slot accessed with accessor <b>count</b>.  One way to call this accessor from
image B is to use
</p>

<pre id="22">
(rcall 'count x)
</pre>

<p id="23">
But since <a href="import-remote-class.htm"><b>import-remote-class</b></a> caused a local
class to be instantiated, we can define in image B
</p>

<pre id="24">
(defmethod count ((x far-bar)) (rcall 'count x))
</pre>

<p id="25">
and access the slot with <code>(count x)</code>.
</p>

<p id="26">
See <a href="export-remote-symbol.htm"><b>export-remote-symbol</b></a> for what to do
if the class name represented simply as the symbol name might cause
ambiguity.
</p>

<p id="27">
See also <a href="../../rpc.htm">rpc.htm</a> for general information on the
Remote Procedure Call utility in Allegro CL.
</p>

<hr><p id="28"><small>Copyright (c) 1998-2010, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br><small>Documentation for Allegro CL version 8.2. This page was not revised from the 8.1 page.</small><br>
<small>Created 2010.1.21.</small>
<br></p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"></td><td align="left" bgcolor="#00FFFF"></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/rpc/import-remote-class.htm">8.1 version</a></td></tr></table></body></html>