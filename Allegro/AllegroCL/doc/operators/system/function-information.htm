<html><head><meta http-equiv="content-type" name="description" content="text/html; charset=UTF-8"> <title>function-information</title><link rel="stylesheet" href="../../acldoc-styles.css" type="text/css"></head><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><b>Function</b></td><td align="left" bgcolor="#00FFFF"><b>Package: system</b></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/system/function-information.htm">8.1 version</a></td></tr></table><h2 id="2">function-information</h2>


<p id="3"><b>Arguments: </b><i>
fspec </i> &amp;optional <i>env all-declarations special-operators</i><i>
</i></p>

<p id="4">
This function returns information about the operator named by
<i>fspec</i> when it is found in the functional position
in the environment <i>env</i>. <i>env</i>
may be an environment object or <code>nil</code>,
indicating the null lexical
environment. <i>all-declarations</i> is a boolean which
requests a building of all declarations out of previous declarations
of the same name, including the global environment. This switch is
added so that the interpreter, which almost never looks at
declarations, doesn't need to cons as much for no good
reason. <i>special-operaor</i> is a boolean which
controls whether <code>:special-operator</code> is returned for
the first value when <i>fspec</i> names both a macro and
a special-operator in certain cases (see <a href="#special-handling">below</a> for more information). The default
is <code>nil</code>, and <code>:macro</code> is
returned in that case.
</p>
<p id="5">
Four values are returned.
</p>
<p id="6">
The first value returned is one of the following values, providing
information about the type of definition or binding of
<i>fspec</i>:
</p>
<ul>
<li id="7">
<code>nil</code>: there is no binding or definition of
<i>fspec</i>.
</li>
<li id="8">
<code>:function</code>: <i>fspec</i> refers to a function.
</li>
<li id="9">
<code>:macro</code>: <i>fspec</i> refers to a macro.
</li>
<li id="10">
<code>:compiler-macro</code>: <i>fspec</i> has a
compiler macro associated with it. (If the symbol names both a macro
and a compiler macro, see <a href="#special-handling">below</a> for
details.)
</li>
<li id="11">
<code>:special-operator</code>: <i>fspec</i>
refers to a special operator. (If <i>fspec</i> refers to
both a macro and a special operator, see <a href="#special-handling">below</a> for details.)
</li>
</ul>

<p id="12">
The second returned value is a locative cons (a cons whose car and/or
cdr may be used as a mutable value).  This locative cons is used to
provide the local binding of the value (for :evaluation environments)
or local compiler structure information (for the compiler/compilation environments).  To
reduce consing at critical points in the environments implementation,
there are a few exceptions where the second value is not a cons
representing a locative:
</p>
<ul>
<li id="13">
When the first return value from <a href="function-information.htm"><b>function-information</b></a> is
<code>:special-operator</code>, then the second value is <code>nil</code>, because the value of a special operator is opaque
to the programmer (companion-macros are mandated by the spec in order
for a non-compiler to "see" into special-operators, and so a
functional value does not make sense).
</li>
<li id="14">
When the first return value from <a href="function-information.htm"><b>function-information</b></a> is either
<code>:function</code> or <code>:macro</code>, and the
definition is in fact dynamic and thus accessible via <a href="../../../ansicl/dictentr/fdefinit.htm"><b>fdefinition</b></a> or <a href="../../../ansicl/dictentr/macro-fu.htm"><b>macro-function</b></a>, respectively, then the second
returned value is <code>nil</code>, unless the third
argument to <a href="function-information.htm"><b>function-information</b></a> is non-<code>nil</code>, indicating that consing definitions and
declarations is ok.
</li>
</ul>
<p id="15">
The third returned value is an alist containing information
declarations that apply to the bindings of
<i>symbol</i>. The keys are symbols that name
declaration specifiers (such as dynamic-extent, inline, ftype, etc.)
and the value is the associated value.
</p>
<p id="16">
The fourth returned value is a boolean indicating whether definition is
local or global: the value is true if the binding is local, <code>nil</code> if not. (In CLtL-2, this local/global boolean is
the second returned value.)
</p>


<a name="special-handling">
<h3 id="17">
Special handling of function-information returns for special-operators
and compiler-macros
</h3></a>

<p id="18">
If one considers a namespace to be a one-to-one mapping of a name to a
binding, then the function namespace is not a pure namespace in Common
Lisp; consider that a name can simultaneously name both a
special-operator and either a macro or a compiler-macro, or it can
name a macro or function and a compiler-macro simultaneously.  Of
course, any lexical definition created for that name (such as an
<a href="../../../ansicl/dictentr/fletlabe.htm"><b>flet</b></a>, <a href="../../../ansicl/dictentr/fletlabe.htm"><b>labels</b></a>, or <a href="../../../ansicl/dictentr/fletlabe.htm"><b>macrolet</b></a>) will shadow all of these potential
combinations, but if no such shadowing occurs, there is a necessity
for <a href="function-information.htm"><b>function-information</b></a>
to be able to make the distinctions between the various combinations
of definition that are possible.
</p>
<p id="19">
If the fourth argument (the <i>special-operators</i>
argument) to <a href="function-information.htm"><b>function-information</b></a> is true, and if the
name is a non-shadowed special-operator, then
<code>:special-operator</code> is returned, even if it has a
macro or a compiler-macro definition as well. If the argument is
<code>nil</code>, then for a special-operator which also
has a compiler-macro, <code>:compiler-macro</code> is returned
only for <code>:compiler</code>
or <code>:compilation</code> environments (otherwise
<code>:special-operator</code> is returned), and for a
special-operator which also has a macro definition,
<code>:macro</code> is returned only for
<code>:interpreter</code> and <code>:evaluation</code>
environments (otherwise <code>:special-operator</code> is
returned).
</p>
<p id="20">
We do not define what occurs if a special-operator has both a macro
and a compiler-macro definition, beause Allegro CL has none of these
situations.  There should be a normalized behavior for such
situation.
</p>
<p id="21">
If a name defines a compiler-macro as well as either a macro or a
function, then which is returned depends on the environment kind: a
<code>:compiler</code>
or <code>:compilation</code> environment will cause the
<code>:compiler-macro</code> to be returned, and an
<code>:interpreter</code> or an <code>:evaluation</code>
environment will result in the <code>:function</code> or
<code>:macro</code> being returned.
</p>

<p id="22">
See <a href="../../environments.htm">environments.htm</a> for more information on
environments.
</p>

<hr><p id="23"><small>Copyright (c) 1998-2010, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br><small>Documentation for Allegro CL version 8.2. This page was not revised from the 8.1 page.</small><br>
<small>Created 2010.1.21.</small>
<br></p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"></td><td align="left" bgcolor="#00FFFF"></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/operators/system/function-information.htm">8.1 version</a></td></tr></table></body></html>