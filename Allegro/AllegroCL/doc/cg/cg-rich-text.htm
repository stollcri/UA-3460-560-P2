<html><head><meta http-equiv="content-type" content="text/html; charset=UTF-8"> <title>About rich text editing in Common Graphics</title></head><link rel="stylesheet" href="../acldoc-styles.css" type="text/css"><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><a href="../contents.htm"><b>ToC</b></a></td><td align="left" bgcolor="#00FFFF"><a href="../introduction.htm"><b>DocOverview</b></a></td><td align="left" bgcolor="#00FFFF"><a href="../cgide.htm"><b>CGDoc</b></a></td><td align="left" bgcolor="#00FFFF"><a href="../release-notes.htm"><b>RelNotes</b></a></td><td align="left" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="left" bgcolor="#00FFFF"><a href="../index.htm"><b>Index</b></a></td><td align="left" bgcolor="#00FFFF"><a href="../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/cg/cg-rich-text.htm">8.1 version</a></td></tr></table><h1 id="2">About rich text editing in Common Graphics</h1><p id="3">This document contains the following sections:</p><a href="#rtf-interactive-interface-1">1.0 The Rich Text Interactive Interface</a><br><a href="#rtf-programmatic-interface-1">2.0 The Rich Text Programmatic Interface</a><br><hr><hr><h2 id="4"><a name="rtf-interactive-interface-1">1.0 The Rich Text Interactive Interface</a></h2>

<h3 id="5">
Getting Started
</h3>
<p id="6">
Invoke the 
<a href="../ide-menus-and-dialogs/file-menu.htm">File</a> | 
<a href="../ide-menus-and-dialogs/file-menu.htm#new-form">New Form</a>
menu
command and select rich-edit-dialog from the list of choices. This
will make a rich-edit-dialog form and will automatically add a
rich-edit control and an associated <a href="../classes/cg/rich-edit-ruler.htm"><code>rich-edit-ruler</code></a>
just above it to the form, and also add auxiliary widgets in a toolbar
for use with the rich-edit control.
</p>
<p id="7">
This dialog will act as a complete WordPad-like application. If
you would like to add additional controls to the form or toolbar, you
can do so. The rich-edit
controls appear at the right end of the component toolbar. Note that
if multiple rich-edit controls are added to a single form, the single
set of rich-edit helper controls works for all of the rich-edit
controls on the same parent window, reflecting the rich-edit that most
recently had the keyboard focus.
</p>
<p id="8">
Try running the initial rich-edit form (with that form selected, click
on <a href="../ide-menus-and-dialogs/run-menu.htm">Run</a> | <a href="../ide-menus-and-dialogs/run-menu.htm#run-form">Run
Form</a>), then clicking the Open button in the toolbar and
selecting the file cg\rich-edit-sample.rtf (in the cg subdirectory of
the main Allegro directory). This should show some sample rich text.
</p>
<h3 id="9">
Building Rich Edit Forms from Scratch
</h3>
<p id="10">
To test making your own rich edit dialog from scratch, invoke the
<a href="../ide-menus-and-dialogs/file-menu.htm">File</a> | <a href="../ide-menus-and-dialogs/file-menu.htm#new-form">New
Form</a> command, and select dialog from the list of window
classes that you can create. Double click the interior of the new form
to inspect it.
</p>
<p id="11">
If you would like to start the menu-bar off with the special rich-edit
commands, then go to the menu property of the form in the inspector
and enter #.(rich-edit-menubar) in the inspector line for the menu
property. (The #. reader macro is a trick to evaluate the expression
typed directly into a line of the inspector.) This should add the
standard rich-edit menu-bar to the form, and you can further edit this
menu as you like.
</p>
<p id="12">
Back on the inspector, toggle the toolbar property on to give the form
a toolbar. Also toggle the status-bar property to give the form a
status-bar for messages. Next, click on the Rich-Edit button of the
Component Toolbar (the one with a big green "R"), and then click in
the main interior of your form to create a rich-edit control. You may
want to size the rich-edit control larger, since the default size is
rather small. Now click on each of the next three rich-edit "helper"
controls on the Component Toolbar and instantiate those widgets from
left to right on the toolbar of your new form. (The helper controls
consist of the <a href="../classes/cg/rich-edit-multipic.htm"><code>rich-edit-multipic</code></a>, the <a href="../classes/cg/font-face-combo-box.htm"><code>font-face-combo-box</code></a>,
and the <a href="../classes/cg/font-size-combo-box.htm"><code>font-size-combo-box</code></a>. Finally,
click on the Ruler button on the Component Toolbar, position it just
above the rich-edit control, and then drag it or stretch it partly
over the rich-edit as needed to make it snap into place along the top.
</p>
<p id="13">
Having done this, you now have a dialog that is functionally similar
to the one created by using the rich-edit-dialog class. You can
customize either however you like by adding additional controls and
editing the initial rich-edit menubar. Note that only a
rich-edit-dialog has the built-in feature of prompting the user to
save any unsaved rich-edit controls when a closing gesture is made.
</p>
<h3 id="14">
Special Features
</h3>
<p id="15">
While the rich edit functionality basically allows for custom
WordPad-like applications, there are a couple of features that are
somewhat unique:
</p>
<p id="16">
Multiple editor panes. The rich-edit helper controls will
automatically keep track of which rich-edit control most recently had
the keyboard focus, and apply any editing commands to that
rich-edit. Also, as the focus moves from one rich-edit to another, the
rich edit helper controls will update themselves to reflect the
current rich-edit, just as they update to reflect the currently
selected text within a single rich-edit.
</p>
<p id="17">
Copying formatting.  The Edit menu (on the rich-edit-dialog) has a
couple of items called Copy Format and Paste Format that allow you to
easily copy character formatting rather than text. Just select some
text (or position the text cursor), invoke Edit | Copy Format, then
select some other text, and invoke Edit | Paste Format (again, these
commands are on the Edit menu on the rich-edit-dialog, not on the
Allegro CL Edit menu) The second text range will now have the
character formatting of the first text range.
</p>
<hr><hr><h2 id="18"><a name="rtf-programmatic-interface-1">2.0 The Rich Text Programmatic Interface</a></h2>

<h3 id="19">
Package of symbols
</h3>
<p id="20">
All symbols documented here are exported from the common-graphics (cg)
package, since this is an extension to common graphics.
</p>
<h3 id="21">
Widgets (controls) versus windows
</h3>
<p id="22">
Most of these commands work on a window (the new rich-edit-pane and/or
the older <a href="../classes/cg/text-edit-pane.htm"><code>text-edit-pane</code></a>) rather than on a
widget. If you are using a widget instead (the new rich-edit control
or the older <a href="../classes/cg/multi-line-editable-text.htm"><code>multi-line-editable-text</code></a>
control), then you first need to call the function 
<a href="../operators/cg/w/window.htm"><b>window</b></a> on the
control to retrieve the window of the control, and then pass that to
the function that expects a window.
</p>
<h3 id="23">
Rich-edit-specific classes versus plain-text classes
</h3>
<p id="24">
Much of this functionality works using the pre-existing <a href="../classes/cg/text-edit-pane.htm"><code>text-edit-pane</code></a> windows
and <a href="../classes/cg/multi-line-editable-text.htm"><code>multi-line-editable-text</code></a>
controls. The corresponding newer classes, rich-edit-pane and the
rich-edit control, are provided mostly for automatically linking up
with text-formatting controls, for determining which type of text is
pasted into a given control, and other potential circumstances in
which the controls will need to default either to rich or plain
text. Thus, anything that's documented here to work on a <a href="../classes/cg/text-edit-pane.htm"><code>text-edit-pane</code></a> will
also work on a rich-edit-pane, and anything that works on a <a href="../classes/cg/multi-line-editable-text.htm"><code>multi-line-editable-text</code></a>
will also work on a rich-edit. But note that the converse is not true.
</p>
<h3 id="25">
Units of measurement
</h3>
<p id="26">
Most measurements here are in points. A point is approximately 1 /
72nd of an inch. This applies even to font sizes, which are usually
measured in pixels in common graphics, but there does not appear to be
a feasible way to convert character formatting measurements to pixels,
and so this difference needs to be kept in mind. Therefore the
functions <a href="../operators/cg/f/font.htm"><b>font</b></a>
and <code>(setf font)</code> should not be used to change the
font of a rich-edit-pane, instead the rich-edit functions that change
individual font attributes should be used, such as <a href="../operators/cg/f/face.htm"><b>(setf face)</b></a> and <a href="../operators/cg/s/set-character-format.htm"><b>set-character-format</b></a>. Note that a
list of available faces is returned by <code>(font-faces (screen
*system*))</code>. See <a href="../operators/cg/f/font-faces.htm"><b>font-faces</b></a>, <a href="../operators/cg/s/screen.htm"><b>screen</b></a>, and <a href="../variables/cg/s_system_s.htm"><code>*system*</code></a>.
</p>
<h3 id="27">
Text-Formatting Functions --- Multiple Format Parameters
</h3>
<ul>
<li id="28">
<a href="../operators/cg/g/get-character-format.htm"><b>get-character-format</b></a> returns as
multiple values information about rich text. The scope keyword
argument is either :default (return the default characteristics of
text in the rich-text-pane) or :selection (return information about
the selected text in a rich-edit-pane). The information is the font
face, whether it is bold, italic, underlined, and its color, and
point-size. (See <a href="../operators/cg/f/face.htm"><b>face</b></a>, <a href="../operators/cg/b/bold.htm"><b>bold</b></a>, <a href="../operators/cg/i/italic.htm"><b>italic</b></a>, <a href="../operators/cg/u/underline.htm"><b>underline</b></a>, <a href="../operators/cg/c/color.htm"><b>color</b></a>, and <a href="../operators/cg/p/point-size.htm"><b>point-size</b></a>). When scope
is :selection, the information is about the first character of
selected text and additional returned values say whether the whole
selection shares the characteristic with the first character.
</li>
<li id="29">
<a href="../operators/cg/s/set-character-format.htm"><b>set-character-format</b></a>
sets the format of text.
</li>
<li id="30">
<a href="../operators/cg/g/get-paragraph-format.htm"><b>get-paragraph-format</b></a>
returns information about the formatting of paragraphs in rich text.
</li>
<li id="31">
<a href="../operators/cg/s/set-paragraph-format.htm"><b>set-paragraph-format</b></a>
sets the paragraph format of a rich-edit-pane.
</li>
<li id="32">
<a href="../operators/cg/c/character-format.htm"><b>character-format</b></a>
returns a <a href="../classes/cg/character-format.htm"><code>character-format</code></a>
instance representing the character format of the character just
before the current text cursor position in a rich-edit-pane.
</li>
<li id="33">
<a href="../operators/cg/c/character-format.htm"><b>(setf character-format)</b></a> sets the
character formatting of the currently selected text of a
rich-edit-pane to reflect an argument <a href="../classes/cg/character-format.htm"><code>character-format</code></a>
instance.
</li>
<li id="34">
<a href="../operators/cg/c/copy-character-format.htm"><b>copy-character-format</b></a> sets the
global variable <a href="../variables/cg/s_copied-character-format_s.htm"><code>*copied-character-format*</code></a> to a
<a href="../classes/cg/character-format.htm"><code>character-format</code></a>
instance reflecting the character format of the character just before
the current text cursor position in a window.
</li>
<li id="35">
<a href="../operators/cg/p/paste-character-format.htm"><b>paste-character-format</b></a> sets the
character format of the currently selected text in a window to reflect
the <a href="../classes/cg/character-format.htm"><code>character-format</code></a> instance that is
currently the value of the global variable <a href="../variables/cg/s_copied-character-format_s.htm"><code>*copied-character-format*</code></a>.
</li>
</ul>
<h3 id="36">
Text-Formatting Functions --- Individual Format Parameters
</h3>
<ul>
<li id="37">
<a href="../operators/cg/b/bold.htm"><b>bold</b></a> returns true
if all of the selected range of a text-edit-pane is bold, nil if it is
all non-bold, and :some if there is a mix. <a href="../operators/cg/b/bold.htm"><b>(setf bold)</b></a> sets
whether selected text is bold or not.
</li>
<li id="38">
<a href="../operators/cg/i/italic.htm"><b>italic</b></a> returns
true if all of the selected range of a text-edit-pane is italic, nil
if it is all non-italic, and :some if there is a mix. <a href="../operators/cg/i/italic.htm"><b>(setf
italic)</b></a> sets whether selected text is italic or not.
</li>
<li id="39">
<a href="../operators/cg/u/underline.htm"><b>underline</b></a> returns
true if all of the selected range of a text-edit-pane is underlined, nil
if it is all not underlined, and :some if there is a mix. <a href="../operators/cg/u/underline.htm"><b>(setf
underline)</b></a> sets whether selected text is underlined or not.
</li>
<li id="40">
<a href="../operators/cg/c/color.htm"><b>color</b></a> returns two
values: (1) an rgb object for the color of the first character in the
selected range of a text-edit-pane (or the character at the cursor),
and (2) non-nil if and only if the whole selection is the same
color. <a href="../operators/cg/c/color.htm"><b>(setf
color)</b></a> sets the color of the selected range of a
text-edit-pane to an rgb color object.
</li>
<li id="41">
<a href="../operators/cg/f/face.htm"><b>face</b></a> returns two
values: (1) the font face of the first character of the selected range
of text-edit-pane as a keyword, and (2) non-nil if and only if the
entire selection is the same font face. <code>(setf face)</code>
sets the font face of the selected range of text-edit-pane to a
specified font face. <code>(font-faces (screen
*system*))</code> returns the available face names that may be
passed to <code>(setf face)</code>. See <a href="../operators/cg/f/face.htm"><b>face</b></a>, <a href="../operators/cg/f/font-faces.htm"><b>font-faces</b></a>, <a href="../operators/cg/s/screen.htm"><b>screen</b></a>, and <a href="../variables/cg/s_system_s.htm"><code>*system*</code></a>.
</li>
<li id="42">
<a href="../operators/cg/p/point-size.htm"><b>point-size</b></a>
returns two values: (1) the font point size of the first character of
the selected range of a text-edit-pane, and (2) non-nil if and only if
the entire selection is the same point-size. <a href="../operators/cg/p/point-size.htm"><b>(setf point-size)</b></a> sets
the font point size of the selected range of a text-edit-pane (the new
value should be an integer).
</li>
<li id="43">
<a href="../operators/cg/j/justification.htm"><b>justification</b></a>
returns the paragraph justification of the selected text of a
text-edit-pane.  The value can be :left, :center, or :right. <a href="../operators/cg/j/justification.htm"><b>(setf
justification)</b></a> sets the paragraph justification
of the selected text.
</li>
<li id="44">
<a href="../operators/cg/n/numbering-style.htm"><b>numbering-style</b></a>
returns the paragraph numbering style of the selected text of a
text-edit-pane. The value can be either :plain or :bullets. <a href="../operators/cg/n/numbering-style.htm"><b>(setf
numbering-style)</b></a> sets the paragraph numbering
style of the selected text of a text-edit-pane.
</li>
<li id="45">
<a href="../operators/cg/t/top-left-indentation.htm"><b>top-left-indentation</b></a> returns the
left indentation of the first line of the first paragraph of the
selected text of a text-edit-pane. The value is the distance rightward
from the interior left edge of text-edit-pane (or the printed page),
and is specified in points. <a href="../operators/cg/t/top-left-indentation.htm"><b>(setf
top-left-indentation)</b></a> sets the left
indentation of the first line of each paragraph of the selected text
of a text-edit-pane.
</li>
<li id="46">
<a href="../operators/cg/b/body-left-indentation.htm"><b>body-left-indentation</b></a> the current
indentation of the lefthand side of a paragraph of text in a <a href="../classes/cg/text-edit-pane.htm"><code>text-edit-pane</code></a>, or the
indentation indicated by the corresponding lower-left slider of a
<a href="../classes/cg/rich-edit-ruler.htm"><code>rich-edit-ruler</code></a>.
</li>
<li id="47">
<a href="../operators/cg/r/right-indentation.htm"><b>right-indentation</b></a>
returns the right indentation of the first paragraph of the selected
text of a text-edit-pane. The value is the distance leftward from the
interior right edge of text-edit-pane (or the printed page), and is
specified in points. <a href="../operators/cg/r/right-indentation.htm"><b>(setf
right-indentation)</b></a> sets it.
</li>
<li id="48">
<a href="../operators/cg/t/tabs.htm"><b>tabs</b></a> returns
a list of tabstop positions for a text-edit-pane or a rich-edit
control, indicating to where text will move rightward wherever a tab
character appears in the text. <a href="../operators/cg/t/tabs.htm"><b>(setf tabs)</b></a> sets
tabstop positions.
</li>
</ul>
<h3 id="49">
Responding to Format Changes
</h3>
<p id="50">
<a href="../operators/cg/o/on-format-change.htm"><b>on-format-change</b></a> is
an event handler for rich-edit controls. Its value should be a
function that will be called when formatting changes are made.
</p>
<h3 id="51">
Rich Edit Classes
</h3>
<ul>
<li id="52">
<a href="../classes/cg/rich-edit-pane.htm"><code>rich-edit-pane</code></a>
is a <a href="../classes/cg/text-edit-pane.htm"><code>text-edit-pane</code></a>
that will automatically link up with any rich-edit formatting controls
that are either on the same parent or on a toolbar of the parent.
</li>
<li id="53">
<a href="../classes/cg/rich-edit.htm"><code>rich-edit</code></a> is
the control built on <a href="../classes/cg/rich-edit-pane.htm"><code>rich-edit-pane</code></a>.
</li>
<li id="54">
<a href="../classes/cg/rich-edit-dialog.htm"><code>rich-edit-dialog</code></a>
is a dialog intended for use with rich-edit controls.
</li>
<li id="55">
<a href="../operators/cg/r/rich-edit-menubar.htm"><b>rich-edit-menubar</b></a>
is a useful associated function. It returns a menubar suitable for use
on a dialog that has one or more rich-edit controls.
</li>
<li id="56">
<a href="../classes/cg/rich-edit-multipic.htm"><code>rich-edit-multipic</code></a> is a <a href="../classes/cg/multi-picture-button.htm"><code>multi-picture-button</code></a>
that will automatically link up with any rich-edit controls that are
on the same dialog, in order to edit the character and paragraph
formatting of the rich-edit control(s).
</li>
<li id="57">
<a href="../classes/cg/font-face-combo-box.htm"><code>font-face-combo-box</code></a> is a <a href="../classes/cg/combo-box.htm"><code>combo-box</code></a>
that will automatically link up with any rich-edit controls that are
on the same dialog, in order to edit the font face of the rich-edit
control(s).
</li>
<li id="58">
<a href="../classes/cg/font-size-combo-box.htm"><code>font-size-combo-box</code></a> is a <a href="../classes/cg/combo-box.htm"><code>combo-box</code></a>
that will automatically link up with any rich-edit controls that are
on the same dialog, in order to edit the font size of the rich-edit
control(s).  The font-size-combo-box may optionally be on a toolbar.
</li>
<li id="59">
<a href="../classes/cg/rich-edit-ruler.htm"><code>rich-edit-ruler</code></a>
is a widget that reflects and controls the indentation and tabstops of
the selected paragraph(s) of its associated rich-edit control.
</li>
<li id="60">
<a href="../classes/cg/character-format.htm"><code>character-format</code></a>
is an object that contains a set of character format parameters.
</li>
</ul>
<h3 id="61">
Accessing Rich Text Strings
</h3>
<ul>
<li id="62">
<a href="../operators/cg/r/rich-edit-range.htm"><b>rich-edit-range</b></a>
returns a rich-text or plain string from a window. With setf it sets a
string in a window. <i>start</i> and
<i>end</i> arguments control what is read or set.
</li>
<li id="63">
<a href="../operators/cg/r/rich-edit-selected-range.htm"><b>rich-edit-selected-range</b></a>
is similar to rich-edit-range but works on the selected text of a
window and does not have <i>start</i> and
<i>end</i> arguments.
</li>
</ul>
<h3 id="64">
Functions for reading and Writing Rich Text Files
</h3>
<ul>
<li id="65">
<a href="../operators/cg/r/rich-edit-new.htm"><b>rich-edit-new</b></a> clears a
rich-edit-pane for editing a new file.
</li>
<li id="66">
<a href="../operators/cg/r/rich-edit-open.htm"><b>rich-edit-open</b></a> reads
a new file into a rich-edit-pane for editing.
</li>
<li id="67">
<a href="../operators/cg/r/rich-edit-save.htm"><b>rich-edit-save</b></a> saves
the contents of a rich-edit-pane to its file.
</li>
<li id="68">
<a href="../operators/cg/r/rich-edit-save-as.htm"><b>rich-edit-save-as</b></a>
saves the contents of a rich-edit-pane to a new file.
</li>
<li id="69">
<a href="../operators/cg/s/save-text.htm"><b>save-text</b></a> creates a file
containing a specified string (either a plain-text or rich-text
string).
</li>
<li id="70">
<a href="../operators/cg/r/read-text.htm"><b>read-text</b></a> returns a lisp
string containing the contents of a file, which may be either a
plain-text or rich-text file.
</li>
<li id="71">
<a href="../operators/cg/r/rich-edit-print.htm"><b>rich-edit-print</b></a>
prints the contents of rich-edit-pane to a printer.
</li>
<li id="72">
<a href="../operators/cg/p/print-rich-text.htm"><b>print-rich-text</b></a>
prints all or part of the text of a rich-edit-pane to a
printer-stream.
</li>
</ul>
<h3 id="73">
Clipboard-Related Functions
</h3>
<ul>
<li id="74">
<a href="../operators/cg/a/available-clipboard-formats.htm"><b>available-clipboard-formats</b></a>
returns a list of the clipboard formats that are currently on the
Windows clipboard.
</li>
<li id="75">
<a href="../operators/cg/c/can-paste.htm"><b>can-paste</b></a> returns non-nil
if pasting particular formats (specified by the second argument) is
possible.
</li>
<li id="76">
<a href="../operators/cg/c/clipboard-string.htm"><b>clipboard-string</b></a>
gets or sets (with setf) a string from the Windows clipboard.
</li>
<li id="77">
<a href="../operators/cg/d/default-clipboard-format.htm"><b>default-clipboard-format</b></a>
returns the clipboard format that will be used by default when
copying, cutting, and pasting in a window.
</li>
</ul>
<h3 id="78">
Support for Hypertext Links
</h3>
<ul>
<li id="79">
<a href="../operators/cg/c/color-string-at-index.htm"><b>color-string-at-index</b></a>
returns two values unless the text just before the index is black, in
which case a single nil is returned. The two values returned are (1)
the string that surrounds the character at the argument index and
which is in the color of the rich-edit-pane at that position (in other
words, the color of the character just before the index position), and
(2) the color of the string as an RGB color object.
</li>
<li id="80">
<a href="../operators/cg/c/color-string-at-cursor.htm"><b>color-string-at-cursor</b></a> calls
<a href="../operators/cg/c/color-string-at-index.htm"><b>color-string-at-index</b></a>
with the location of the cursor as the index.
</li>
<li id="81">
<a href="../operators/cg/f/find-links.htm"><b>find-links</b></a> finds all of
the substrings of a certain color on a rich-edit-pane and returns a list
indicating the starting and ending indices of each string.
</li>
<li id="82">
<a href="../operators/cg/l/links.htm"><b>links</b></a> returns the
list of links that were found by <a href="../operators/cg/f/find-links.htm"><b>find-links</b></a> and cached as
the value of this property of a rich-edit-pane.
</li>
<li id="83">
<a href="../operators/cg/s/save-links.htm"><b>save-links</b></a>
returns (or sets with setf) whether a rich-edit-pane will currently
save its links into a .lin links file whenever <a href="../operators/cg/r/rich-edit-save.htm"><b>rich-edit-save</b></a> or <a href="../operators/cg/r/rich-edit-save-as.htm"><b>rich-edit-save-as</b></a> is called on it.
</li>
<li id="84">
<a href="../operators/cg/j/jump-to-links.htm"><b>jump-to-links</b></a> is
a property of a <a href="../classes/cg/rich-edit-pane.htm"><code>rich-edit-pane</code></a>
that determines whether jumping to links is enabled.
</li>
<li id="85">
<a href="../operators/cg/s/save-links-file.htm"><b>save-links-file</b></a>
saves the current links of a rich-edit-pane to a file.
</li>
<li id="86">
<a href="../operators/cg/r/read-links-file.htm"><b>read-links-file</b></a>
reads the links that were saved to an argument file and establishes
them as the current links of an argument rich-text-pane.
</li>
<li id="87">
<a href="../operators/cg/l/link-color.htm"><b>link-color</b></a>
returns (or sets with setf) the color that will be used by default
when <a href="../operators/cg/f/find-links.htm"><b>find-links</b></a>
is called to find all of the link strings in a rich-edit-pane. The
link-color defaults to <a href="../variables/cg/blue.htm"><code>blue</code></a>.
</li>
<li id="88">
<a href="../operators/cg/l/link-at-mouse-cursor.htm"><b>link-at-mouse-cursor</b></a>
returns the link under the mouse cursor in a rich-edit-pane, if any.
</li>
<li id="89">
<a href="../operators/cg/l/link-at-position.htm"><b>link-at-position</b></a>
returns the link at a certain pixel position in the interior of a
rich-edit-pane, if any.
</li>
<li id="90">
<a href="../operators/cg/l/link-at-text-cursor.htm"><b>link-at-text-cursor</b></a>
returns the link at the current text cursor position of a
rich-edit-pane, if any.
</li>
<li id="91">
<a href="../operators/cg/l/link-at-index.htm"><b>link-at-index</b></a> returns
the link at a certain character index, if any.
</li>
<li id="92">
<a href="../operators/cg/c/character-index-at-position.htm"><b>character-index-at-position</b></a>
returns the character index at a certain pixel position in the
interior of a text-edit-pane.
</li>
<li id="93">
<a href="../operators/cg/j/jump-to-link.htm"><b>jump-to-link</b></a> is
called when the user clicks on a link that has earlier been found by
<a href="../operators/cg/f/find-links.htm"><b>find-links</b></a> and
cached as the <a href="../operators/cg/l/links.htm"><b>links</b></a> property of a rich-edit-pane.
</li>
<li id="94">
<a href="../operators/cg/p/pathname-for-link.htm"><b>pathname-for-link</b></a>
takes a link-string that was clicked on in a rich-edit-pane, and
should return the path of an .rtf file that should be opened for that
link.
</li>
</ul>
<h3 id="95">
Miscellaneous Functionality
</h3>
<ul>
<li id="96">
<a href="../operators/cg/c/concatenate-rich-text.htm"><b>concatenate-rich-text</b></a> takes any
number of rich-text-strings as arguments and returns a single
rich-text-string which is a concatenation of them all. Note that
<a href="../../ansicl/dictentr/concate1.htm"><b>concatenate</b></a>
will not work properly with rich-text-strings.
</li>
<li id="97">
<a href="../operators/cg/f/find-rich-edit-pane.htm"><b>find-rich-edit-pane</b></a>
can be used to find a rich-edit-pane that has or most recently had
keyboard focus on a window, its parent, and so on until a top-level
window is searched.
</li>
<li id="98">
<a href="../operators/cg/r/rich-to-plain-text.htm"><b>rich-to-plain-text</b></a> creates and returns
a plain-text string that is equivalent to the argument
rich-text-string except without any formatting.
</li>
<li id="99">
<a href="../operators/cg/p/plain-to-rich-text.htm"><b>plain-to-rich-text</b></a>
creates and returns a rich-text string with the text of a
specified plain-text string.
</li>
<li id="100">
<a href="../operators/cg/g/get-selection.htm"><b>get-selection</b></a> returns
two values indicating the start and end of the current selection of a
text-edit-pane.
</li>
<li id="101">
<a href="../operators/cg/s/set-selection.htm"><b>set-selection</b></a> sets the
selection of a text-edit-pane.
</li>
</ul>
</body><hr><p id="2"><small>Copyright (c) 1998-2010, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br><small>Documentation for Allegro CL version 8.2. This page was not revised from the 8.1 page.</small><br>
<small>Created 2010.1.21.</small>
<br></p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><a href="../contents.htm"><b>ToC</b></a></td><td align="left" bgcolor="#00FFFF"><a href="../introduction.htm"><b>DocOverview</b></a></td><td align="left" bgcolor="#00FFFF"><a href="../cgide.htm"><b>CGDoc</b></a></td><td align="left" bgcolor="#00FFFF"><a href="../release-notes.htm"><b>RelNotes</b></a></td><td align="left" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="left" bgcolor="#00FFFF"><a href="../index.htm"><b>Index</b></a></td><td align="left" bgcolor="#00FFFF"><a href="../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="../introduction.htm#updates-s">Unrevised from 8.1 to 8.2.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/cg/cg-rich-text.htm">8.1 version</a></td></tr></table></html>