<html><head><meta http-equiv="content-type" content="text/html; charset=UTF-8"> <title>Allegro CL 8.2 Documentation Introduction and Overview</title></head><link rel="stylesheet" href="acldoc-styles.css" type="text/css"><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><a href="contents.htm"><b>ToC</b></a></td><td align="left" bgcolor="#FFFF00"><b>DocOverview</b></td><td align="left" bgcolor="#00FFFF"><a href="cgide.htm"><b>CGDoc</b></a></td><td align="left" bgcolor="#00FFFF"><a href="release-notes.htm"><b>RelNotes</b></a></td><td align="left" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="left" bgcolor="#00FFFF"><a href="index.htm"><b>Index</b></a></td><td align="left" bgcolor="#00FFFF"><a href="permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="introduction.htm#updates-s">Moderately revised from 8.1.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/introduction.htm">8.1 version</a></td></tr></table><h1 id="2">Allegro CL 8.2 Documentation Introduction and Overview</h1><p id="3">This document contains the following sections:</p><a href="#doc-intro-1">1.0 Documentation introduction</a><br>&nbsp;&nbsp;&nbsp;<a href="#cg-doc-2">1.1 Common Graphics and Integrated Development Environment Documentation</a><br>&nbsp;&nbsp;&nbsp;<a href="#cl-doc-2">1.2 ANSI Common Lisp and MetaObject Protocol Documentation</a><br>&nbsp;&nbsp;&nbsp;<a href="#notation-2">1.3 Some notation</a><br><a href="#overview-1">2.0 The Overview section</a><br>&nbsp;&nbsp;&nbsp;<a href="#contents-2">2.1 Allegro CL documentation table of contents</a><br>&nbsp;&nbsp;&nbsp;<a href="#overview-list-2">2.2 Allegro CL documentation: list of overview HTML documents</a><br><a href="#reference-1">3.0 The Reference section</a><br><a href="#assistance-1">4.0 Assistance available on the internet and the World Wide Web</a><br>&nbsp;&nbsp;&nbsp;<a href="#faq-2">4.1 The Allegro CL FAQ</a><br>&nbsp;&nbsp;&nbsp;<a href="#patches-2">4.2 Patches</a><br>&nbsp;&nbsp;&nbsp;<a href="#patch-further-2">4.3 Further patch information</a><br>&nbsp;&nbsp;&nbsp;<a href="#patch-get-all-2">4.4 Should you get all patches?</a><br>&nbsp;&nbsp;&nbsp;<a href="#patch-what-todo-2">4.5 What to do with patches when you have downloaded them</a><br>&nbsp;&nbsp;&nbsp;<a href="#update-bundle-2">4.6 Updating the bundle file</a><br><a href="#reporting-bugs-1">5.0 Reporting bugs</a><br>&nbsp;&nbsp;&nbsp;<a href="#where-to-send-bugs-2">5.1 Where to report bugs and send questions</a><br>&nbsp;&nbsp;&nbsp;<a href="#core-dumps-2">5.2 Core files: when they are useful and what to do with them</a><br><a href="#contacting-fi-1">6.0 Contacting Franz Inc. for sales, licensing assistance, and information</a><br><h3 id="4">Documentation revision<a name="updates-s"></a></h3><p id="5">
The 8.2
documentation indicates, on each page, whether the page was revised
compared to the previon version of the Allegro CL
Updated Documentation. The extent of the
revision is indicated in the upper right corner where it says
<b>Allegro CL version 8.2</b>,
also says one of:
</p><ul>
<li id="6">

<b>Unrevised from 8.1
to 8.2</b>: the contents of the page have not been modified.

</li>
<li id="7">

<b>Minimally revised from
8.1</b>: typos and other
obvious mistakes have been corrected. 

</li>
<li id="8">

<b>Moderately revised from
8.1</b>: the revisions add new
information or correct previously incorrect information.

</li>
<li id="9">

<b>Significantly revised from
8.1</b>: the
contents include major additions or have been more or less wholly
rewritten. There is a note on each significantly revised page saying
what has been added or changed.

</li>
<li id="10">

<b>This page is new
in 8.2</b>: the
page was not in the previous version of the Allegro
CL online documentation.

</li>
<li id="11">

<b>Page is generated automatically from other data and has been
regenerated
in 8.2</b>. The
page is generated anew with each release from other data (examples
include the index pages and the permuted index pages) and so is
necessarily different from its counterpart in the previous release.

</li>
<li id="12">

<b>Object described on page has changed in
8.2</b>: the object being
described has been modified in the
8.2 release and
the page has changed to reflect those modifications (and perhaps in
other ways). The change is always described in
<a href="release-notes.htm">release-notes.htm</a> (search for the object name in
that document). Typical changes are new or changed arguments or new
argument defaults (for operators), or a different initial value (for
variables), but can be anything, including removal of the object from
the system.

</li>
</ul><p id="13">
Allegro CL documentation is regularly updated between releases.  <a href="http://www.franz.com/support/documentation/">This page</a> on
the Franz Inc. website (<a href="http://www.franz.com/">http://www.franz.com/</a>) has links to
the latest version of the Allegro CL documentation and says
whether there has been an update, and, if so, when. Links on that page
direct you to instructions for downloading the revised documentation
if an update is available.
</p>
<h3 id="14">
Link to 8.1 documentation
</h3>
<p id="15">
There is a link to the 8.1 version of essays and pages which also
existed in version 8.1 (that is, are not new in version 8.2). The link
is on the right of the navigation bar and says <b>8.1 version</b>. the
link goes to the Franz Inc. website copy of the 8.1
documentation. Note that we do not have links to earlier versions of
8.2 documentation which has been revised since release.
</p>
<h3 id="16">Index</h3><p id="17">
The main page for the <strong>index</strong> for the Allegro CL
documentation is <a href="index.htm">index.htm</a>. Every documentation
HTML page has a link to the index on the Navigation Bar at the top and
bottom.  <a href="index.htm">index.htm</a> points to index pages for each
letter (some letters are combined). There are pages with Common
Graphics functionality and pages without Common Graphics
functionality. 
</p><h3 id="18">Permuted Index</h3><p id="19">
The main page for the <strong>permuted-index</strong> for the Allegro
CL documentation is <a href="permuted-index.htm">permuted-index.htm</a>. Every
documentation HTML page has a link to the permuted index on the
Navigation Bar at the top and bottom.  <a href="permuted-index.htm">permuted-index.htm</a>
points to index pages for each letter (some letters are
combined).
</p><p id="20">
The permuted index is generated from the link text of the index pages.
Every word in such link text is indexed. For example, the link to the
function <a href="operators/excl/build-lisp-image.htm"><b>build-lisp-image</b></a>
appears under <b>B</b> (for <b>build</b>), <b>L</b> (for <b>lisp</b>)
and <b>I</b> (for <b>image</b>). This makes the permuted index a very
useful tool for finding information on any topic where you know
keywords but do not know which specifically appears in the index or
the first letter of the names of the relevant symbols.
</p><p id="21">
The permuted index has entries for each section heading of the essay
documentation (those in the same directory as this file). Since they
are indexed by each word in the heading, finding a section of interest
using a keyword in the heading is relatively easy with the permuted
index.  (The headings are not in the index because they mostly start
with "a" or "about" or "the" which are not words actually associated
with the topic covered.)
</p><h3 id="22">Table of Contents</h3><p id="23">
The <strong>table of contents</strong> of most of the essay documents
is in <a href="contents.htm">contents.htm</a>. Every documentation HTML page
has a link to <a href="contents.htm">contents.htm</a> (labeled <b>ToC</b>) on
the Navigation Bars at the top and bottom. The following documents are
not included in <a href="contents.htm">contents.htm</a>: <a href="aserve/aserve.html">aserve/aserve.html</a>,
<a href="debugger-api.htm">debugger-api.htm</a>, <a href="phtml.htm">phtml.htm</a>,
<a href="pxml.htm">pxml.htm</a>, <a href="using-webactions.html">using-webactions.html</a>, and
<a href="webactions.html">webactions.html</a>.
</p><hr><hr><h2 id="24"><a name="doc-intro-1">1.0 Documentation introduction</a></h2>

<p id="25">
The documentation for Allegro CL
8.2 is
online. PDF versions of some of the HTML files are available upon
request. 
</p>
<p id="26">
The online documentation is arranged into an <a href="#overview-1">overview section</a> and a <a href="#reference-1">reference section</a>.
</p>

<p id="27">Installation information can be found in
<a href="installation.htm">installation.htm</a>.</p>

<p id="28">
The release notes for 8.2
can be found in <a href="release-notes.htm">release-notes.htm</a>.
</p>

<p id="29">The User Guide for the Emacs-Lisp interface is in
<a href="eli.htm">eli.htm</a>.
</p>

<p id="30">
Every documentation page has a navigation bar at the top and bottom
with links to the table of contents, <a href="contents.htm">contents.htm</a>;
the documentation overview (this file); <a href="cgide.htm">cgide.htm</a>,
which contains, in its first section, the list of Common Graphics and
IDE documentation; the Release Notes,
<a href="release-notes.htm">release-notes.htm</a>; and the index,
<a href="index.htm">index.htm</a>. When the file referred to is open, the
link is disabled and the background color is yellow instead of aqua
(you may see different colors, of course). 
</p>

<hr><h2 id="31"><a name="cg-doc-2">1.1 Common Graphics and Integrated Development Environment Documentation</a></h2>

<p id="32">
The documentation for <strong>Common Graphics</strong> and the
<strong>Integrated Development Environment</strong> is integrated with
the general Allegro CL documentation. Start with
<a href="cgide.htm">cgide.htm</a>. The section <a href="cgide.htm#cg-docs-1">About Common Graphics and IDE documentation</a>
in that document provides a map of CG and IDE documentation.
</p>



<hr><h2 id="33"><a name="cl-doc-2">1.2 ANSI Common Lisp and MetaObject Protocol Documentation</a></h2>

<p id="34">
The ANSI specification is reproduced in <a href="../ansicl/ansicl.htm">ANSI Common Lisp</a> (the link is to the
initial page). See also <a href="implementation.htm#acl-and-ansi-1">Allegro CL and the ANSI CL standard</a> and
<a href="implementation.htm#compliance-1">Compliance with
the ANSI specification</a> in
<a href="implementation.htm">implementation.htm</a>.
</p>
<p id="35">
Documentation for the MetaObject Protocol (MOP) is in <a href="mop/contents.html">mop/contents.html</a> (the link is to the
initial page). The files in the <i>mop/</i>
subdirectory are an HTML version of the description of the 
MetaObject Protocol in chapters 5 and 6 of <i>The Art of MetaObject 
Protocol</i> by G. Koczales, J. des Rivieres, and D. Brobrow. 
The HTML version was prepared by Howard Stearns and 
copyrighted by the Elwood Corporation, as described in 
<a href="mop/admin.html">mop/admin.html</a>.
</p>



<hr><h2 id="36"><a name="notation-2">1.3 Some notation</a></h2>

<table border="1" width="95%">
  <tr>
    <td width="26%">Allegro directory</td>
    <td width="74%">Used two ways: (1) the directory in which Allegro CL 
    is installed, and (2)
    the translation of the <em>sys:</em> logical host, which is 
    the directory where files
    needed while Allegro CL is running are located. We use the 
    same term for both because
    these are normally the same directory. (<em>sys:</em> in fact 
    translates to the directory
    containing the Allegro CL executable, usually <em>mlisp</em> or 
    <em>mlisp.exe</em>, usually
    located in the directory into which Allegro CL was installed.)
    </td>
  </tr>
  <tr>
    <td width="26%">Allegro executable or executable</td>
    <td width="74%">The file which is invoked to run Allegro CL. 
    This is a small file and is not usually created by
    users (but see <a href="main.htm">main.htm</a>). 
    The executable can be copied and/or renamed as desired, however.
    Starting with Allegro CL 6.0, there are a number of executables provided,
    each with an associated image file: <i>mlisp</i> (modern,
    case-sensitive lower, supports international character sets),
    <i>mlisp8</i> (modern,
    case-sensitive lower, does not support international character sets),
    <i>alisp</i> (ansi,
    case-insensitive upper, supports international character sets),
    <i>alisp8</i> (ansi,
    case-insensitive upper, does not support international character sets).
    On Windows, the executables have type <i>.exe</i>.
    </td>
  </tr>
  <tr>
    <td width="26%">Allegro image file or image</td>
    <td width="74%">This file contains the bulk of Lisp data. 
    It is typically large and has
    the extension <em>dxl</em>. The executable can only be run 
    with an image file. Image files
    can be created by users (with, e.g., 
    <a href="operators/excl/build-lisp-image.htm"><b>build-lisp-image</b></a>
    and <a href="operators/excl/dumplisp.htm"><b>dumplisp</b></a>). </td>
  </tr>
</table>



<hr><hr><h2 id="37"><a name="overview-1">2.0 The Overview section</a></h2>

<p id="38">
Html files in the <i>doc</i> subdirectory of the Allegro directory
(the directory where Allegro CL and related products were installed)
describe the various features of Allegro CL. There are links where
necessary between these files and relevant files in the reference
section.
</p>
<p id="39">
PDF versions of these files will be available in the
<i>doc/</i> subdirectory of the CD.
</p>

<hr><h2 id="40"><a name="contents-2">2.1 Allegro CL documentation table of contents</a></h2>

<p id="41">
The document <a href="contents.htm">contents.htm</a> is an outline of the
Allegro CL documentation in table of contents format. The outline is
too large to reasonably be included in this document.
</p>



<hr><h2 id="42"><a name="overview-list-2">2.2 Allegro CL documentation: list of overview HTML documents</a></h2>

<p id="43">
Here is a list of the HTML (and several PDF)
files that make up the base Allegro CL
documentation.
</p>
<p id="44">
To view the PDF files  (such as
<i>clim-ug.pdf</i>), you must have an Adobe
Acrobat (r) Reader. This is available free from Adobe. Go to this
location for further information: <a href="http://www.adobe.com/products/acrobat/readstep.html">www.adobe.com/products/acrobat/readstep.html</a>.
</p>


<table BORDER="1" CELLSPACING="1" CELLPADDING="7" WIDTH="95%">



<tr>
<td WIDTH="165" VALIGN="TOP"><a href="http://www.franz.com/products/allegrocache/">AllegroCache</a></td>
<td WIDTH="547" VALIGN="TOP">

AllegroCache is a high-performance, dynamic object caching database
system. The link is to the description page on the Franz
Inc. website. Because the product is developing, documentation quickly
goes out of date. The page linked to has links to all current
documentation (scroll down to the bottom). The documentation is not
included in the <a href="contents.htm">contents.htm</a> nor in
<a href="index.htm">index.htm</a>.

</td>
</tr>
<tr>
<td WIDTH="165" VALIGN="TOP"><a href="http://www.franz.com/products/allegrograph/">AllegroGraph</a></td>
<td WIDTH="547" VALIGN="TOP">

AllegroGraph is a modern persistent, disk-based graph database with
support for high-performance RDF triple-stores. The link is to the
description page on the Franz Inc. website. Because the product is
developing, documentation quickly goes out of date. The page linked to
has links to all current documentation (scroll down to the bottom).
The documentation is not included in the
<a href="contents.htm">contents.htm</a> nor in <a href="index.htm">index.htm</a>.

</td>
</tr>
<tr>
<td WIDTH="165" VALIGN="TOP"><a href="aodbc.htm">aodbc.htm</a></td>
<td WIDTH="547" VALIGN="TOP">This file describes version 2 of Allegro 
ODBC. </td>
</tr>

  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="aserve/aserve.html">aserve/aserve.html</a></td>
    <td WIDTH="547" VALIGN="TOP">AllegroServe is a Web Server facility.
    See also <a href="aserve/tutorial.html">aserve/tutorial.html</a> and
    <a href="aserve/htmlgen.html">aserve/htmlgen.html</a>.
    These documents are not listed in
    <a href="contents.htm">contents.htm</a> nor in <a href="index.htm">index.htm</a>.
  </td>
  </tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="basic-lisp-techniques.pdf">basic-lisp-techniques.pdf</a></td>
    <td WIDTH="547" VALIGN="TOP">This document (in pdf format) is an
    introduction to Lisp and Lisp programming written by
    David Cooper. 
    <p id="45">
    To view the PDF files (such as this one), you must have an Adobe 
    Acrobat (r) Reader. This is available free from Adobe. 
    Go to this location for further information:
<a href="http://www.adobe.com/products/acrobat/readstep.html">www.adobe.com/products/acrobat/readstep.html</a>.
    </p>
    </td>
  </tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="building-images.htm">building-images.htm</a></td>
    <td WIDTH="547" VALIGN="TOP"> 
    This document describes the
    build-lisp-image functionality and describes how to make 
    custom images (i.e. dxl files) configured for your
    purposes. The function 
    <a href="operators/excl/build-lisp-image.htm"><b>build-lisp-image</b></a>,
    described in this document, creates a new
    image from scratch, inheriting a few features but 
    no functionality from the
    running image (the one in which <b>build-lisp-image</b> is called).
    Note that creating an image which contains the 
    functionality of the running Lisp
    image is done with dumplisp (see 
    <a href="operators/excl/dumplisp.htm"><b>dumplisp</b></a>)
    while creating images for delivery is done with 
    <a href="operators/excl/generate-application.htm"><b>generate-application</b></a>, described
    in <a href="delivery.htm">delivery.htm</a>. </td>
  </tr>
<tr>
<td WIDTH="165" VALIGN="TOP"><a href="case.htm">case.htm</a></td>
<td WIDTH="547" VALIGN="TOP">As an extension to standard Common Lisp, 
Allegro CL permits
case sensitivity. This document discusses the issues with case 
sensitivity. </td>
</tr>

<tr>
<td WIDTH="165" VALIGN="TOP"><a href="cggtk-relnotes.html">cggtk-relnotes.html</a></td>
<td WIDTH="547" VALIGN="TOP">
<b>[Linux only]</b> Information on the GTK version of Common Graphics
and the Integrated Development Environment (IDE).
</td>
</tr>

  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="cgide.htm">cgide.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">[Windows only]
    This is the
    introductory document to the Common Graphics and the Integrated
    Development Environment (IDE) documentation. It contains
    a description of
    the documentation and the IDE interface (with links), and
    some essays on aspects of Common Graphics and the Integrated
    Development Environment.</td>
  </tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="clim-ug.pdf">clim-ug.pdf</a></td>
    <td WIDTH="547" VALIGN="TOP">This document is the CLIM User Guide, 
    which was provided as a printed
    (hardcopy) document in earlier releases and, starting with release 6.0,
    is a PDF file. Assuming you have an Adobe Acrobat Reader, clicking on the
    link will display the CLIM User Guide in your browser. Note that the
    table of contents and the Index contain active links.
    Note that CLIM is an add-on product and you may not be licensed
    to use it.
    <p id="46">
    To view the PDF files (such as this one), you must have an Adobe 
    Acrobat (r) Reader. This is available free from Adobe. 
    Go to this location for further information:
<a href="http://www.adobe.com/products/acrobat/readstep.html">www.adobe.com/products/acrobat/readstep.html</a>.
    </p></td>
  </tr>

<tr>
<td WIDTH="165" VALIGN="TOP"><a href="compiler-explanations.htm">compiler-explanations.htm</a></td>
<td WIDTH="547" VALIGN="TOP">
The compiler has an :explain feature that causes it to explain the
actions it takes (with regard to boxing and inlining, etc.) This
document describes the explanations provided by the compiler. It also
discusses inlining.
</td>
</tr>

<tr>
<td WIDTH="165" VALIGN="TOP"><a href="compiling.htm">compiling.htm</a></td>
<td WIDTH="547" VALIGN="TOP">This document describes the compiler. 
It provides information on how code generated by the compiler is 
controlled by the safety, space, speed, and debug
optimization qualities. Information is also provided on 
declarations that will speed up
code and tools for determining the effectiveness of declarations.</td>
</tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="composer.htm">composer.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">This document describes the Allegro
    Composer utility (available on UNIX platforms only).
    Allegro Composer provides windowized tools for development.</td>
  </tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="cross-reference.htm">cross-reference.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">This document describes the cross 
    reference facility in
    Allegro CL. This facility can analyze Lisp code and determine 
    what functions call what
    other functions and what functions are called by other functions. </td>
  </tr>
<tr>
<td WIDTH="165" VALIGN="TOP"><a href="date-time.htm">date-time.htm</a></td>
<td WIDTH="547" VALIGN="TOP">
This document describes support for ISO 8601 date/time representation
in Allegro CL. This support was added by an update in early August,
2006.
</td>
</tr>
<tr>
<td WIDTH="165" VALIGN="TOP"><a href="dde.htm">dde.htm</a></td>
<td WIDTH="547" VALIGN="TOP">
This document describes support for DDE (Dynamic Data Exchange), a
Windows-only facility that allows Windows applications to exchange
data.
</td>
</tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="debugger-api.htm">debugger-api.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">This document provides information about
    internals of the Allegro CL debugger to assist application writers
    who wish to provide customized debugging facilities in their 
    applications. Note that this document does not contain information
    needed for ordinary use of Allegro CL. This document is not listed in
    <a href="contents.htm">contents.htm</a>.</td>
  </tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="debugging.htm">debugging.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">This document describes the debugger in 
    Allegro CL. The
    commands that provide debugging information and features of the 
    debugger are discussed.</td>
  </tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="defsystem.htm">defsystem.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">Defsystem is a facility for managing 
    files associated with an
    application. (It allows specifying the order in which files 
    should be processed and the
    dependence of one file on another etc.) This document 
    describes the defsystem facility in
    Allegro CL. </td>
  </tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="delivery.htm">delivery.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">This document describes how to deliver an 
    application written
    in Allegro CL. There is also a description of how to establish a patch 
    system for your application which
    complements the patch system for Allegro CL, and other 
    delivery-related issues.</td>
  </tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="dll.htm">dll.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">This document points to and describes
    examples showing how to create Lisp-based DLL on Windows. A 
    Lisp-based DLL can be used by developers writing C, C++, and Java
    applications. (<a href="unix-shared-library.htm">unix-shared-library.htm</a> is a 
    similar document describing creating Lisp-based shared libraries 
    on UNIX platforms.)</td>
  </tr>
<tr>
<td WIDTH="165" VALIGN="TOP"><a href="dns.htm">dns.htm</a></td>
<td WIDTH="547" VALIGN="TOP">This document describes 
Allegro CL support for Domain Naming Systems.</td>
</tr>
<tr>
<td WIDTH="165" VALIGN="TOP">
<a href="dom.htm">dom.htm</a>
</td>
<td WIDTH="547" VALIGN="TOP">
This document describes Document Object Module (DOM) support in
Allegro CL.
</td>
</tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="dumplisp.htm">dumplisp.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">
    <a href="operators/excl/dumplisp.htm"><b>dumplisp</b></a> creates a new Lisp image
    file. However, the file created by dumplisp contains most of the 
    functionality present in
    the currently running images, so all defined functionality 
    will still be defined, and the
    current values of variables will be retained -- for the most part, 
    see the document for
    details. (Contrast this with 
    <a href="operators/excl/build-lisp-image.htm"><b>build-lisp-image</b></a>
    which produces a fresh image which inherits very little from the 
    running Lisp image.) This
    document describes dumplisp functionality and discusses issues of 
    importance when using
    dumplisp.</td>
  </tr>

<tr>
<td WIDTH="165" VALIGN="TOP"><a href="ec2.htm">ec2.htm</a></td>
<td WIDTH="547" VALIGN="TOP">This document describes the 
Allegro CL interface to the Amazon Elastic Compute Cloud (EC2).</td>
</tr>

<tr>
<td WIDTH="165" VALIGN="TOP"><a href="eli.htm">eli.htm</a></td>
<td WIDTH="547" VALIGN="TOP">This document describes the 
Emacs-Lisp interface
provided with Allegro CL. See also <a href="startup.htm#acl-as-emacs-subprocess-1">Running Lisp
as a subprocess of Emacs</a> for information on connecting 
Emacs to Allegro CL.</td>
</tr>
<tr>
<td WIDTH="165" VALIGN="TOP"><a href="environments.htm">environments.htm</a></td>
<td WIDTH="547" VALIGN="TOP">
This document describes the environments functionality.  Based on the environments proposal
described in section 8.5 of <i>Common Lisp: the Language</i> 2nd
ed. (but not included in the standard eventually adopted), the
environments functionality allows programmers to better describe the
environments to the compiler.
</td>
</tr>

<tr>
<td WIDTH="165" VALIGN="TOP"><a href="errors.htm">errors.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">Some common errors which may be 
    encountered while using
    Allegro CL are discussed, along with, where possible, 
    suggestions for fixing them. The
    condition system type hierarchy in Allegro CL is also discussed.</td>
  </tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="examples.htm">examples.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">This document has some general
    information on Allegro CL examples, provides some links to sources
    of examples, and lists and (briefly) discusses the examples in the
    <i>examples/</i> subdirectory of the Allegro
    directory.</td>
  </tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="flavors.htm">flavors.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">Flavors is an object-oriented system for 
    use in Lisp. It
    predates and has been effectively replaced by CLOS. We maintain 
    flavors for
    backward-compatibility only. The Allegro CL flavors implementation 
    is described in this
    document. Note that the reference portion (definitions of 
    functions, macros, variables,
    etc.) is included with the text of this document. 
    (Most functionality is described in the
    reference section of the documentation rather than being 
    integrated into these html
    documents.) This document is unchanged in this release.</td>
  </tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="foreign-functions.htm">foreign-functions.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">The foreign function interface 
    allows compiled foreign code
    to be loaded into a Lisp image and run from Lisp. 
    (<em>Foreign</em> means C, C++, and
    Fortran, along with other C compatible object files.) Because of 
    differing internal
    representations of data, it is not entirely straightforward to 
    pass data from Lisp to C,
    to call foreign functions from Lisp, and to call back to Lisp 
    from a foreign function.
    This document describes the tools provided for defining and 
    calling foreign code.</td>
  </tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="ftp.htm">ftp.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">This document describes the Allegro
    FTP Client module. It can be used to communicate with an FTP server.</td>
  </tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="ftype.htm">ftype.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">This document describes how foreign 
    types (e.g. C longs and
    shorts, C strings, C structures, etc.) can be defined in 
    Lisp and how Lisp can access and
    operate on instances of foreign types.</td>
  </tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="fwrappers-and-advice.htm">fwrappers-and-advice.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">The new fwrapper facility and the old,
    deprecated advice facility, both allow adding code that is run 
    around functions (in some ways similar to around methods).
    This document describes how to use these facilities and has links
    to the relevant reference documentation.</td>
  </tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="gc.htm">gc.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">Lisp maintains a garbage collector which regularly frees up
    space in the Lisp heap which is no longer used. This process is called garbage collection.
    While garbage collection is fully automatic and so a user need not necessarily think about
    it, configuring the garbage collector to a specific application or to a pattern of Lisp
    use often results in significantly better performance. </td>
  </tr>
<tr>
<td WIDTH="165" VALIGN="TOP"><a href="gray-streams.htm">gray-streams.htm</a></td>
<td WIDTH="547" VALIGN="TOP">This file provides details of the 
implementation of Gray streams
in Allegro CL. Gray streams are the older stream implementation.
Starting with release 6.0 simple-streams, which have advantages over
Gray streams, is the primary stream implementation,
but Gray streams are still supported.
Simple-streams are described in <a href="streams.htm">streams.htm</a>.</td>
</tr>
  <tr>
  <td WIDTH="165" VALIGN="TOP"><a href="../gtk/readme.txt">../gtk/readme.txt</a></td>
    <td WIDTH="547" VALIGN="TOP">GTK is a graphics toolkit for
    X windows on various UNIX machines (and on Windows). 
    Allegro CL 8.2
    has separate interfaces to GTK+ 1.2 and GTK+ 2.0, available so far on
    Linux and Solaris machines. The referenced 
    <i>readme.txt</i> has further information.</td>
  </tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="iacl.htm">iacl.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">This document describes International 
    character set support in Allegro CL. Allegro CL can 
    support international character sets on all platforms.
    Note that non-international executables are also provided -- 
    <i>mlisp8</i> for example.
    </td>
  </tr>
<tr>
<td WIDTH="165" VALIGN="TOP"><a href="imap.htm">imap.htm</a></td>
<td WIDTH="547" VALIGN="TOP">This document describes the support for a
client-server protocol for processing electronic mail boxes. It includes support for constructing MIME-compliant email messages.
</td>
</tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="implementation.htm">implementation.htm</a></td> <td WIDTH="547" VALIGN="TOP">This document provides specific
    information about the implementation of Allegro CL. Many details
    of the Common Lisp standard are implementation-dependent (such as
    the number of distinct floating-point types and their mapping to
    machine floats, the largest fixnum, the implementation of random,
    etc.) and this document says what Allegro CL does. Also discussed
    are extensions to Common Lisp functions (such as open, make-array,
    and others where an Allegro-specific enhancement is
    provided).</td>
  </tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="index.htm">index.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">This document provides links to other 
    documents, including
    links to all Allegro CL functions, variables, etc. </td>
  </tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="inspector.htm">inspector.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">This document describes the non-windowized 
    inspector. (Users
    on Windows with the Integrated Development Environment get all 
    the functionality described
    in this document in inspector windows.)</td>
  </tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="installation.htm">installation.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">This document describes 
    how to install Allegro CL and related products.</td>
  </tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><em>introduction.htm</em></td>
    <td WIDTH="547" VALIGN="TOP">The document you are now reading.</td>
  </tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="jlinker.htm">jlinker.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">This document describes a Java/Lisp interface
    available with Allegro CL.</td>
  </tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="jil.htm">jil.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">This document describes a Java in
    Lisp facility in Allegro CL. Java in Lisp (jil) is a language for 
    writing programs to run on the Java Virtual Machine (jvm). It uses 
    a syntax familiar to Lisp programmers.</td>
  </tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="loading.htm">loading.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">This document describes details of 
    the implementation of
    cl:load (such as where is a file with no path information 
    looked for). cl:require is also
    discussed.</td>
  </tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="main.htm">main.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">Allegro CL allows you to define your own 
    C main(), as
    described in this document. </td>
  </tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="miscellaneous.htm">miscellaneous.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">This document describes functionality 
    too limited to need a
    separate document. </td>
  </tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="mop/contents.html">mop/contents.html</a></td>
    <td WIDTH="547" VALIGN="TOP">The files in the <i>mop/</i> 
    subdirectory are an HTML version of the description of the 
    MetaObject Protocol in chapters 5 and 6 of <i>The Art of MetaObject 
    Protocol</i> by G. Koczales, J. des Rivieres, and D. Brobrow. 
    The HTML version was prepared by Howard Stearns and 
    copyrighted by the Elwood Corporation, as described in 
    <a href="mop/admin.html">mop/admin.html</a>.
    <p id="47">
    We thank Mr. Stearns and the Elwood Corporation for their kind 
    permission in allowing Franz Inc. to use these files in our 
    product. Much useful information about Lisp, including 
    these files, can be found on the Association of Lisp Users 
    (ALU) home page, maintained by the Elwood Corporation, at 
    <a href="http://www.elwoodcorp.com/alu/">http://www.elwoodcorp.com/alu/</a>.</p>
    </td>
  </tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="multiprocessing.htm">multiprocessing.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">Allegro CL supports multiprocessing using lightweight
    processes (within the running Lisp process) on UNIX and multiprocessing using OS threads
    on Windows. The functionality is described in this document.</td>
  </tr>
<tr>
<td WIDTH="165" VALIGN="TOP"><a href="mysql.htm">mysql.htm</a></td>
<td WIDTH="547" VALIGN="TOP">This document describes the new
facility that allows Lisp to connect directly to MySQL.
MySQL is a powerful, efficient, production ready open-source database.
</td>
</tr>
<tr>
<td WIDTH="165" VALIGN="TOP"><a href="ndbm.htm">ndbm.htm</a></td> <td WIDTH="547" VALIGN="TOP">This document describes the NDBM facility
(UNIX only). This is an elementary but on occasion useful database
facility.
</td>
</tr>
<tr>
<td WIDTH="165" VALIGN="TOP"><a href="ole.htm">ole.htm</a></td>
<td WIDTH="547" VALIGN="TOP">A document describing interfacing to
OLE. Allegro CL for Windows only. See
also <a href="ole_reference.htm">ole_reference.htm</a>.</td>
</tr>
<tr>
<td WIDTH="165" VALIGN="TOP"><a href="../opengl/readme.txt">../opengl/readme.txt</a></td> <td WIDTH="547" VALIGN="TOP">OpenGL is an open graphics library. An
interface to OpenGL from Allegro CL was generated by SWIG. Layered
upon this interface are a GTK and Common Graphics (Windows-only)
veneer.  The readme.txt file referenced has a brief introduction to
the interface. More information is in these files: on the Common
Graphics veneer: <a href="../opengl/cggl/doc.txt">../opengl/cggl/doc.txt</a>
(Windows only). More information is in these files: on the GTK veneer:
<a href="../opengl/gtkgl/doc.txt">../opengl/gtkgl/doc.txt</a>. (We
also have an interface to GTK, mentioned above -- see <a href="../gtk/readme.txt">../gtk/readme.txt</a>. The GTK veneer
on OpenGL provides OpenGL additions in GTK style.)
</td>
</tr>
<tr>
<td WIDTH="165" VALIGN="TOP"><a href="oracle-interface.htm">oracle-interface.htm</a></td>
<td WIDTH="547" VALIGN="TOP">This document describes the new
Allegro Oracle Direct Connect interface to Oracle databases.
</td>
</tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><b>orblink</b></td>
    <td WIDTH="547" VALIGN="TOP">Allegro CL includes an Orblink 
    implementation. It is documented in its own directory. 
    Start with <a href="../orblink/readme.htm">readme.htm</a> 
    in the <i>orblink</i> directory.</td>
  </tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="os-interface.htm">os-interface.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">This document describes how to run OS 
    functionality from
    within Lisp and also how to find out the current directory, 
    how to change the current
    directory, and other aspects of interfacing with the operating system.</td>
  </tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="packages.htm">packages.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">This document provides details of the 
    implementation of
    packages in Allegro CL and includes a description of package locking 
    (which prevents
    accidental redefinition of Common Lisp and Allegro CL functionality). </td>
  </tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="pathnames.htm">pathnames.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">This document provides information on 
    the implementation of
    pathnames (including logical pathnames) in Allegro CL.</td>
  </tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><b>plugin.htm [removed document]</b></td>
    <td WIDTH="547" VALIGN="TOP">This document in earlier releases
    described example code for implementing a Common Graphics application 
    as a plugin for HTML browser programs such as Internet Explorer and
    Netscape Navigator. The example has been removed.  We have encountered 
    difficulty in making this functionality robust, and have decided not to 
    attempt to support it in the current release.</td>
  </tr>
<tr>
<td WIDTH="165" VALIGN="TOP">
<a href="prolog.html">prolog.html</a>
</td>
<td WIDTH="547" VALIGN="TOP">
This document describes the implementation of Allegro Prolog in
Allegro CL. The documentation is preliminary. It assumes prior
knowledge of the Prolog language.
</td>
</tr>
<tr>
<td WIDTH="165" VALIGN="TOP"><a href="phtml.htm">phtml.htm</a> and 
<a href="pxml.htm">pxml.htm</a></td>
<td WIDTH="547" VALIGN="TOP">These files (which are quite preliminary)
describe the Lisp-based HTML and XML parsers. Updates to these
files will be provided over time. These documents are not listed in
<a href="contents.htm">contents.htm</a>.</td>
</tr>
<tr>
<td WIDTH="165" VALIGN="TOP">
<a href="regexp.htm">regexp.htm</a>
</td>
<td WIDTH="547" VALIGN="TOP">
This document describes the regular expression APIs available in
Allegro CL.  There is an older and a newer interface and both are
described in ths document.
</td>
</tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="release-notes.htm">release-notes.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">This document is the release notes 
    for Allegro CL on all
    platforms. Please refer to this document if you see unexpected 
    behavior.</td>
  </tr>
<tr>
<td WIDTH="165" VALIGN="TOP"><a href="rpc.htm">rpc.htm</a></td>
<td WIDTH="547" VALIGN="TOP">This document describes the
Remote Procedure Call (rpc) utility.</td>
</tr>
<tr>
<td WIDTH="165" VALIGN="TOP"><a href="runtime.htm">runtime.htm</a></td>
<td WIDTH="547" VALIGN="TOP">Runtime is the technical solution to 
the restriction of
runtime licenses. It has both legal and programming meanings. 
The legal meaning
(determining, e.g., to whom a runtime image can be distributed 
and at what royalty) is
defined in the Allegro CL Runtime License Agreement. 
In this document, the programming meaning is discussed. Information is
provided on how to create runtime images (but also see 
<a href="delivery.htm">delivery.htm</a>
and <a href="building-images.htm">building-images.htm</a>), what are the limitations of a
runtime image, and so on.</td>
</tr>
<tr>
<td WIDTH="165" VALIGN="TOP"><a href="runtime-analyzer.htm">runtime-analyzer.htm</a></td>
<td WIDTH="547" VALIGN="TOP">
The runtime analyzer is a tool for determining the time and space
usage of code. With this tool, programs can be made more efficient and
bottlenecks can be identified. This document describes the runtime
analysis tools, which are statistical samplers of time and space usage
and a function call counting profiler. Note that not all versions of
Allegro CL include the runtime analyzer. (In earlier releases, this
tool was called the profiler.)
</td>
</tr>
<tr>
<td WIDTH="165" VALIGN="TOP"><a href="sax.htm">sax.htm</a></td>
<td WIDTH="547" VALIGN="TOP">
The sax module provides a validating parser for XML 1.0 and XML
1.1. The interface to the parser based on the SAX (Simple API for XML)
specification. Users provide methods for the various generic functions
that implement the parser.
</td>
</tr>
<tr>
<td WIDTH="165" VALIGN="TOP"><a href="shell-module.htm">shell-module.htm</a></td>
<td WIDTH="547" VALIGN="TOP">The shell module is intended to provide 
UNIX shell-like commands, such as you find on a modern UNIX system, 
and in addition shortcuts for some common Perl idioms. </td>
</tr>

<tr>
<td WIDTH="165" VALIGN="TOP"><a href="smp.htm">smp.htm</a></td>
<td WIDTH="547" VALIGN="TOP">This document describes the changed
functionality for managing multiple processes in a Symmetric
Multiprocessing (SMP) Lisp. SMP will be introduced in release 9.0 but
the API is available now so code can be changed as necessary to work
with SMP. (Allegro CL 8.1 users must load the patch released in July,
2009.)</td>
</tr>

<tr>
<td WIDTH="165" VALIGN="TOP"><a href="socket.htm">socket.htm</a></td>
<td WIDTH="547" VALIGN="TOP">Sockets are a way for different running 
programs to
communicate with each other. This document describes 
the support for sockets within
Allegro CL.</td>
</tr>
<tr>
<td WIDTH="165" VALIGN="TOP"><a href="soap.htm">soap.htm</a></td> <td WIDTH="547" VALIGN="TOP">This document describes the Allegro
CL/SOAP API.</td>
</tr>
<tr>
<td WIDTH="165" VALIGN="TOP"><a href="source-file-recording.htm">source-file-recording.htm</a></td>
<td WIDTH="547" VALIGN="TOP">Allegro CL provides a facility for 
remembering the file in
which a Lisp function (or variable, parameter, macro, etc.) 
is defined. That facility is
described in this document.</td>
</tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="startup.htm">startup.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">This document describes starting Allegro CL. 
    Various methods
    of starting (from a shell, as a subprocess of emacs, on Windows 
    with or without the
    Integrated Development Environment, etc.) are discussed. 
    Command-line arguments and
    initializations files (both how to use them and how to 
    suppress them) are described along
    with other things you should know about startup. 
    Startup problems and suggested solutions
    are also discussed. </td>
  </tr>
<tr>
<td WIDTH="165" VALIGN="TOP"><a href="streams.htm">streams.htm</a></td>
<td WIDTH="547" VALIGN="TOP">This file provides details of the 
implementation of simple-streams
in Allegro CL. Simple-streams are the new standard stream type.
Earlier releases of Allegro CL used Gray streams, which are still
supported. See <a href="gray-streams.htm">gray-streams.htm</a>.</td>
</tr>

<tr>
<td WIDTH="165" VALIGN="TOP"><a href="string-utilities.htm">string-utilities.htm</a></td>
<td WIDTH="547" VALIGN="TOP">This file describes
the <b>util-string</b> module which contains string manipulation
functionality.</td>
</tr>

  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="test-harness.htm">test-harness.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">This document describes the test harness 
    facility. A test harness is a collection of macros and variables 
    associated with testing programs
    and applications, along with templates for test forms.</td>
  </tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="top-level.htm">top-level.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">The top level is the interface to a 
    running development Lisp
    image. (We say `development' to distinguish from a Lisp application. 
    Most applications
    provide their own top level.) This document provides information 
    about the Allegro CL top
    level. </td>
  </tr>
  <tr>
    <td WIDTH="165" VALIGN="TOP"><a href="unix-shared-library.htm">unix-shared-library.htm</a></td>
    <td WIDTH="547" VALIGN="TOP">This document points to
    and describes examples showing how to create Lisp-based shared
    libraries on UNIX platforms.  A Lisp-based shared library can be used
    by developers writing C, C++, and Java
    applications. (<a href="dll.htm">dll.htm</a> is a similar document
    describing creating a Lisp-based Windows DLL.)</td>
  </tr>
<tr>
<td WIDTH="165" VALIGN="TOP"><a href="uri.htm">uri.htm</a></td>
<td WIDTH="547" VALIGN="TOP">This document describes the URI 
facility. URIs are a superset in functionality and syntax to 
URLs (Universal Resource Locators) and URNs (Universal Resource Names).
Allegro CL provides support for manipulating URIs.
</td>
</tr>



<tr>
<td WIDTH="165" VALIGN="TOP">
<a href="webactions.html">webactions.html</a>
</td>
<td WIDTH="547" VALIGN="TOP">
This is the user guide and reference manual for the Allegro Webactions
facility for generating dynamic web pages. See also <a href="using-webactions.html">using-webactions.html</a>, which is
a general introduction. Webactions works with AllegroServe (see
<a href="aserve/aserve.html">aserve/aserve.html</a>).
</td>
</tr>
<tr>
<td WIDTH="165" VALIGN="TOP">
<a href="xml-rpc.htm">xml-rpc.htm</a>
</td>
<td WIDTH="547" VALIGN="TOP">
This document describes the Allegro
CL implementation of XML-RPC, which implements classes
and functions to support the XML-RPC protocol for remote function
calls through HTTP connections.</td>
</tr>
</table>




<hr><hr><h2 id="48"><a name="reference-1">3.0 The Reference section</a></h2>


<p id="49">
For Allegro CL-specific functionality, virtually every operator
(function, generic function, or macro), every constant and variable,
and many classes defined in Allegro CL, other than standard Common
Lisp functionality, are described in individual HTML files called
<em>description pages</em>. These files are arranged as follows:</p>

<p id="50"><em>[Allegro directory]/doc/[kind]/[package]/[symbol].htm</em></p>

<p id="51">Where:</p>

<p id="52"><em>[Allegro directory]</em> is the directory into which Allegro CL
was installed. The document you are reading is <em>[Allegro
directory]/doc/introduction.htm</em>.</p>

<p id="53"><em>[kind]</em> is one of </p>

<blockquote>
  <blockquote>
    <ul>
      <li id="54">operators (for functions, generic functions, and macros)</li>
      <li id="55">variables (for variables and constants)</li>
      <li id="56">classes</li>
      <li id="57">other (currently, top-level commands, ide-menus-and-dialogs)</li>
    </ul>
  </blockquote>
</blockquote>

<p id="58"><em>[package]</em> is the home package of the symbol being documented, 
and is one of</p>

<blockquote>
  <blockquote>
    <p id="59">common-graphics, compiler, composer, dbi, defsys, excl, ff, 
    javatools.jil,
    javatools.jlinker,
       mp, net.post-office, net.rpc, net.uri, prof, 
    socket, system, top-level, util.test, xref</p>
  </blockquote>
</blockquote>

<p id="60">
Note that some packages have no entries under certain kinds.
</p>

<p id="61">
<em>[symbol]</em> is the symbol naming the object (or the name of the
top-level command). A * character in a symbol name is handled specially. * appears as <strong>s_</strong>
or <strong>_s</strong> depending on whether the * is leading or trailing.</p>

<p id="62">Thus, the documentation for the variable <strong>excl:*enable-package-locked-errors*</strong>
is in the file:</p>

<p id="63"><em>[Allegro
directory]/doc/variables/excl/s_enable-package-locked-errors_s.htm</em></p>

<p id="64">And the documentation for the function <strong>system:command-line-arguments</strong>
is in the file</p>

<p id="65"><em>[Allegro
directory]/doc/operators/system/command-line-arguments.htm</em></p>

<p id="66">
<b>Note</b>: Common-graphics operators are further organized by the
first letter of the symbol naming them. This prevents a directory with
over 1600 files.
</p>

<p id="67">Each page names the symbol, its home package, and the type of the
object being described (function, macro, variable, class, etc.) </p>

<p id="68">Descriptions of operators include the argument list. Generally the
argument list is the same as returned by functions like 
<a href="operators/excl/arglist.htm"><b>arglist</b></a> but not
always. It will not be when (1) the stored argument list is
abbreviated (e.g.  &rest args or &key &allow-other-keys,
where argument processing is done within the operator body) and thus
unhelpful; or (2) the stored argument names are unhelpful
(<em>struct</em> -- because the object is a struct -- rather than,
say, <em>process</em> or <em>pathname</em>).
</p>

<p id="69">Some arguments are listed but described as not for programmer use
(these arguments may be intended for later enhancements or may support
internal actions only). A few pages describe internal functionality
not intended for programmer use. Symbols naming such functionality are
exported for unavoidable system reasons and because they are exported,
they have description pages.</p>

<hr><hr><h2 id="70"><a name="assistance-1">4.0 Assistance available on the internet and the World Wide Web</a></h2>

<p id="71">
Franz Inc. maintains a World Wide Web home page (<a href="http://www.franz.com/">http://www.franz.com/</a>). Along with
much else, the latest update of the Allegro CL documentation, the
latest Allegro CL FAQ, and the latest Allegro CL patches can be found
in the support section.
</p>

<hr><h2 id="72"><a name="faq-2">4.1 The Allegro CL FAQ</a></h2>

<p id="73">
FAQ stands for <i>Frequently Asked Questions</i>. The <b>Allegro CL
FAQ</b> is a document written in question and answer format containing
answers to questions often asked by users of Allegro CL and related
products. Franz Inc. updates the FAQ regularly. 
</p>

<p id="74">The FAQ is available on the Franz Inc. WWW home page (in the
<b>Support</b> section):
</p>

<blockquote>
      <p id="75"><a href="http://www.franz.com/support/faq//">http://www.franz.com/support/faq/</a></p>
    </blockquote>


<hr><h2 id="76"><a name="patches-2">4.2 Patches</a></h2>

<p id="77">
A patch is a file (typically a fasl -- compiled Lisp -- file) which
either corrects some error in the product or provides some enhancement
or new feature. Patches are available from the Franz Inc. web site.
(Some patches, particularly those which implement an improvement, an
enhancement, or a new feature rather than a bug fix, are restricted to
supported customers only.) Patches are stored in both locations with a
directory structure that mirrors the distribution directory structure,
so that patch files can be downloaded into the correct directories of
the distribution. The function <a href="operators/system/update-allegro.htm"><b>update-allegro</b></a> downloads patch files and
places them in the correct locations.
</p>
<p id="78">
There are various kinds of patch files. 
</p>
<ul>
<li id="79">Files with names like <i>p8a002.001</i>. These are
called <i>patches</i> and are compiled Lisp files (despite not having
the extension <i>fasl</i>) which fixes some specific
problem or provides an enhancement or, sometimes, adds a new
feature). The names of these files encode information about their
applicability and use. Please do not rename them. The extension
indicates the patch version. Patches are often replaced (perhaps to
provide additional fixes, perhaps to fix an introduced problem). When
that happens, a new version (with a different extension). The patch
system ensures you have a consistent set of patches. These patch files
go in the <i>update/</i> directory of the Allegro
directory. Note the second character ("8" in the example) identifies
the version of Allegro CL and is the value of
<code>excl::*cl-patch-version-char*</code>.)
</li>
<li id="80">
Files with module names and three-digit numeric extensions
(top-level.001 or streams.003). These files replace Lisp library files
in the <i>code/</i> subdirectory of the Allegro
directory. (Most of these files are originally in the Lisp bundle file
and so you may not see the originals of these
files.) The system knows to look in the <i>code/</i>
subdirectory before looking in the bundle file. The names of these
files must also not be changed.
</li>
<li id="81">
Miscellaneous documentation and other files. Documentation files may
be updated from time to time and <a href="operators/system/update-allegro.htm"><b>update-allegro</b></a> will download these files as
well.
</li>
</ul>

<p id="82">
On the web site,
<a href="http://www.franz.com/">http://www.franz.com/</a>,
choose Support, then click on the link to patches and follow
the instructions.
</p>



<hr><h2 id="83"><a name="patch-further-2">4.3 Further patch information</a></h2>

<p id="84">Note the following points. 
</p>

<ul>
  <li id="85">The patch files are numbered and coded by product, and they are 
    read in order, higher
    numbers first. The order in which they are read is very important. 
    Do not change the names
    of patch <i>fasl</i> files. A single patch may have various 
    versions. This means the patch
    has been updated. </li>
  <li id="86">Do not use a patch for one release of Allegro CL 
      with another
      release. (Patches are placed in a subdirectory of the Allegro 
      directory. Since each new release (typically) has a different 
      Allegro directory,
      you can have more than one distribution on a single machine,
      and patches in each one.
      If you do that, be sure that patches for a particular release
      are placed only in that release's Allegro directory.) </li>
</ul>



<hr><h2 id="87"><a name="patch-get-all-2">4.4 Should you get all patches?</a></h2>

<p id="88">
Whether or not you should get all available patches depends 
on your current tolerance for instability. Because 
patches are less well tested than releases, patches may 
occasionally introduce errors as well as fix problems. 
</p>
<p id="89">
However, even a correct patch may introduce instability: 
if a patch enables a feature which was previously 
ignored or signals an error (correctly) where none was 
previously signaled, your code may fail because the 
patch uncovered a problem which was previously unnoticed. 
Suppose, for example, a patch causes certain declarations to 
be used during compilation (without the patch they are ignored). 
Such a patch would not fix a bug (since ignoring declarations is 
permitted) but if your code happened to contain incorrect declarations, 
then the patch would be destabilizing. (Without the patch, the wrong 
declarations were ignored and so did not harm. With the patch, they are used.)
</p>
<p id="90">
The potential impact of a patch is given in the LOG file in the patch
directory. Here are two entries from the 5.0 patch LOG (the 
8.2 patch
LOG file will be organized similarly):
</p>
<pre id="91">
   Mon Sep 14 11:27:52 PDT 1998
   Patch: update/p0a001.001
   Fixes a bug where find-restarts, when given the optional condition 
   argument, would not consider restarts that are not associated with 
   any condition.
   <b>Impact: Should be minor</b>

   Tue Sep 1 14:33:29 PDT 1998
   Patch: update/p0b002.001
   Fixes self tail recursive call with intermixed args. 
   Problem resulted in errors in compiled code, 
   not in interpreted.
   <b>Impact: Recommended.</b>
</pre>
<p id="92">
Notice the Impact line (made bold for emphasis). It provides an
assessment of how destabilizing a patch may be. Note that in these
cases, one is minor and the other patch (which fixes a problem where
compiled code ran incorrectly) is recommended.
</p>
<p id="93">
If you are in a development cycle, our advice is to get all available
patches for a platform (machine type) and Allegro CL
version. Patches for associated products (such as CLIM) should be
included as well.
</p>
<p id="94">
But if you are preparing a delivery, we advise you to be selective,
perhaps getting only the patches that deal with problems you report.
</p>
<p id="95">
Note that we have previously advised even users who are developing
applications rather than preparing for delivery to only include
patches when they experienced the problem fixed by the patch. There
are pluses and minuses to each recommendation. While including all
patches gives you all available fixes, as we said above, patches are
not as well tested as releases and sometimes a patch introduces a new
problem or bug. However, we have changed our advice for when you are
developing because many patches are for performance, and therefore
generally useful, and because problems introduced by patches, while
they do happen, are uncommon and are usually fixed quite quickly
(typically with an updated patch), and because it is relatively easy
to back out a patch if it causes problems.
</p>
<p id="96">
Note that the report created by <a href="operators/excl/dribble-bug.htm"><b>dribble-bug</b></a> lists all patches
included in the image. It is very important that this information be
included with a bug report.
</p>



<hr><h2 id="97"><a name="patch-what-todo-2">4.5 What to do with patches when you have downloaded them</a></h2>

<p id="98">
<a href="operators/system/update-allegro.htm"><b>update-allegro</b></a> downloads
patches but does not create new images.  To create new images, exit
Lisp (if you are running it) and
run <b><i>update.sh</i></b> on UNIX machines
and <b><i>update.exe</i></b>
on Windows machines.  These scripts will update all Allegro-supplied
image (dxl) files by starting Lisp with the dxl file and
calling <a href="operators/excl/build-lisp-image.htm"><b>build-lisp-image</b></a>. They also make backups of
the the dxl files. You must recreate any image files you created
yourself.
</p>

<p id="99">
The usage for <b>update.sh</b> is
</p>

<pre id="100">
update.sh [-u] [--proxy proxy] [--proxy-auth auth]
</pre>

<p id="101">
Without any arguments, rebuild images to contain all downloaded
patches.  With the <b>-u</b> argument, download new updates before
rebuilding images. <b>--proxy</b> allows specification of a proxy host
and port.  It is typically something like
"cobweb:3128". <b>--proxy-auth</b> allows specification of proxy basic
authentication. It is typically your password for the proxy. You may
specify <b>--proxy</b> without
<b>--proxy-auth</b>. See <a href="operators/system/update-allegro.htm"><b>sys:update-allegro</b></a>.
</p>
<p id="102">
The usage for update.exe (on Windows) is
</p>

<pre id="103">
update.exe [-u] [-h hostname] [-p proxy-host] [-P proxy-auth] [-f]
</pre>

<p id="104">
<b>-u</b> means update before rebuilding. <b>-h</b> -- the value of
the hostname passed to <a href="operators/system/update-allegro.htm"><b>sys:update-allegro</b></a> (for updating). -p and -P
are the proxy host and proxy authority passed to <a href="operators/system/update-allegro.htm"><b>sys:update-allegro</b></a>. <b>-f</b> -- forces
rebuild even when no new patches (only needed when <b>-u</b> is
specified).
</p>

<p id="105">
Note on backups of dxl files: the first time
<i>update.sh/bat</i> is run, the dxl files are copied to
files with `orig' added -- <i>mlisp.dxl</i> to
<i>mlisporig.dxl</i>, e.g. The second time, they are
copied with `old' added -- <i>mlisp.dxl</i> to
<i>mlispold.dxl</i>, e.g. On subsequent runs, the backup
may not be done correctly. Please move <i>*old.dxl</i>
to <i>*oldn.dxl</i> (for some <i>n</i> -- for example,
<i>mlispold.dxl</i> to
<i>mlispold1.dxl</i>) before updating to ensure that the
backups are done correctly.
</p>

<p id="106">
<b>Backing out of patches</b>: you may occasionally discover that a
patched image does not work properly. (Perhaps the patch was faulty,
or perhaps the fix, whatever it is, interacts incorrectly with your
application.)  To back out of patches, (1) rename the new dxl files,
(2) copy the original dxl files (they will have "old" or "orig"
appended to their filenames) to their original names, and (3) move
any <i>new</i> fasl files out of the <i>code/</i>
subdirectory. You are now back to where you were before running
<b><i>update.sh</i></b>
or <b><i>update.bat</i></b>.
</p>




<hr><h2 id="107"><a name="update-bundle-2">4.6 Updating the bundle file</a></h2>


<p id="108">
The bundle file contains a collection of fasl files associated with
Allegro CL modules. When a module is autoloaded or loaded by a call to
<a href="../ansicl/dictentr/provider.htm"><b>require</b></a>, it is typically
loaded from the bundle file. (If you see the message "Fast loading
from bundle...", the file is being loaded from the bundle file.)  The
location and name of the bundle file are returned by the function
<a href="operators/excl/bundle-pathname.htm"><b>bundle-pathname</b></a>.
</p>
<p id="109">
Sometimes module fasl files have to be updated. In that case, a new
file is downloaded from the Franz Inc. patch repository and is
placed in the <i>code/</i> subdirectory of the Allegro
directory.  The system always checks the code directory first for a
module fasl file before looking in the bundle file. That assures that
the latest version of a module fasl file is loaded.
</p>
<p id="110">
However, it is often useful to update the bundle file to include all
the updated module fasl files. In Allegro CL
, this update is performed
automatically (when <b>update.sh</b>
or <b><i>update.bat</i></b>
is run).
</p>





<hr><hr><h2 id="111"><a name="reporting-bugs-1">5.0 Reporting bugs</a></h2>

<p id="112">
Before reporting a bug, please study this document and the ANSI CL
Standard document. 
</p>

<p id="113">
A report that such and such happened is generally of limited value
in determining the cause of a problem. It is very important for us to
know what happened before the error occurred: what you typed in, what
Allegro CL typed out. A verbatim log may be needed. If you are able to
localize the bug and reliably duplicate it with a minimal amount of
code, it will greatly expedite repairs.
</p>

<p id="114">
It is much easier to find a bug that is generated when a single
isolated function is applied than a bug that is generated somewhere
when an enormous application is loaded.  Although we are intimately
familiar with Allegro CL, you are familiar with your application and
the context in which the bug was observed. Context is also important
in determining whether the bug is really in Allegro CL or in something
that it depends on, such as the operating system. 
</p>

<p id="115">
To this end, we request that your reports to us of bugs or of
suspected bugs include the following information. If any of the
information is missing, it is likely to delay or complicate our
response.
</p>

<ul>
<li id="116">
<b>dribble-bug or print-system-state output</b>.  The function <a href="operators/excl/dribble-bug.htm"><b>dribble-bug</b></a> is like <a href="../ansicl/dictentr/dribble.htm"><b>common-lisp:dribble</b></a> but prefaces the
transcript with information about the image being run (platform, OS,
Allegro CL version, patches loaded, and much else). Please include the
output of <a href="operators/excl/dribble-bug.htm"><b>dribble-bug</b></a> in the
first report of any bug or problem. The function <a href="operators/excl/print-system-state.htm"><b>print-system-state</b></a> prints the
information about the platform, patches, etc. that goes into a
dribble-bug file. You can use that function to print the data to send
to us instead of using <a href="operators/excl/dribble-bug.htm"><b>dribble-bug</b></a>, but that information, however,
obtained should be included in each bug report.
</li>
<li id="117">
<b>Information about you.</b> Tell us who you are, where you are and
how you can be reached (an electronic mail address if you are
reachable via the Internet, a postal address otherwise, and your
telephone number), and in whose name the license is held. It is best
to put the email address in the text of the message (in case the
mailer program messes up the return address). Please include a
telephone number in case an email response bounces.</li>
<li id="118">
<b>A description of the bug or problem.</b> Describe clearly and
concisely the behavior that you observe and why it is not what you
expect or want.
</li>
<li id="119">
<b>Exhibits.</b> Provide us with the smallest, self-contained Lisp
source fragment that will duplicate the problem, and a log
(e.g. produced with <a href="operators/excl/dribble-bug.htm"><b>dribble-bug</b></a>) of a complete session with
Allegro CL that illustrates the bug. Note that dribble output does not
log certain messages printed by the Operating System or printed by
foreign code called by Lisp or routines called by <a href="operators/excl/run-shell-command.htm"><b>run-shell-command</b></a> and related functions. If
such output is relevant, please capture it in an Emacs buffer or in
some similar fashion and include the output with the information you
submit.
</li>
</ul>

<p id="120">
Use <a href="operators/excl/dribble-bug.htm"><b>dribble-bug</b></a> as
follows. Entering 
</p>

<pre id="121">
(excl:dribble-bug <em>filename</em>)
</pre>

<p id="122">
causes implementation and version information to be written to the
file specified by <em>filename</em>, and then records the Lisp session
in the same file. Exiting Lisp or entering 
</p>

<pre id="123">
(dribble)
</pre>

<p id="124">
will close the file after the bug has been exhibited. The following
dialog provides a rudimentary template for the kernel of a bug
report.
</p>

<pre id="125">
USER(5) (dribble-bug "dribout")
USER(6) ;; Now duplicate your bug . . .
USER(7) (dribble)
</pre>

<p id="126">
It may be that the bug causes failure which prevents getting
a dribble transcript showing the bug. We still need the dribble-bug
output showing the platform, patches, etc. Get this with 
</p>

<pre id="127">
USER(5) (dribble-bug "dribout")
USER(6) (dribble)
</pre>

<p id="128">
<a href="operators/excl/print-system-state.htm"><b>print-system-state</b></a> prints
the information that goes in a dribble-bug file. You can use that
function to get the information if you wish. In either case, send the
contents of the file <i>dribout</i> or the output of
<a href="operators/excl/print-system-state.htm"><b>print-system-state</b></a>.
</p>

<p id="129">
Send bug reports to either the electronic mail or postal address given
in <a href="#where-to-send-bugs-2">Section 5.1 Where to report bugs and send questions</a>. We will
investigate the report and inform you of its resolution in a timely
manner.</p>

<p id="130">
As we said before, the <a href="operators/excl/dribble-bug.htm"><b>dribble-bug</b></a> log does not capture things
printed by the operating system or by operating system
utilities. These messages may be important. Please be sure you include
them in the message.
</p>

<hr><h2 id="131"><a name="where-to-send-bugs-2">5.1 Where to report bugs and send questions</a></h2>

<p id="132">
Send problem reports and technical questions of any type by email to
<a href="mailto:support@franz.com">support@franz.com</a>. Our mailing
address is Franz Inc., Suite 1450, 555 12th St., Oakland CA 94607 USA;
and our telephone number (in the USA) is +510-452-2000 and our FAX
number is +510-452-0182.  (Note: our address and phone numbers are new
as of August 1, 2002.)
</p>



<hr><h2 id="133"><a name="core-dumps-2">5.2 Core files: when they are useful and what to do with them</a></h2>

<p id="134">
Certain kinds of Allegro CL errors/problems cause failure of the Lisp
and can result in the dumping of a core file. Sometimes this occurs
when unexpected exceptions from the operating system make continued
operation impossible. Sometimes it is due to a GC orm stack error. (GC
errors are discussed in <a href="gc.htm#gc-errors-1">gc
errors</a> in <a href="gc.htm">gc.htm</a>.) Often you are asked
whether you want a core file with a question like:
</p>
<pre id="135">
  Would you like to dump core for debugging before exiting(y or n)?
</pre>
<p id="136">
If you answer <b>y</b>, then an attempt will be made to produce what
is known as a "core file".  Core files are usually produced on Unix
and Unix-like systems, they have many different shapes and levels of
usefulness. In order to make the best use of time spent and space
used in preserving and communicating core dumps to Franz, here are
some guidelines to follow when a core is produced:
</p>
<ol>
<li id="137">
<b>If possible, find another way</b>: core files are sometimes large,
sometimes incomplete, and often it is hard to glean enough information
from a core to figure out what went wrong.  A better strategy is to
either find a reproducible test case which we can replicate in our
offices, or else allow us ftp/vpn access to your machine to reproduce
the failure.
</li>
<li id="138">
<b>Send it all</b>: the core file is never complete; it always relies
on the original lisp executable (usually called <b>mlisp</b>,
<b>mlisp8</b>, <b>alisp</b>, or <b>alisp8</b>, or renamed as your
application) and on the <b>"acldll"</b> (which is the Allegro CL
shared-library, having either .dll, .so, .sl, or .dylib extensions).
It may also rely on a .pll file, which can be found out in a running
image by noting the value returned by
<code>(excl:pll-file)</code> - a null return means that there is
no pll file, and a pathname is the location and name of the .pll file
- that should also be sent.  Note: Even if you believe that we already
have the executable file or the shared-library, or even the .pll,
include all of it into the directory that you will send us.
</li>
<li id="139">
<b>Don't use email</b>: a usable core and its entourage are much too
large to send through email; instead, package it up into an ftp file
and upload it to <b>ftp://ftp.franz.com/incoming/</b> (Those files are
not readable by those outside of Franz, so there is no need to worry
about privacy issues.)  Then, send email to us telling us that the
files have been uploaded to <b>incoming</b>, and we can then grab it
and try it out.
</li>
</ol>



<hr><hr><h2 id="140"><a name="contacting-fi-1">6.0 Contacting Franz Inc. for sales, licensing assistance, and information</a></h2>

<p id="141">
Sales and licensing questions should be directed to your account
manager. If you are not already a customer (and thus do not yet have
an account manager), send email to <a href="mailto:info@franz.com">info@franz.com</a>, or call Franz
Inc. (in Oakland, California, USA) at +1 510-452-2000, or send regular
mail to Franz Inc., Suite 1450, 555 12th St., Oakland, CA 94607
USA. Please give your email address, phone number, and mailing
address. The appropriate Account Manager will contact you.
</p>
<p id="142">
If you are already a customer, you should have the name and email address
of your account manager, but if they are not to hand, use the general ones
given just above.
</p>
<p id="143">
General product information is available on the Franz Inc. web site,
<a href="http://www.franz.com/">http://www.franz.com/</a>. You can
get additional information by contacting us. Again, send email to <a href="mailto:info@franz.com">info@franz.com</a> or call +1
510-452-2000 or write to Franz Inc., Suite 1450, 555 12th St.,
Oakland, CA  94607 USA.
</p>

</body><hr><p id="2"><small>Copyright (c) 1998-2010, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br><small>This page has had moderate revisions compared to the 8.1 page.</small><br>
<small>Created 2010.1.21.</small>
<br></p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><a href="contents.htm"><b>ToC</b></a></td><td align="left" bgcolor="#FFFF00"><b>DocOverview</b></td><td align="left" bgcolor="#00FFFF"><a href="cgide.htm"><b>CGDoc</b></a></td><td align="left" bgcolor="#00FFFF"><a href="release-notes.htm"><b>RelNotes</b></a></td><td align="left" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="left" bgcolor="#00FFFF"><a href="index.htm"><b>Index</b></a></td><td align="left" bgcolor="#00FFFF"><a href="permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="introduction.htm#updates-s">Moderately revised from 8.1.</a></small><br><a href="http://www.franz.com/support/documentation/8.1/doc/introduction.htm">8.1 version</a></td></tr></table></html>