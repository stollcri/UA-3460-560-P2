<!doctype HTML public "-//W3O//DTD W3 HTML 3.2//EN">
<HTML>
<HEAD>

<!-- 
  Document                : readeral.htm
  representing node       : Reader Algorithm  [ID:NO-126]
                 of class : Section  [ID:SC-3]
  Generated by SchemaText : 1.52
  From HSDL source        : ansi cl
  At                      : 09:55:45 23.07.98

  About SchemaText        : http://www.schema.de
-->

<META NAME="GENERATOR" CONTENT="SchemaText 1.40f">
<META NAME="AUTHOR" CONTENT="Franz Inc.">
<META NAME="DATE" CONTENT="23.07.98">
<META NAME="TIME" CONTENT="09:51:09">
<META NAME="VERSION" CONTENT="520">

<TITLE>Reader Algorithm</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFFF">

<table border="0" width="100%" cellpadding="1" cellspacing="0">
  <tr>
    <td bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3">
      <tr>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/contents.htm"><b>ToC</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/introduction.htm"><b>DocOverview</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/cgide.htm"><b>CGDoc</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/release-notes.htm"><b>RelNotes</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/index.htm"><b>Index</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/permuted-index.htm"><b>PermutedIndex</b></a></td>
      </tr>
    </table>
    </td>
    <td align="right"><b>Allegro CL</b>
    </td>
  </tr>
</table>

<A NAME="Section_Reader_Algor_126"></A>
<FONT FACE="ARIAL,GENEVA,HELVETICA">
<A HREF="../ansicl.htm" TARGET="_self"><IMG SRC="../images/a-top12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Home"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>

<A HREF="../subsubsu/exampl21.htm"><IMG SRC="../images/a-lft12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Previous"></A> 
<A HREF="../chapter/syntax.htm" TARGET="_self"><IMG SRC="../images/a-up12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Up"></A> 
<A HREF="interpre.htm"><IMG SRC="../images/a-rgh12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Next"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/tableofc.htm" TARGET="_self"><IMG SRC="../images/toc.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Table of Contents"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/index.htm" TARGET="_self"><IMG SRC="../images/i16.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Index"></A>
<HR NOSHADE>
<TABLE WIDTH="90%"><TR>
<TD WIDTH=5%>&nbsp;</TD>
<TD WIDTH=95%>
<FONT SIZE=-2>
<A HREF="../ansicl.htm"> ANSI Common Lisp</A>&nbsp;&nbsp;<IMG SRC="../images/a-rgh6b.gif" BORDER=0 WIDTH=6 HEIGHT=6>&nbsp;<A HREF="../chapter/syntax.htm">2 Syntax</A>

</FONT>
<H3 ID="2">2.2   Reader Algorithm</H3>

<!-- file: concept-reader-algorithm.tex -->


<P ID="3">

This section describes the algorithm used by the <I>Lisp reader</I>
to parse <I><A HREF="../glossary/o.htm#object">objects</A></I> from an <I><A HREF="../glossary/i.htm#input">input</A></I> <I><A HREF="../glossary/c.htm#character">character</A></I> <I><A HREF="../glossary/s.htm#stream">stream</A></I>,
including how the <I>Lisp reader</I> processes <I><A HREF="../glossary/m.htm#macrocharacter">macro characters</A></I>.

<P ID="4">
When dealing with <I><A HREF="../glossary/t.htm#token">tokens</A></I>, the reader's basic function is to distinguish
representations of <I><A HREF="../glossary/s.htm#symbol">symbols</A></I> from those of <I><A HREF="../glossary/n.htm#number">numbers</A></I>.
When a <I><A HREF="../glossary/t.htm#token">token</A></I> is accumulated, it is assumed to represent a <I><A HREF="../glossary/n.htm#number">number</A></I> if it
satisfies the syntax for numbers listed in Figure <A HREF="../subsecti/numbersa.htm">2.3.1 Numbers as Tokens</A>.
If it does not represent a <I><A HREF="../glossary/n.htm#number">number</A></I>,
it is then assumed to be a <I><A HREF="../glossary/p.htm#potentialnumber">potential number</A></I> 
if it satisfies the rules governing the syntax for a <I><A HREF="../glossary/p.htm#potentialnumber">potential number</A></I>.
If a valid <I><A HREF="../glossary/t.htm#token">token</A></I> is neither a representation of a <I><A HREF="../glossary/n.htm#number">number</A></I> 
			       nor a <I><A HREF="../glossary/p.htm#potentialnumber">potential number</A></I>,
it represents a <I><A HREF="../glossary/s.htm#symbol">symbol</A></I>.

<P ID="5">
The algorithm performed by the <I>Lisp reader</I> is as follows:

<P ID="6">

<UL>
<LI ID="7">1.            
If at end of file, end-of-file processing is performed as specified
in <A HREF="../dictentr/readread.htm"><B>read</B></A>.
Otherwise,
one <I><A HREF="../glossary/c.htm#character">character</A></I>, <I>x</I>,  is read from the <I><A HREF="../glossary/i.htm#input">input</A></I> <I><A HREF="../glossary/s.htm#stream">stream</A></I>, and
dispatched according to the <I><A HREF="../glossary/s.htm#syntaxtype">syntax type</A></I> of <I>x</I> to one
of steps 2 to 7.

<P ID="8">

<LI ID="9">2.                                          
If <I>x</I> is an <I><A HREF="../glossary/i.htm#invalid">invalid</A></I> <I><A HREF="../glossary/c.htm#character">character</A></I>,
an error of <I><A HREF="../glossary/t.htm#type">type</A></I> <A HREF="../dictentr/reader-e.htm"><B>reader-error</B></A> is signaled.

<P ID="10">

<LI ID="11">3.
If <I>x</I> is a <I><A HREF="../glossary/w.htm#whitespace">whitespace</A></I><SUB>2</SUB> <I><A HREF="../glossary/c.htm#character">character</A></I>,
then it is discarded and step 1 is re-entered.

<P ID="12">

<LI ID="13">4.
If <I>x</I> is a <I><A HREF="../glossary/t.htm#terminating">terminating</A></I> or <I><A HREF="../glossary/n.htm#nonterminating">non-terminating</A></I> <I><A HREF="../glossary/m.htm#macrocharacter">macro character</A></I>
then its associated <I><A HREF="../glossary/r.htm#readermacrofunction">reader macro function</A></I> is called with two <I><A HREF="../glossary/a.htm#argument">arguments</A></I>,
the <I><A HREF="../glossary/i.htm#input">input</A></I> <I><A HREF="../glossary/s.htm#stream">stream</A></I> and <I>x</I>.

<P ID="14">

The <I><A HREF="../glossary/r.htm#readermacrofunction">reader macro function</A></I> may read <I><A HREF="../glossary/c.htm#character">characters</A></I> 
from the <I><A HREF="../glossary/i.htm#input">input</A></I> <I><A HREF="../glossary/s.htm#stream">stream</A></I>; 
if it does, it will see those <I><A HREF="../glossary/c.htm#character">characters</A></I> following the <I><A HREF="../glossary/m.htm#macrocharacter">macro character</A></I>.
The <I>Lisp reader</I> may be invoked recursively from the <I><A HREF="../glossary/r.htm#readermacrofunction">reader macro function</A></I>.

<P ID="15">

The <I><A HREF="../glossary/r.htm#readermacrofunction">reader macro function</A></I> must not have any side effects other than on the
<I><A HREF="../glossary/i.htm#input">input</A></I> <I><A HREF="../glossary/s.htm#stream">stream</A></I>;
because of backtracking and restarting of the <A HREF="../dictentr/readread.htm"><B>read</B></A> operation,
front ends to the <I>Lisp reader</I> (<I>e.g.</I>,  "editors" and "rubout handlers") 
may cause the <I><A HREF="../glossary/r.htm#readermacrofunction">reader macro function</A></I> to be called repeatedly during the
reading of a single <I><A HREF="../glossary/e.htm#expression">expression</A></I> in which <I>x</I> only appears once.

<P ID="16">

The <I><A HREF="../glossary/r.htm#readermacrofunction">reader macro function</A></I> may return zero values or one value.
If one value is returned,
then that value is returned as the result of the read operation;
the algorithm is done.
If zero values are returned, then step 1 is re-entered.

<P ID="17">

<LI ID="18">5.
If <I>x</I> is a <I><A HREF="../glossary/s.htm#singleescape">single escape</A></I> <I><A HREF="../glossary/c.htm#character">character</A></I>
then the next <I><A HREF="../glossary/c.htm#character">character</A></I>, <I>y</I>, is read, or an error of <I><A HREF="../glossary/t.htm#type">type</A></I> <A HREF="../dictentr/end-of-f.htm"><B>end-of-file</B></A> 
is signaled if at the end of file.
<I>y</I> is treated as if it is a <I><A HREF="../glossary/c.htm#constituent">constituent</A></I> 
whose only <I><A HREF="../glossary/c.htm#constituenttrait">constituent trait</A></I> is <I><A HREF="../glossary/a.htm#alphabetic">alphabetic</A></I><SUB>2</SUB>.
<I>y</I> is used to begin a <I><A HREF="../glossary/t.htm#token">token</A></I>, and step 8 is entered.

<P ID="19">

<LI ID="20">6.
If <I>x</I> is a <I><A HREF="../glossary/m.htm#multipleescape">multiple escape</A></I> <I><A HREF="../glossary/c.htm#character">character</A></I>
then a <I><A HREF="../glossary/t.htm#token">token</A></I> (initially
containing no <I><A HREF="../glossary/c.htm#character">characters</A></I>) is  begun and step 9 is entered.

<P ID="21">

<LI ID="22">7.
If <I>x</I> is a <I><A HREF="../glossary/c.htm#constituent">constituent</A></I> <I><A HREF="../glossary/c.htm#character">character</A></I>, then it begins a <I><A HREF="../glossary/t.htm#token">token</A></I>.
After the <I><A HREF="../glossary/t.htm#token">token</A></I> is read in, it will be interpreted
either as a <I>Lisp</I>&nbsp;<I><A HREF="../glossary/o.htm#object">object</A></I> or as being of invalid syntax.
If the <I><A HREF="../glossary/t.htm#token">token</A></I> represents an <I><A HREF="../glossary/o.htm#object">object</A></I>,
that <I><A HREF="../glossary/o.htm#object">object</A></I> is returned as the result of the read operation.
If the <I><A HREF="../glossary/t.htm#token">token</A></I> is of invalid syntax, an error is signaled.



If <I>x</I> is a <I><A HREF="../glossary/c.htm#character">character</A></I> with <I><A HREF="../glossary/c.htm#case">case</A></I>,
it might be replaced with the corresponding <I><A HREF="../glossary/c.htm#character">character</A></I> of the opposite <I><A HREF="../glossary/c.htm#case">case</A></I>, 
depending on the <I><A HREF="../glossary/r.htm#readtablecase">readtable case</A></I> of the <I><A HREF="../glossary/c.htm#currentreadtable">current readtable</A></I>,
as outlined in Section <A HREF="../subsecti/effectof.htm">23.1.2 Effect of Readtable Case on the Lisp Reader</A>.
<I>X</I> is used to begin a <I><A HREF="../glossary/t.htm#token">token</A></I>, and step 8 is entered.

<P ID="23">



<LI ID="24">8.
At this point a <I><A HREF="../glossary/t.htm#token">token</A></I> is being accumulated, and an even number
of <I><A HREF="../glossary/m.htm#multipleescape">multiple escape</A></I> <I><A HREF="../glossary/c.htm#character">characters</A></I> have been encountered.
If at end of file, step 10 is entered.
Otherwise, a <I><A HREF="../glossary/c.htm#character">character</A></I>, <I>y</I>, is read, and
one of the following actions is performed according to its <I><A HREF="../glossary/s.htm#syntaxtype">syntax type</A></I>:

<P ID="25">
<UL>
<LI ID="26">
If <I>y</I> is a <I><A HREF="../glossary/c.htm#constituent">constituent</A></I> or <I><A HREF="../glossary/n.htm#nonterminating">non-terminating</A></I> <I><A HREF="../glossary/m.htm#macrocharacter">macro character</A></I>:
<UL>
<LI ID="27">--



If <I>y</I> is a <I><A HREF="../glossary/c.htm#character">character</A></I> with <I><A HREF="../glossary/c.htm#case">case</A></I>,
it might be replaced with the corresponding <I><A HREF="../glossary/c.htm#character">character</A></I> of the opposite <I><A HREF="../glossary/c.htm#case">case</A></I>, 
depending on the <I><A HREF="../glossary/r.htm#readtablecase">readtable case</A></I> of the <I><A HREF="../glossary/c.htm#currentreadtable">current readtable</A></I>,
as outlined in Section <A HREF="../subsecti/effectof.htm">23.1.2 Effect of Readtable Case on the Lisp Reader</A>.
<LI ID="28">--
<I>Y</I> is appended to the <I><A HREF="../glossary/t.htm#token">token</A></I> being built.
<LI ID="29">--
Step 8 is repeated.
</UL>

<P ID="30">

<LI ID="31">
If <I>y</I> is a <I><A HREF="../glossary/s.htm#singleescape">single escape</A></I> <I><A HREF="../glossary/c.htm#character">character</A></I>, then the next <I><A HREF="../glossary/c.htm#character">character</A></I>,
<I>z</I>, is read, or an error of <I><A HREF="../glossary/t.htm#type">type</A></I> <A HREF="../dictentr/end-of-f.htm"><B>end-of-file</B></A> is signaled if at end of file.
<I>Z</I> is treated as if it is a <I><A HREF="../glossary/c.htm#constituent">constituent</A></I> 
whose only <I><A HREF="../glossary/c.htm#constituenttrait">constituent trait</A></I> is <I><A HREF="../glossary/a.htm#alphabetic">alphabetic</A></I><SUB>2</SUB>.
<I>Z</I> is appended to the <I><A HREF="../glossary/t.htm#token">token</A></I> being built,
and step 8 is repeated.

<P ID="32">

<LI ID="33">
If <I>y</I> is a <I><A HREF="../glossary/m.htm#multipleescape">multiple escape</A></I> <I><A HREF="../glossary/c.htm#character">character</A></I>,
then step 9 is entered.

<P ID="34">

<LI ID="35">
If <I>y</I> is an <I><A HREF="../glossary/i.htm#invalid">invalid</A></I> <I><A HREF="../glossary/c.htm#character">character</A></I>,
an error of <I><A HREF="../glossary/t.htm#type">type</A></I> <A HREF="../dictentr/reader-e.htm"><B>reader-error</B></A> is signaled.

<P ID="36">

<LI ID="37">
If <I>y</I> is a <I><A HREF="../glossary/t.htm#terminating">terminating</A></I> <I><A HREF="../glossary/m.htm#macrocharacter">macro character</A></I>,
then it terminates the <I><A HREF="../glossary/t.htm#token">token</A></I>.
First the <I><A HREF="../glossary/c.htm#character">character</A></I> <I>y</I> is unread (see <A HREF="../dictentr/unread-c.htm"><B>unread-char</B></A>),
and then step 10 is entered.

<P ID="38">

<LI ID="39">
If <I>y</I> is a <I><A HREF="../glossary/w.htm#whitespace">whitespace</A></I><SUB>2</SUB> <I><A HREF="../glossary/c.htm#character">character</A></I>, then it terminates
the <I><A HREF="../glossary/t.htm#token">token</A></I>.  First the <I><A HREF="../glossary/c.htm#character">character</A></I> <I>y</I> is unread
if appropriate (see <A HREF="../dictentr/readread.htm"><B>read-preserving-whitespace</B></A>),
and then step 10 is entered.
</UL>

<P ID="40">


<LI ID="41">9.
At this point a <I><A HREF="../glossary/t.htm#token">token</A></I> is being accumulated, and an odd number
of <I><A HREF="../glossary/m.htm#multipleescape">multiple escape</A></I> <I><A HREF="../glossary/c.htm#character">characters</A></I> have been encountered.
If at end of file, an error of <I><A HREF="../glossary/t.htm#type">type</A></I> <A HREF="../dictentr/end-of-f.htm"><B>end-of-file</B></A> is signaled.
Otherwise, a <I><A HREF="../glossary/c.htm#character">character</A></I>, <I>y</I>, is read, and
one of the following actions is performed according to its <I><A HREF="../glossary/s.htm#syntaxtype">syntax type</A></I>:

<P ID="42">

<UL>
<LI ID="43">
If <I>y</I> is a <I><A HREF="../glossary/c.htm#constituent">constituent</A></I>, macro, or <I><A HREF="../glossary/w.htm#whitespace">whitespace</A></I><SUB>2</SUB> <I><A HREF="../glossary/c.htm#character">character</A></I>,
<I>y</I> is treated as a <I><A HREF="../glossary/c.htm#constituent">constituent</A></I> 
whose only <I><A HREF="../glossary/c.htm#constituenttrait">constituent trait</A></I> is <I><A HREF="../glossary/a.htm#alphabetic">alphabetic</A></I><SUB>2</SUB>.             
<I>Y</I> is appended to the <I><A HREF="../glossary/t.htm#token">token</A></I> being built, and step 9 is repeated.

<P ID="44">

<LI ID="45">
If <I>y</I> is a <I><A HREF="../glossary/s.htm#singleescape">single escape</A></I> <I><A HREF="../glossary/c.htm#character">character</A></I>, then the next <I><A HREF="../glossary/c.htm#character">character</A></I>,
<I>z</I>, is read, or an error of <I><A HREF="../glossary/t.htm#type">type</A></I> <A HREF="../dictentr/end-of-f.htm"><B>end-of-file</B></A> is signaled if at end of file.
<I>Z</I> is treated as a <I><A HREF="../glossary/c.htm#constituent">constituent</A></I>
whose only <I><A HREF="../glossary/c.htm#constituenttrait">constituent trait</A></I> is <I><A HREF="../glossary/a.htm#alphabetic">alphabetic</A></I><SUB>2</SUB>.
<I>Z</I> is appended to the <I><A HREF="../glossary/t.htm#token">token</A></I> being built,
and step 9 is repeated.

<P ID="46">

<LI ID="47">
If <I>y</I> is a <I><A HREF="../glossary/m.htm#multipleescape">multiple escape</A></I> <I><A HREF="../glossary/c.htm#character">character</A></I>,
then step 8 is entered.

<P ID="48">

<LI ID="49">
If <I>y</I> is an <I><A HREF="../glossary/i.htm#invalid">invalid</A></I> <I><A HREF="../glossary/c.htm#character">character</A></I>,
an error of <I><A HREF="../glossary/t.htm#type">type</A></I> <A HREF="../dictentr/reader-e.htm"><B>reader-error</B></A> is signaled.
</UL>

<P ID="50">

<LI ID="51">10.
An entire <I><A HREF="../glossary/t.htm#token">token</A></I> has been accumulated.
The <I><A HREF="../glossary/o.htm#object">object</A></I> represented by the <I><A HREF="../glossary/t.htm#token">token</A></I> is returned 
as the result of the read operation,
or an error of <I><A HREF="../glossary/t.htm#type">type</A></I> <A HREF="../dictentr/reader-e.htm"><B>reader-error</B></A> is signaled if the <I><A HREF="../glossary/t.htm#token">token</A></I> is not of valid syntax.
</UL>

<P ID="52">
<!-- eof: concept-reader-algorithm.tex -->

</TD></TR></TABLE>
<HR NOSHADE>
<A HREF="../ansicl.htm" TARGET="_self"><IMG SRC="../images/a-top12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Home"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>

<A HREF="../subsubsu/exampl21.htm"><IMG SRC="../images/a-lft12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Previous"></A> 
<A HREF="../chapter/syntax.htm" TARGET="_self"><IMG SRC="../images/a-up12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Up"></A> 
<A HREF="interpre.htm"><IMG SRC="../images/a-rgh12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Next"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/tableofc.htm" TARGET="_self"><IMG SRC="../images/toc.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Table of Contents"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/index.htm" TARGET="_self"><IMG SRC="../images/i16.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Index"></A>
<HR NOSHADE>

<SMALL><I><B>&#169; Franz Inc. 1998-2009</b> - File last updated 7-21-2009</I></SMALL>
</FONT>

</BODY>
</HTML>
