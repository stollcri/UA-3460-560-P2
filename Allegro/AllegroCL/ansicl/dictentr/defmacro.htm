<!doctype HTML public "-//W3O//DTD W3 HTML 3.2//EN">
<HTML>
<HEAD>

<!-- 
  Document                : defmacro.htm
  representing node       : defmacro  [ID:NO-292]
                 of class : DictEntry  [ID:SC-9]
  Generated by SchemaText : 1.52
  From HSDL source        : ansi cl
  At                      : 09:55:16 23.07.98

  About SchemaText        : http://www.schema.de
-->

<META NAME="GENERATOR" CONTENT="SchemaText 1.40f">
<META NAME="AUTHOR" CONTENT="Franz Inc.">
<META NAME="DATE" CONTENT="23.07.98">
<META NAME="TIME" CONTENT="09:51:09">
<META NAME="VERSION" CONTENT="520">

<TITLE>defmacro</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFFF">

<table border="0" width="100%" cellpadding="1" cellspacing="0">
  <tr>
    <td bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3">
      <tr>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/contents.htm"><b>ToC</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/introduction.htm"><b>DocOverview</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/cgide.htm"><b>CGDoc</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/release-notes.htm"><b>RelNotes</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/index.htm"><b>Index</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/permuted-index.htm"><b>PermutedIndex</b></a></td>
      </tr>
    </table>
    </td>
    <td align="right"><b>Allegro CL</b>
    </td>
  </tr>
</table>

<A NAME="DictEntry_defmacro_292"></A>
<FONT FACE="ARIAL,GENEVA,HELVETICA">
<A HREF="../ansicl.htm" TARGET="_self"><IMG SRC="../images/a-top12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Home"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>

<A HREF="define-2.htm"><IMG SRC="../images/a-lft12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Previous"></A> 
<A HREF="../section/dictio21.htm" TARGET="_self"><IMG SRC="../images/a-up12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Up"></A> 
<A HREF="macro-fu.htm"><IMG SRC="../images/a-rgh12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Next"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/tableofc.htm" TARGET="_self"><IMG SRC="../images/toc.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Table of Contents"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/index.htm" TARGET="_self"><IMG SRC="../images/i16.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Index"></A>
<HR NOSHADE>
<TABLE WIDTH="90%"><TR>
<TD WIDTH=5%>&nbsp;</TD>
<TD WIDTH=95%>
<FONT SIZE=-2>
<A HREF="../ansicl.htm"> ANSI Common Lisp</A>&nbsp;&nbsp;<IMG SRC="../images/a-rgh6b.gif" BORDER=0 WIDTH=6 HEIGHT=6>&nbsp;<A HREF="../chapter/evaluati.htm">3 Evaluation and Compilation</A>&nbsp;&nbsp;<IMG SRC="../images/a-rgh6b.gif" BORDER=0 WIDTH=6 HEIGHT=6>&nbsp;<A HREF="../section/dictio21.htm">3.8 Dictionary Evaluation and Compilation</A>

</FONT>
<P ID="2">
<TABLE BORDER=0 WIDTH="100%">
<TR>
<TD><FONT SIZE="+2">3.8.10  defmacro</FONT></TD>
<TD ALIGN=RIGHT><FONT SIZE="+1"><I>Macro</I></FONT></TD>
</TR></TABLE>
<DL>


<P ID="3">


<P ID="4">
<DT><B>Syntax:</B><DD>

<B>defmacro</B>
<I>name lambda-list [[{<I>declaration</I>}* $|$ <I>documentation</I>]] {<I>form</I>}*</I><BR>&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;<IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> <I>name</I>
<P ID="5">
<DT><B>Arguments and Values:</B><DD>

<I>name</I> - a <I><A HREF="../glossary/s.htm#symbol">symbol</A></I>. 

<P ID="6">
<I>lambda-list</I> - a <I><A HREF="../glossary/m.htm#macrolambdalist">macro lambda list</A></I>.

<P ID="7">
<I>declaration</I> - a <A HREF="declare.htm"><B>declare</B></A> <I><A HREF="../glossary/e.htm#expression">expression</A></I>; not evaluated.

<P ID="8">
<I>documentation</I> - a <I><A HREF="../glossary/s.htm#string">string</A></I>; not evaluated.

<P ID="9">
<I>form</I> - a <I><A HREF="../glossary/f.htm#form">form</A></I>.

<P ID="10">
<DT><B>Description:</B><DD>


Defines <I>name</I> as a <I><A HREF="../glossary/m.htm#macro">macro</A></I> 
by associating a <I><A HREF="../glossary/m.htm#macrofunction">macro function</A></I> with that <I>name</I>
in the global environment.

The <I><A HREF="../glossary/m.htm#macrofunction">macro function</A></I> is defined in the same <I><A HREF="../glossary/l.htm#lexicalenvironment">lexical environment</A></I>
in which the <A HREF="#DictEntry_defmacro_292"><B>defmacro</B></A> <I><A HREF="../glossary/f.htm#form">form</A></I> appears.


<P ID="11">
 

The parameter variables in <I>lambda-list</I> are bound to
destructured portions of the macro call.

<P ID="12">
The expansion function
accepts two arguments, a <I><A HREF="../glossary/f.htm#form">form</A></I> and an 
<I><A HREF="../glossary/e.htm#environment">environment</A></I>.  The expansion function returns a <I><A HREF="../glossary/f.htm#form">form</A></I>.  
The body of the expansion function is specified by <I>forms</I>.
<I>Forms</I> are executed in order.  The value of the
last <I>form</I> executed is returned as the expansion of the
<I><A HREF="../glossary/m.htm#macro">macro</A></I>.


The body <I>forms</I> of the expansion function (but not the <I>lambda-list</I>)

are implicitly enclosed in a <I><A HREF="../glossary/b.htm#block">block</A></I> whose name is <I>name</I>.


<P ID="13">
The <I>lambda-list</I> conforms to the requirements described in Section <A HREF="../subsecti/macrolam.htm">3.4.4 Macro Lambda Lists</A>.

<P ID="14">

<I>Documentation</I> is attached as a <I><A HREF="../glossary/d.htm#documentationstring">documentation string</A></I> 
    to <I>name</I> (as kind <A HREF="function.htm"><B>function</B></A>)
and to the <I><A HREF="../glossary/m.htm#macrofunction">macro function</A></I>.


<P ID="15">

<A HREF="#DictEntry_defmacro_292"><B>defmacro</B></A> can be used to redefine a <I><A HREF="../glossary/m.htm#macro">macro</A></I> or to replace
a <I><A HREF="../glossary/f.htm#function">function</A></I> definition with a <I><A HREF="../glossary/m.htm#macro">macro</A></I> definition.

<P ID="16">

Recursive expansion of the <I><A HREF="../glossary/f.htm#form">form</A></I> returned must terminate,
including the expansion of other <I><A HREF="../glossary/m.htm#macro">macros</A></I> which are <I><A HREF="../glossary/s.htm#subform">subforms</A></I>
of other <I><A HREF="../glossary/f.htm#form">forms</A></I> returned.

<P ID="17">

The consequences are undefined if the result of fully macroexpanding
a <I><A HREF="../glossary/f.htm#form">form</A></I>
contains any <I><A HREF="../glossary/c.htm#circular">circular</A></I> <I><A HREF="../glossary/l.htm#liststructure">list structure</A></I> except in <I>literal objects</I>.


<P ID="18">


If a <A HREF="#DictEntry_defmacro_292"><B>defmacro</B></A> <I><A HREF="../glossary/f.htm#form">form</A></I> appears as a <I><A HREF="../glossary/t.htm#toplevelform">top level form</A></I>,
the <I><A HREF="../glossary/c.htm#compiler">compiler</A></I> must store the <I><A HREF="../glossary/m.htm#macro">macro</A></I> definition at compile time,
so that occurrences of the macro later on in the file can be expanded correctly.
Users must ensure that the body of the <I><A HREF="../glossary/m.htm#macro">macro</A></I> can be evaluated at 
compile time if it is referenced within the <I><A HREF="../glossary/f.htm#file">file</A></I> being <I>compiled</I>.


<P ID="19">
<DT><B>Examples:</B><DD>

<PRE ID="20">
 (defmacro mac1 (a b) "Mac1 multiplies and adds" 
            `(+ ,a (* ,b 3))) <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9>  MAC1 
 (mac1 4 5) <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> 19 
 (documentation 'mac1 'function) <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> "Mac1 multiplies and adds" 
 (defmacro mac2 (&optional (a 2 b) (c 3 d) &rest x) `'(,a ,b ,c ,d ,x)) <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9>  MAC2 
 (mac2 6) <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> (6 T 3 NIL NIL) 
 (mac2 6 3 8) <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> (6 T 3 T (8)) 
 (defmacro mac3 (&whole r a &optional (b 3) &rest x &key c (d a))
    `'(,r ,a ,b ,c ,d ,x)) <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9>  MAC3 
 (mac3 1 6 :d 8 :c 9 :d 10) <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> ((MAC3 1 6 :D 8 :C 9 :D 10) 1 6 9 8 (:D 8 :C 9 :D 10)) 
</PRE>


<P ID="21">

The stipulation that
an embedded <I><A HREF="../glossary/d.htm#destructuringlambdalist">destructuring lambda list</A></I> is permitted only
where <I><A HREF="../glossary/o.htm#ordinarylambdalist">ordinary lambda list</A></I> syntax would permit a parameter name
but not a <I><A HREF="../glossary/l.htm#list">list</A></I> is made to prevent ambiguity.  For example,
the following is not valid:

<P ID="22">
<PRE ID="23">
 (defmacro loser (x &optional (a b &rest c) &rest z)
   ...)
</PRE>
because <I><A HREF="../glossary/o.htm#ordinarylambdalist">ordinary lambda list</A></I> syntax does permit a 
<I><A HREF="../glossary/l.htm#list">list</A></I> following <TT>&amp;optional</TT>;
the list <TT>(a b &amp;rest c)</TT> would be interpreted as describing an
optional parameter named <TT>a</TT> whose default value is that of the
form <TT>b</TT>, with a supplied-p parameter named <A HREF="../subsubse/aspecifi.htm"><B>&amp;rest</B></A> (not valid),
and an extraneous symbol <TT>c</TT> in the list (also not valid).  An almost
correct way to express this is

<P ID="24">
<PRE ID="25">
 (defmacro loser (x &optional ((a b &rest c)) &rest z)
   ...)
</PRE>
The extra set of parentheses removes the ambiguity.  However, the
definition is now incorrect because a macro call such as <TT>(loser (car pool))</TT>
would not provide any argument form for the lambda list <TT>(a b &amp;rest c)</TT>,
and so the default value against which to match the <I><A HREF="../glossary/l.htm#lambdalist">lambda list</A></I> would be
<A HREF="nil.htm"><B>nil</B></A>&nbsp;because no explicit default value was specified.  
The consequences of this are  unspecified
since the empty list, <A HREF="nil.htm"><B>nil</B></A>, does not have <I><A HREF="../glossary/f.htm#form">forms</A></I> to satisfy the
parameters <TT>a</TT> and <TT>b</TT>.  The fully correct definition would be either

<P ID="26">
<PRE ID="27">
 (defmacro loser (x &optional ((a b &rest c) '(nil nil)) &rest z)
   ...)
</PRE>
or

<P ID="28">
<PRE ID="29">
 (defmacro loser (x &optional ((&optional a b &rest c)) &rest z)
   ...)
</PRE>
These differ slightly: the first requires that if the macro call
specifies <TT>a</TT> explicitly then it must also specify <TT>b</TT> explicitly,
whereas the second does not have this requirement.  For example,

<P ID="30">
<PRE ID="31">
 (loser (car pool) ((+ x 1)))
</PRE>
would be a valid call for the second definition but not for the first.

<P ID="32">


<P ID="33">
<PRE ID="34">
 (defmacro dm1a (&whole x) `',x)
 (macroexpand '(dm1a))  <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> (QUOTE (DM1A))
 (macroexpand '(dm1a a)) is an error.
 
 (defmacro dm1b (&whole x a &optional b) `'(,x ,a ,b))
 (macroexpand '(dm1b))  is an error.
 (macroexpand '(dm1b q))  <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> (QUOTE ((DM1B Q) Q NIL))
 (macroexpand '(dm1b q r)) <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> (QUOTE ((DM1B Q R) Q R))
 (macroexpand '(dm1b q r s)) is an error.
</PRE>

<P ID="35">
<PRE ID="36">
 (defmacro dm2a (&whole form a b) `'(form ,form a ,a b ,b))
 (macroexpand '(dm2a x y)) <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> (QUOTE (FORM (DM2A X Y) A X B Y))
 (dm2a x y) <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> (FORM (DM2A X Y) A X B Y)

 (defmacro dm2b (&whole form a (&whole b (c . d) &optional (e 5)) 
                 &body f &environment env)
   "(,',form ,,a ,',b ,',(macroexpand c env) ,',d ,',e ,',f))
 ;Note that because backquote is involved, implementations may differ
 ;slightly in the nature (though not the functionality) of the expansion.
 (macroexpand '(dm2b x1 (((incf x2) x3 x4)) x5 x6))
 <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> (LIST* '(DM2B X1 (((INCF X2) X3 X4))
                   X5 X6)
            X1
            '((((INCF X2) X3 X4)) (SETQ X2 (+ X2 1)) (X3 X4) 5 (X5 X6))),
     T
 (let ((x1 5))
   (macrolet ((segundo (x) `(cadr ,x)))
     (dm2b x1 (((segundo x2) x3 x4)) x5 x6)))
 <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> ((DM2B X1 (((SEGUNDO X2) X3 X4)) X5 X6)
      5 (((SEGUNDO X2) X3 X4)) (CADR X2) (X3 X4) 5 (X5 X6))
</PRE>

<P ID="37">


<P ID="38">
<DT><B>See Also:</B><DD>


<A HREF="define-2.htm"><B>define-compiler-macro</B></A>,

<A HREF="destruct.htm"><B>destructuring-bind</B></A>, 
<A HREF="document.htm"><B>documentation</B></A>,
<A HREF="macroex0.htm"><B>macroexpand</B></A>,
<A HREF="macroexp.htm"><B>*macroexpand-hook*</B></A>,
<A HREF="fletlabe.htm"><B>macrolet</B></A>, 
<A HREF="macro-fu.htm"><B>macro-function</B></A>, 
Section <A HREF="../section/evaluati.htm">3.1 Evaluation</A>,
Section <A HREF="../section/compilat.htm">3.2 Compilation</A>,
Section <A HREF="../subsecti/syntacti.htm">3.4.11 Syntactic Interaction of Documentation Strings and Declarations</A>

<P ID="39">


<P ID="40">
<DT><B>Allegro CL Implementation Details:</B><DD>
 None.</DL>
</TD></TR></TABLE>
<HR NOSHADE>
<A HREF="../ansicl.htm" TARGET="_self"><IMG SRC="../images/a-top12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Home"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>

<A HREF="define-2.htm"><IMG SRC="../images/a-lft12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Previous"></A> 
<A HREF="../section/dictio21.htm" TARGET="_self"><IMG SRC="../images/a-up12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Up"></A> 
<A HREF="macro-fu.htm"><IMG SRC="../images/a-rgh12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Next"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/tableofc.htm" TARGET="_self"><IMG SRC="../images/toc.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Table of Contents"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/index.htm" TARGET="_self"><IMG SRC="../images/i16.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Index"></A>
<HR NOSHADE>

<SMALL><I><B>&#169; Franz Inc. 1998-2009</b> - File last updated 7-21-2009</I></SMALL>
</FONT>

</BODY>
</HTML>
