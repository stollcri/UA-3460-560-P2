<!doctype HTML public "-//W3O//DTD W3 HTML 3.2//EN">
<HTML>
<HEAD>

<!-- 
  Document                : defparam.htm
  representing node       : defparameter, defvar  [ID:NO-402]
                 of class : DictEntry  [ID:SC-9]
  Generated by SchemaText : 1.52
  From HSDL source        : ansi cl
  At                      : 09:54:48 23.07.98

  About SchemaText        : http://www.schema.de
-->

<META NAME="GENERATOR" CONTENT="SchemaText 1.40f">
<META NAME="AUTHOR" CONTENT="Franz Inc.">
<META NAME="DATE" CONTENT="23.07.98">
<META NAME="TIME" CONTENT="09:51:09">
<META NAME="VERSION" CONTENT="520">

<TITLE>defparameter, defvar</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFFF">

<table border="0" width="100%" cellpadding="1" cellspacing="0">
  <tr>
    <td bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3">
      <tr>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/contents.htm"><b>ToC</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/introduction.htm"><b>DocOverview</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/cgide.htm"><b>CGDoc</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/release-notes.htm"><b>RelNotes</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/index.htm"><b>Index</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/permuted-index.htm"><b>PermutedIndex</b></a></td>
      </tr>
    </table>
    </td>
    <td align="right"><b>Allegro CL</b>
    </td>
  </tr>
</table>

<A NAME="DictEntry_defparameter_402"></A>
<FONT FACE="ARIAL,GENEVA,HELVETICA">
<A HREF="../ansicl.htm" TARGET="_self"><IMG SRC="../images/a-top12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Home"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>

<A HREF="defconst.htm"><IMG SRC="../images/a-lft12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Previous"></A> 
<A HREF="../section/dictio19.htm" TARGET="_self"><IMG SRC="../images/a-up12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Up"></A> 
<A HREF="destruct.htm"><IMG SRC="../images/a-rgh12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Next"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/tableofc.htm" TARGET="_self"><IMG SRC="../images/toc.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Table of Contents"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/index.htm" TARGET="_self"><IMG SRC="../images/i16.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Index"></A>
<HR NOSHADE>
<TABLE WIDTH="90%"><TR>
<TD WIDTH=5%>&nbsp;</TD>
<TD WIDTH=95%>
<FONT SIZE=-2>
<A HREF="../ansicl.htm"> ANSI Common Lisp</A>&nbsp;&nbsp;<IMG SRC="../images/a-rgh6b.gif" BORDER=0 WIDTH=6 HEIGHT=6>&nbsp;<A HREF="../chapter/dataandc.htm">5 Data and Control Flow</A>&nbsp;&nbsp;<IMG SRC="../images/a-rgh6b.gif" BORDER=0 WIDTH=6 HEIGHT=6>&nbsp;<A HREF="../section/dictio19.htm">5.3 Dictionary of Data and Control Flow</A>

</FONT>
<P ID="2">
<TABLE BORDER=0 WIDTH="100%">
<TR>
<TD><FONT SIZE="+2">5.3.16  defparameter, defvar</FONT></TD>
<TD ALIGN=RIGHT><FONT SIZE="+1"><I>Macro</I></FONT></TD>
</TR></TABLE>
<DL>


<P ID="3">
<DT><B>Syntax:</B><DD>

<B>defparameter</B>
<I>name         initial-value [documentation] </I>
&nbsp;&nbsp;<IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> <I>name</I>
<P ID="4">
<B>defvar</B>
<I>name <TT>[</TT>initial-value [documentation]<TT>]</TT></I>
&nbsp;&nbsp;<IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> <I>name</I>
<P ID="5">
<DT><B>Arguments and Values:</B><DD>

<I>name</I> - a <I><A HREF="../glossary/s.htm#symbol">symbol</A></I>; not evaluated.

<P ID="6">





<P ID="7">
<I>initial-value</I> - a <I><A HREF="../glossary/f.htm#form">form</A></I>; 
     for <A HREF="#DictEntry_defparameter_402"><B>defparameter</B></A>, it is always <I>evaluated</I>,
 but for <A HREF="#DictEntry_defparameter_402"><B>defvar</B></A> it is <I>evaluated</I> 
     only if <I>name</I> is not already <I><A HREF="../glossary/b.htm#bound">bound</A></I>.

<P ID="8">

<I>documentation</I> - a <I>string</I>; not evaluated.


<P ID="9">
<DT><B>Description:</B><DD>

<A HREF="#DictEntry_defparameter_402"><B>defparameter</B></A> and <A HREF="#DictEntry_defparameter_402"><B>defvar</B></A> <I><A HREF="../glossary/e.htm#establish">establish</A></I> <I>name</I> 
as a <I><A HREF="../glossary/d.htm#dynamicvariable">dynamic variable</A></I>.

<P ID="10">
<A HREF="#DictEntry_defparameter_402"><B>defparameter</B></A> unconditionally
<I><A HREF="../glossary/a.htm#assign">assigns</A></I> the <I>initial-value</I> to the <I><A HREF="../glossary/d.htm#dynamicvariable">dynamic variable</A></I> named <I>name</I>.
<A HREF="#DictEntry_defparameter_402"><B>defvar</B></A>, by contrast, <I><A HREF="../glossary/a.htm#assign">assigns</A></I> <I>initial-value</I> (if supplied) 
to the <I><A HREF="../glossary/d.htm#dynamicvariable">dynamic variable</A></I> named <I>name</I> 
only if <I>name</I> is not already <I><A HREF="../glossary/b.htm#bound">bound</A></I>.

<P ID="11">

If no <I>initial-value</I> is supplied,
<A HREF="#DictEntry_defparameter_402"><B>defvar</B></A> leaves the <I><A HREF="../glossary/v.htm#valuecell">value cell</A></I> of 
the <I><A HREF="../glossary/d.htm#dynamicvariable">dynamic variable</A></I> named <I>name</I> undisturbed;
    if <I>name</I> was previously <I><A HREF="../glossary/b.htm#bound">bound</A></I>, its old <I><A HREF="../glossary/v.htm#value">value</A></I> persists,
and if it was previously <I><A HREF="../glossary/u.htm#unbound">unbound</A></I>, it remains <I><A HREF="../glossary/u.htm#unbound">unbound</A></I>.


<P ID="12">
If <I>documentation</I> is supplied, it is attached to <I>name</I> as a
<I><A HREF="../glossary/d.htm#documentationstring">documentation string</A></I> of kind <B>variable</B>. 

<P ID="13">

<A HREF="#DictEntry_defparameter_402"><B>defparameter</B></A> and <A HREF="#DictEntry_defparameter_402"><B>defvar</B></A> normally appear as a <I><A HREF="../glossary/t.htm#toplevelform">top level form</A></I>, 
but it is meaningful for them to appear as <I><A HREF="../glossary/n.htm#nontoplevelform">non-top-level forms</A></I>.  However,
the compile-time side effects described below only take place when
they appear as <I><A HREF="../glossary/t.htm#toplevelform">top level forms</A></I>.


<P ID="14">
<DT><B>Examples:</B><DD>

<PRE ID="15">
 (defparameter *p* 1) <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> *P*
 *p* <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> 1
 (constantp '*p*) <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> <I><A HREF="../glossary/f.htm#false">false</A></I>
 (setq *p* 2) <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> 2
 (defparameter *p* 3) <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> *P*
 *p* <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> 3

 (defvar *v* 1) <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> *V*
 *v* <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> 1
 (constantp '*v*) <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> <I><A HREF="../glossary/f.htm#false">false</A></I>
 (setq *v* 2) <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> 2
 (defvar *v* 3) <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> *V*
 *v* <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> 2

 (defun foo ()
   (let ((*p* 'p) (*v* 'v))
     (bar))) <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9>  FOO
 (defun bar () (list *p* *v*)) <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9>  BAR
 (foo) <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> (P V)
</PRE>

<P ID="16">
The principal operational distinction between <A HREF="#DictEntry_defparameter_402"><B>defparameter</B></A> and <A HREF="#DictEntry_defparameter_402"><B>defvar</B></A>
is that <A HREF="#DictEntry_defparameter_402"><B>defparameter</B></A> makes an unconditional assignment to <I>name</I>,
while <A HREF="#DictEntry_defparameter_402"><B>defvar</B></A> makes a conditional one.  In practice, this means that
<A HREF="#DictEntry_defparameter_402"><B>defparameter</B></A> is useful in situations where loading or reloading the definition
would want to pick up a new value of the variable, while <A HREF="#DictEntry_defparameter_402"><B>defvar</B></A> is used in
situations where the old value would want to be retained if the file were loaded or reloaded.
For example, one might create a file which contained:

<P ID="17">
<PRE ID="18">
 (defvar *the-interesting-numbers* '())
 (defmacro define-interesting-number (name n)
   `(progn (defvar ,name ,n)
           (pushnew ,name *the-interesting-numbers*)
           ',name))
 (define-interesting-number *my-height* 168) ;cm
 (define-interesting-number *my-weight* 13)  ;stones
</PRE>

<P ID="19">
Here the initial value, <TT>()</TT>, for the variable <TT>*the-interesting-numbers*</TT>
is just a seed that we are never likely to want to reset to something else
once something has been grown from it.  As such, we have used <A HREF="#DictEntry_defparameter_402"><B>defvar</B></A> 
to avoid having the <TT>*interesting-numbers*</TT> information reset if the file is
loaded a second time.  It is true that the two calls to
<B>define-interesting-number</B> here would be reprocessed, but
if there were additional calls in another file, they would not be and that 
information would be lost.  On the other hand, consider the following code:

<P ID="20">
<PRE ID="21">
 (defparameter *default-beep-count* 3)
 (defun beep (&optional (n *default-beep-count*))
   (dotimes (i n) (si:%beep 1000. 100000.) (sleep 0.1)))
</PRE>

<P ID="22">
Here we could easily imagine editing the code to change the initial value of
<TT>*default-beep-count*</TT>, and then reloading the file to pick up the new value.
In order to make value updating easy, we have used <A HREF="#DictEntry_defparameter_402"><B>defparameter</B></A>.

<P ID="23">
On the other hand, there is potential value to using <A HREF="#DictEntry_defparameter_402"><B>defvar</B></A> in this
situation.  For example, suppose that someone had predefined an alternate
value for <TT>*default-beep-count*</TT>, or had loaded the file and then manually
changed the value.  In both cases, if we had used <A HREF="#DictEntry_defparameter_402"><B>defvar</B></A> instead of
<A HREF="#DictEntry_defparameter_402"><B>defparameter</B></A>, those user preferences would not be overridden by
(re)loading the file.

<P ID="24">
The choice of whether to use <A HREF="#DictEntry_defparameter_402"><B>defparameter</B></A> or <A HREF="#DictEntry_defparameter_402"><B>defvar</B></A> has
visible consequences to programs, but is nevertheless often made for subjective
reasons.

<P ID="25">
<DT><B>Side Effects:</B><DD>



If a <A HREF="#DictEntry_defparameter_402"><B>defvar</B></A> or <A HREF="#DictEntry_defparameter_402"><B>defparameter</B></A> <I><A HREF="../glossary/f.htm#form">form</A></I> appears as a <I><A HREF="../glossary/t.htm#toplevelform">top level form</A></I>,
the <I><A HREF="../glossary/c.htm#compiler">compiler</A></I> must recognize that the <I>name</I> has been
proclaimed <A HREF="special.htm"><B>special</B></A>.  However, it must neither <I><A HREF="../glossary/e.htm#evaluate">evaluate</A></I> 
the <I>initial-value</I> <I><A HREF="../glossary/f.htm#form">form</A></I> nor <I><A HREF="../glossary/a.htm#assign">assign</A></I> the 
<I><A HREF="../glossary/d.htm#dynamicvariable">dynamic variable</A></I> named <I>name</I> at compile time.


<P ID="26">
There may be additional (<I><A HREF="../glossary/i.htm#implementationdefined">implementation-defined</A></I>) compile-time or 
run-time side effects, as long as such effects do not interfere with the
correct operation of <I><A HREF="../glossary/c.htm#conformingprogram">conforming programs</A></I>.

<P ID="27">
<DT><B>Affected By:</B><DD>

<A HREF="#DictEntry_defparameter_402"><B>defvar</B></A> is affected by whether <I>name</I> is already <I><A HREF="../glossary/b.htm#bound">bound</A></I>.

<P ID="28">
<DT><B>See Also:</B><DD>

<A HREF="declaim.htm"><B>declaim</B></A>, 
<A HREF="defconst.htm"><B>defconstant</B></A>,
<A HREF="document.htm"><B>documentation</B></A>,
Section <A HREF="../section/compilat.htm">3.2 Compilation</A>

<P ID="29">
<DT><B>Notes:</B><DD>

It is customary to name <I><A HREF="../glossary/d.htm#dynamicvariable">dynamic variables</A></I> with an <I><A HREF="../glossary/a.htm#asterisk">asterisk</A></I>
at the beginning and end of the name.  e.g., <TT>*foo*</TT> is a good name for
a <I><A HREF="../glossary/d.htm#dynamicvariable">dynamic variable</A></I>, but not for a <I><A HREF="../glossary/l.htm#lexicalvariable">lexical variable</A></I>;
<TT>foo</TT> is a good name for a <I><A HREF="../glossary/l.htm#lexicalvariable">lexical variable</A></I>, 
but not for a <I><A HREF="../glossary/d.htm#dynamicvariable">dynamic variable</A></I>.
This naming convention is observed for all <I><A HREF="../glossary/d.htm#definedname">defined names</A></I> in <I>Common Lisp</I>;
however, neither <I><A HREF="../glossary/c.htm#conformingprogram">conforming programs</A></I> nor <I><A HREF="../glossary/c.htm#conformingimplementation">conforming implementations</A></I>
are obliged to adhere to this convention.

<P ID="30">
The intent of the permission for additional side effects is to allow
<I><A HREF="../glossary/i.htm#implementation">implementations</A></I> to do normal "bookkeeping" that accompanies
definitions.  For example, the <I><A HREF="../glossary/m.htm#macroexpansion">macro expansion</A></I> of a <A HREF="#DictEntry_defparameter_402"><B>defvar</B></A>
or <A HREF="#DictEntry_defparameter_402"><B>defparameter</B></A> <I><A HREF="../glossary/f.htm#form">form</A></I> might include code that arranges to
record the name of the source file in which the definition occurs.

<P ID="31">
<A HREF="#DictEntry_defparameter_402"><B>defparameter</B></A> and <A HREF="#DictEntry_defparameter_402"><B>defvar</B></A> might be defined as follows:

<P ID="32">
<PRE ID="33">
 (defmacro defparameter (name initial-value 
                         &optional (documentation nil documentation-p))
   `(progn (declaim (special ,name))
           (setf (symbol-value ',name) ,initial-value)
           ,(when documentation-p
              `(setf (documentation ',name 'variable) ',documentation))
           ',name))
 (defmacro defvar (name &optional
                        (initial-value nil initial-value-p)
                        (documentation nil documentation-p))
   `(progn (declaim (special ,name))
           ,(when initial-value-p
              `(unless (boundp ',name)
                 (setf (symbol-value ',name) ,initial-value)))
           ,(when documentation-p
              `(setf (documentation ',name 'variable) ',documentation))
           ',name))
</PRE>

<P ID="34">
<DT><B>Allegro CL Implementation Details:</B><DD>
 None.</DL>
</TD></TR></TABLE>
<HR NOSHADE>
<A HREF="../ansicl.htm" TARGET="_self"><IMG SRC="../images/a-top12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Home"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>

<A HREF="defconst.htm"><IMG SRC="../images/a-lft12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Previous"></A> 
<A HREF="../section/dictio19.htm" TARGET="_self"><IMG SRC="../images/a-up12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Up"></A> 
<A HREF="destruct.htm"><IMG SRC="../images/a-rgh12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Next"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/tableofc.htm" TARGET="_self"><IMG SRC="../images/toc.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Table of Contents"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/index.htm" TARGET="_self"><IMG SRC="../images/i16.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Index"></A>
<HR NOSHADE>

<SMALL><I><B>&#169; Franz Inc. 1998-2009</b> - File last updated 7-21-2009</I></SMALL>
</FONT>

</BODY>
</HTML>
