<!doctype HTML public "-//W3O//DTD W3 HTML 3.2//EN">
<HTML>
<HEAD>

<!-- 
  Document                : dodo.htm
  representing node       : do, do*  [ID:NO-514]
                 of class : DictEntry  [ID:SC-9]
  Generated by SchemaText : 1.52
  From HSDL source        : ansi cl
  At                      : 09:54:29 23.07.98

  About SchemaText        : http://www.schema.de
-->

<META NAME="GENERATOR" CONTENT="SchemaText 1.40f">
<META NAME="AUTHOR" CONTENT="Franz Inc.">
<META NAME="DATE" CONTENT="23.07.98">
<META NAME="TIME" CONTENT="09:51:09">
<META NAME="VERSION" CONTENT="520">

<TITLE>do, do*</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFFF">

<table border="0" width="100%" cellpadding="1" cellspacing="0">
  <tr>
    <td bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3">
      <tr>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/contents.htm"><b>ToC</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/introduction.htm"><b>DocOverview</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/cgide.htm"><b>CGDoc</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/release-notes.htm"><b>RelNotes</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/index.htm"><b>Index</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/permuted-index.htm"><b>PermutedIndex</b></a></td>
      </tr>
    </table>
    </td>
    <td align="right"><b>Allegro CL</b>
    </td>
  </tr>
</table>

<A NAME="DictEntry_do_do_514"></A>
<FONT FACE="ARIAL,GENEVA,HELVETICA">
<A HREF="../ansicl.htm" TARGET="_self"><IMG SRC="../images/a-top12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Home"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>

<A HREF="../section/dictio18.htm"><IMG SRC="../images/a-lft12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Previous"></A> 
<A HREF="../section/dictio18.htm" TARGET="_self"><IMG SRC="../images/a-up12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Up"></A> 
<A HREF="dotimes.htm"><IMG SRC="../images/a-rgh12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Next"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/tableofc.htm" TARGET="_self"><IMG SRC="../images/toc.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Table of Contents"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/index.htm" TARGET="_self"><IMG SRC="../images/i16.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Index"></A>
<HR NOSHADE>
<TABLE WIDTH="90%"><TR>
<TD WIDTH=5%>&nbsp;</TD>
<TD WIDTH=95%>
<FONT SIZE=-2>
<A HREF="../ansicl.htm"> ANSI Common Lisp</A>&nbsp;&nbsp;<IMG SRC="../images/a-rgh6b.gif" BORDER=0 WIDTH=6 HEIGHT=6>&nbsp;<A HREF="../chapter/iteratio.htm">6 Iteration</A>&nbsp;&nbsp;<IMG SRC="../images/a-rgh6b.gif" BORDER=0 WIDTH=6 HEIGHT=6>&nbsp;<A HREF="../section/dictio18.htm">6.2 Dictionary of Iteration</A>

</FONT>
<P ID="2">
<TABLE BORDER=0 WIDTH="100%">
<TR>
<TD><FONT SIZE="+2">6.2.1  do, do*</FONT></TD>
<TD ALIGN=RIGHT><FONT SIZE="+1"><I>Macro</I></FONT></TD>
</TR></TABLE>
<DL>


<P ID="3">


<P ID="4">
<DT><B>Syntax:</B><DD>


<TABLE BORDER=0>
<TR><TD><B>do</B></TD>
<TD><NOBR>(<TT>{</TT><I>var</I> | (<I>var</I> <I>[
</I><I>init-form</I> [step-form <I>]</I>])<TT>}</TT><SUP>*</SUP>)</NOBR></TD></TR>
<TR><TD></TD><TD><NOBR>(<I>end-test-form</I> {<I>result-form</I>}*)</NOBR></TD></TR>
<TR><TD></TD><TD><NOBR>{<I>declaration</I>}* <TT>{</TT><I>tag</I> <I>|</I> 
<I>statement</I><TT>}</TT><SUP>*</SUP></NOBR>
</TD></TR></TABLE><P ID="5">
&nbsp;&nbsp;<IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> <I>{<I>result</I>}*</I>
<P ID="6">

<TABLE BORDER=0>
<TR><TD><B>do*</B></TD>
<TD><NOBR>(<TT>{</TT><I>var</I> | (<I>var</I> <I>[
</I><I>init-form</I> [step-form <I>]</I>])<TT>}</TT><SUP>*</SUP>)</NOBR></TD></TR>
<TR><TD></TD><TD><NOBR>(<I>end-test-form</I> {<I>result-form</I>}*)</NOBR></TD></TR>
<TR><TD></TD><TD><NOBR>{<I>declaration</I>}* <TT>{</TT><I>tag</I> <I>|</I> 
<I>statement</I><TT>}</TT><SUP>*</SUP></NOBR>
</TD></TR></TABLE><P ID="7">
&nbsp;&nbsp;<IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> <I>{<I>result</I>}*</I>


<P ID="8">
<DT><B>Arguments and Values:</B><DD>

<I>var</I> - a <I><A HREF="../glossary/s.htm#symbol">symbol</A></I>.

<P ID="9">
<I>init-form</I> - a <I><A HREF="../glossary/f.htm#form">form</A></I>.

<P ID="10">
<I>step-form</I> - a <I><A HREF="../glossary/f.htm#form">form</A></I>.

<P ID="11">

<I>end-test-form</I> - a <I><A HREF="../glossary/f.htm#form">form</A></I>.

<P ID="12">
<I>result-forms</I> - an <I><A HREF="../glossary/i.htm#implicitprogn">implicit progn</A></I>.

<P ID="13">

<I>declaration</I> - a <A HREF="declare.htm"><B>declare</B></A> <I><A HREF="../glossary/e.htm#expression">expression</A></I>; not evaluated.

<P ID="14">
<I>tag</I> - a <I><A HREF="../glossary/g.htm#gotag">go tag</A></I>; not evaluated.

<P ID="15">
<I>statement</I> - a <I><A HREF="../glossary/c.htm#compoundform">compound form</A></I>; evaluated as described below.

<P ID="16">
<I>results</I> - if a <A HREF="return.htm"><B>return</B></A> or <A HREF="return-f.htm"><B>return-from</B></A> form is executed,
 the <I><A HREF="../glossary/v.htm#value">values</A></I> passed from that <I><A HREF="../glossary/f.htm#form">form</A></I>;

 otherwise, the <I><A HREF="../glossary/v.htm#value">values</A></I> returned by the <I>result-forms</I>.

<P ID="17">
<DT><B>Description:</B><DD>

<A HREF="#DictEntry_do_do_514"><B>do</B></A> iterates over a group of <I>statements</I>
while a test condition holds.
<A HREF="#DictEntry_do_do_514"><B>do</B></A> accepts an arbitrary number of iteration <I>vars</I>
which are bound within the iteration and stepped in parallel.
An initial value may be supplied for each iteration variable by use of
an <I>init-form</I>.
<I>Step-forms</I> may be used to specify how the
<I>vars</I> should be updated on succeeding iterations through the loop.  
<I>Step-forms</I> may be used both to generate successive
values or to accumulate results.
If the <I>end-test-form</I> condition 
is met prior to an execution of the body, the iteration terminates.
<I>Tags</I> label <I>statements</I>.

<P ID="18">
<A HREF="#DictEntry_do_do_514"><B>do*</B></A> is exactly like <A HREF="#DictEntry_do_do_514"><B>do</B></A> 
except that the <I><A HREF="../glossary/b.htm#binding">bindings</A></I> and steppings
of the <I>vars</I> are performed sequentially rather than in parallel.

<P ID="19">
Before the first iteration, all the <I>init-forms</I> are evaluated, and
each <I>var</I> is bound to the value of its respective <I>init-form</I>,
if supplied.
This is a <I><A HREF="../glossary/b.htm#binding">binding</A></I>, not an assignment; when the loop terminates,
the old values of those variables will be restored.
For <A HREF="#DictEntry_do_do_514"><B>do</B></A>, all 
of the <I>init-forms</I> are evaluated before any <I>var</I>
is bound. The
<I>init-forms</I> can refer to the <I><A HREF="../glossary/b.htm#binding">bindings</A></I> of the <I>vars</I>
visible before beginning execution of
<A HREF="#DictEntry_do_do_514"><B>do</B></A>.
For <A HREF="#DictEntry_do_do_514"><B>do*</B></A>, the first <I>init-form</I> is evaluated, then the first
<I>var</I> is bound to that value, then the second <I>init-form</I> 
is evaluated, then the second <I>var</I> is bound, and so on;
in general, the <I>k</I>th <I>init-form</I> can refer to the new binding 
of the <I>j</I>th <I>var</I> if <I>j</I> &lt; <I>k</I>, and otherwise to the 
old binding of the <I>j</I>th <I>var</I>.

<P ID="20">
At the beginning of each iteration, after processing the variables,
the <I>end-test-form</I> is evaluated.  If the result is
<I><A HREF="../glossary/f.htm#false">false</A></I>, execution proceeds with the body of the <A HREF="#DictEntry_do_do_514"><B>do</B></A> 
(or <A HREF="#DictEntry_do_do_514"><B>do*</B></A>) form.
If the result is <I><A HREF="../glossary/t.htm#true">true</A></I>, the <I>result-forms</I> are evaluated in order
as an <I><A HREF="../glossary/i.htm#implicitprogn">implicit progn</A></I>,
and then <A HREF="#DictEntry_do_do_514"><B>do</B></A> or <A HREF="#DictEntry_do_do_514"><B>do*</B></A> returns.  

<P ID="21">

At the beginning of each iteration other than the first, 
<I>vars</I> are updated as follows.  All the <I>step-forms</I>, if supplied,
are evaluated, from left to right, and the resulting values are
assigned to the respective <I>vars</I>.
Any <I>var</I> that has no associated <I>step-form</I> is not assigned to.
For <A HREF="#DictEntry_do_do_514"><B>do</B></A>, all the <I>step-forms</I> are evaluated before any <I>var</I>
is updated; the assignment of values to <I>vars</I> is done in parallel,
as if by <A HREF="psetq.htm"><B>psetq</B></A>.
Because all of the <I>step-forms</I> are evaluated before any
of the <I>vars</I> are altered, a <I>step-form</I> when evaluated always has
access to the old values of all the <I>vars</I>, even if other <I>step-forms</I>
precede it.
For <A HREF="#DictEntry_do_do_514"><B>do*</B></A>, the first <I>step-form</I> is evaluated, then the
value is assigned to the first <I>var</I>, then the second <I>step-form</I> 
is evaluated, then the value is assigned to the second <I>var</I>, and so on;
the assignment of values to variables is done sequentially,
as if by <A HREF="setq.htm"><B>setq</B></A>.
For either <A HREF="#DictEntry_do_do_514"><B>do</B></A> or <A HREF="#DictEntry_do_do_514"><B>do*</B></A>,
after the <I>vars</I> have been updated,
the <I>end-test-form</I> 
is evaluated as described above, and the iteration continues.

<P ID="22">

The remainder of the <A HREF="#DictEntry_do_do_514"><B>do</B></A> (or <A HREF="#DictEntry_do_do_514"><B>do*</B></A>) form constitutes 
an <I><A HREF="../glossary/i.htm#implicittagbody">implicit tagbody</A></I>.
<I>Tags</I> may appear within the body of a <A HREF="#DictEntry_do_do_514"><B>do</B></A> loop
for use by <A HREF="go.htm"><B>go</B></A> statements appearing in the body (but such <A HREF="go.htm"><B>go</B></A>
statements may not appear in the variable specifiers, the <I>end-test-form</I>,
or the <I>result-forms</I>).
When the end of a <A HREF="#DictEntry_do_do_514"><B>do</B></A> body is reached, the next iteration cycle
(beginning with the evaluation of <I>step-forms</I>) occurs.

<P ID="23">

An <I><A HREF="../glossary/i.htm#implicitblock">implicit block</A></I> named <A HREF="nil.htm"><B>nil</B></A>&nbsp;surrounds the entire <A HREF="#DictEntry_do_do_514"><B>do</B></A> 
(or <A HREF="#DictEntry_do_do_514"><B>do*</B></A>) form.
A <A HREF="return.htm"><B>return</B></A> statement may be used at any point to exit the loop
immediately.

<P ID="24">
<I>Init-form</I>  is an
initial value for the <I>var</I> with which it is associated.
If <I>init-form</I> is omitted, the initial value of <I>var</I> is <A HREF="nil.htm"><B>nil</B></A>.
If a <I>declaration</I> is supplied for a <I>var</I>, <I>init-form</I> 
must be consistent with the <I>declaration</I>.

<P ID="25">
<I>Declarations</I> can appear at the beginning of a <A HREF="#DictEntry_do_do_514"><B>do</B></A> 
(or <A HREF="#DictEntry_do_do_514"><B>do*</B></A>) body.
They apply to code in the <A HREF="#DictEntry_do_do_514"><B>do</B></A> (or <A HREF="#DictEntry_do_do_514"><B>do*</B></A>) body, 
to the <I><A HREF="../glossary/b.htm#binding">bindings</A></I> of the <A HREF="#DictEntry_do_do_514"><B>do</B></A> (or <A HREF="#DictEntry_do_do_514"><B>do*</B></A>) 
<I>vars</I>, 



to the <I>step-forms</I>,
to the <I>end-test-form</I>, and to the <I>result-forms</I>.

<P ID="26">
<DT><B>Examples:</B><DD>


<PRE ID="27">
 (do ((temp-one 1 (1+ temp-one))
       (temp-two 0 (1- temp-two)))
      ((&gt; (- temp-one temp-two) 5) temp-one)) <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> 4

 (do ((temp-one 1 (1+ temp-one))
       (temp-two 0 (1+ temp-one)))     
      ((= 3 temp-two) temp-one)) <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> 3

 (do* ((temp-one 1 (1+ temp-one))
        (temp-two 0 (1+ temp-one)))
       ((= 3 temp-two) temp-one)) <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> 2                     

 (do ((j 0 (+ j 1)))
     (nil)                       ;Do forever.
   (format t "~%Input ~D:" j)
   (let ((item (read)))
     (if (null item) (return)   ;Process items until NIL seen.
         (format t "~&Output ~D: ~S" j item))))
<IMG SRC="../images/triangle.gif" BORDER=0 WIDTH=10 HEIGHT=9> Input 0: <U>banana</U>
<IMG SRC="../images/triangle.gif" BORDER=0 WIDTH=10 HEIGHT=9> Output 0: BANANA
<IMG SRC="../images/triangle.gif" BORDER=0 WIDTH=10 HEIGHT=9> Input 1: <U>(57 boxes)</U>
<IMG SRC="../images/triangle.gif" BORDER=0 WIDTH=10 HEIGHT=9> Output 1: (57 BOXES)
<IMG SRC="../images/triangle.gif" BORDER=0 WIDTH=10 HEIGHT=9> Input 2: <U>NIL</U>
<IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9>  NIL

 (setq a-vector (vector 1 nil 3 nil))
 (do ((i 0 (+ i 1))     ;Sets every null element of a-vector to zero.
      (n (array-dimension a-vector 0)))
     ((= i n))
   (when (null (aref a-vector i))
     (setf (aref a-vector i) 0))) <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9>  NIL
a-vector <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> #(1 0 3 0)
</PRE>

<P ID="28">
<PRE ID="29">
 (do ((x e (cdr x))
      (oldx x x))
     ((null x))
   body)
</PRE>
is an example of parallel assignment to index variables.  On the first
iteration, the value of <TT>oldx</TT> is whatever value <TT>x</TT> had before
the <A HREF="#DictEntry_do_do_514"><B>do</B></A> was entered.  On succeeding iterations, <TT>oldx</TT> contains
the value that <TT>x</TT> had on the previous iteration. 

<P ID="30">

<PRE ID="31">
 (do ((x foo (cdr x))
      (y bar (cdr y))
      (z '() (cons (f (car x) (car y)) z)))
     ((or (null x) (null y))
      (nreverse z)))
</PRE>
does the same thing as <TT>(mapcar #'f foo bar)</TT>.  The step
computation for <TT>z</TT> is an example of the fact that variables 
are stepped in parallel.
Also, the body of the loop is empty.  

<P ID="32">
<PRE ID="33">
 (defun list-reverse (list)
        (do ((x list (cdr x))
             (y '() (cons (car x) y)))
            ((endp x) y)))
</PRE>

<P ID="34">

As an example of nested iterations, consider a data structure that is a 
<I><A HREF="../glossary/l.htm#list">list</A></I> of <I>conses</I>. The <I><A HREF="../glossary/c.htm#car">car</A></I> of each <I><A HREF="../glossary/c.htm#cons">cons</A></I> is a 
<I><A HREF="../glossary/l.htm#list">list</A></I> of <I><A HREF="../glossary/s.htm#symbol">symbols</A></I>,
and the <I><A HREF="../glossary/c.htm#cdr">cdr</A></I> of each <I><A HREF="../glossary/c.htm#cons">cons</A></I> is a 
<I><A HREF="../glossary/l.htm#list">list</A></I> of equal length containing
corresponding values.  Such a data structure is similar to an association
list,
but is divided into "frames"; the overall structure resembles a rib-cage.
A lookup function on such a data structure might be:

<P ID="35">
<PRE ID="36">
 (defun ribcage-lookup (sym ribcage)           
        (do ((r ribcage (cdr r)))
            ((null r) nil)
          (do ((s (caar r) (cdr s))
               (v (cdar r) (cdr v))) 
              ((null s))
            (when (eq (car s) sym)
              (return-from ribcage-lookup (car v)))))) <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9>  RIBCAGE-LOOKUP
</PRE>

<P ID="37">
<DT><B>See Also:</B><DD>

other iteration functions
 (<A HREF="dolist.htm"><B>dolist</B></A>, <A HREF="dotimes.htm"><B>dotimes</B></A>, and <A HREF="loop.htm"><B>loop</B></A>)
and more primitive functionality 
 (<A HREF="tagbody.htm"><B>tagbody</B></A>, <A HREF="go.htm"><B>go</B></A>, <A HREF="block.htm"><B>block</B></A>, <A HREF="return.htm"><B>return</B></A>, 
  <A HREF="letlet.htm"><B>let</B></A>, and <A HREF="setq.htm"><B>setq</B></A>)

<P ID="38">
<DT><B>Notes:</B><DD>


If <I>end-test-form</I> is <A HREF="nil.htm"><B>nil</B></A>, the test will never succeed.
This provides an idiom for "do forever":
the body of the <A HREF="#DictEntry_do_do_514"><B>do</B></A> or <A HREF="#DictEntry_do_do_514"><B>do*</B></A> 
is executed repeatedly.
The infinite loop can be terminated by the use of <A HREF="return.htm"><B>return</B></A>,
<A HREF="return-f.htm"><B>return-from</B></A>, <A HREF="go.htm"><B>go</B></A> to an outer level, or <A HREF="throw.htm"><B>throw</B></A>.

<P ID="39">

A <A HREF="#DictEntry_do_do_514"><B>do</B></A> <I><A HREF="../glossary/f.htm#form">form</A></I> may be explained in terms of the more primitive <I><A HREF="../glossary/f.htm#form">forms</A></I>
<A HREF="block.htm"><B>block</B></A>, <A HREF="return.htm"><B>return</B></A>, 
<A HREF="letlet.htm"><B>let</B></A>, <A HREF="loop.htm"><B>loop</B></A>, <A HREF="tagbody.htm"><B>tagbody</B></A>,
and <A HREF="psetq.htm"><B>psetq</B></A> as follows:

<P ID="40">
<PRE ID="41">
 (block nil        
   (let ((var1 init1)
         (var2 init2)
         ...
         (varn initn))
     <I>declarations</I>
     (loop (when end-test (return (progn . result)))
           (tagbody . tagbody)
           (psetq var1 step1
                  var2 step2
                  ...
                  varn stepn))))
</PRE>

<P ID="42">
<A HREF="#DictEntry_do_do_514"><B>do*</B></A> is similar, except that <A HREF="letlet.htm"><B>let*</B></A> and <A HREF="setq.htm"><B>setq</B></A> replace
the <A HREF="letlet.htm"><B>let</B></A> and <A HREF="psetq.htm"><B>psetq</B></A>, respectively.

<P ID="43">


<P ID="44">
<DT><B>Allegro CL Implementation Details:</B><DD>
 None.</DL>
</TD></TR></TABLE>
<HR NOSHADE>
<A HREF="../ansicl.htm" TARGET="_self"><IMG SRC="../images/a-top12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Home"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>

<A HREF="../section/dictio18.htm"><IMG SRC="../images/a-lft12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Previous"></A> 
<A HREF="../section/dictio18.htm" TARGET="_self"><IMG SRC="../images/a-up12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Up"></A> 
<A HREF="dotimes.htm"><IMG SRC="../images/a-rgh12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Next"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/tableofc.htm" TARGET="_self"><IMG SRC="../images/toc.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Table of Contents"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/index.htm" TARGET="_self"><IMG SRC="../images/i16.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Index"></A>
<HR NOSHADE>

<SMALL><I><B>&#169; Franz Inc. 1998-2009</b> - File last updated 7-21-2009</I></SMALL>
</FONT>

</BODY>
</HTML>
