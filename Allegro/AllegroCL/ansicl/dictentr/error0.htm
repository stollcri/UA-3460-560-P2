<!doctype HTML public "-//W3O//DTD W3 HTML 3.2//EN">
<HTML>
<HEAD>

<!-- 
  Document                : error0.htm
  representing node       : error  [ID:NO-636]
                 of class : DictEntry  [ID:SC-9]
  Generated by SchemaText : 1.52
  From HSDL source        : ansi cl
  At                      : 09:54:00 23.07.98

  About SchemaText        : http://www.schema.de
-->

<META NAME="GENERATOR" CONTENT="SchemaText 1.40f">
<META NAME="AUTHOR" CONTENT="Franz Inc.">
<META NAME="DATE" CONTENT="23.07.98">
<META NAME="TIME" CONTENT="09:51:09">
<META NAME="VERSION" CONTENT="520">

<TITLE>error</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFFF">

<table border="0" width="100%" cellpadding="1" cellspacing="0">
  <tr>
    <td bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3">
      <tr>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/contents.htm"><b>ToC</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/introduction.htm"><b>DocOverview</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/cgide.htm"><b>CGDoc</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/release-notes.htm"><b>RelNotes</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/index.htm"><b>Index</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/permuted-index.htm"><b>PermutedIndex</b></a></td>
      </tr>
    </table>
    </td>
    <td align="right"><b>Allegro CL</b>
    </td>
  </tr>
</table>

<A NAME="DictEntry_error_636"></A>
<FONT FACE="ARIAL,GENEVA,HELVETICA">
<A HREF="../ansicl.htm" TARGET="_self"><IMG SRC="../images/a-top12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Home"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>

<A HREF="assert.htm"><IMG SRC="../images/a-lft12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Previous"></A> 
<A HREF="../section/dictio15.htm" TARGET="_self"><IMG SRC="../images/a-up12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Up"></A> 
<A HREF="cerror.htm"><IMG SRC="../images/a-rgh12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Next"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/tableofc.htm" TARGET="_self"><IMG SRC="../images/toc.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Table of Contents"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/index.htm" TARGET="_self"><IMG SRC="../images/i16.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Index"></A>
<HR NOSHADE>
<TABLE WIDTH="90%"><TR>
<TD WIDTH=5%>&nbsp;</TD>
<TD WIDTH=95%>
<FONT SIZE=-2>
<A HREF="../ansicl.htm"> ANSI Common Lisp</A>&nbsp;&nbsp;<IMG SRC="../images/a-rgh6b.gif" BORDER=0 WIDTH=6 HEIGHT=6>&nbsp;<A HREF="../chapter/conditio.htm">9 Conditions</A>&nbsp;&nbsp;<IMG SRC="../images/a-rgh6b.gif" BORDER=0 WIDTH=6 HEIGHT=6>&nbsp;<A HREF="../section/dictio15.htm">9.2 Dictionary of Conditions</A>

</FONT>
<P ID="2">
<TABLE BORDER=0 WIDTH="100%">
<TR>
<TD><FONT SIZE="+2">9.2.11  error</FONT></TD>
<TD ALIGN=RIGHT><FONT SIZE="+1"><I>Function</I></FONT></TD>
</TR></TABLE>
<DL>


<P ID="3">
<DT><B>Syntax:</B><DD>

<B>error</B>
<I>datum <TT>&amp;rest</TT> arguments</I>
&nbsp;&nbsp;<IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9>  <B><BIG>|</BIG></B> 
<P ID="4">
<DT><B>Arguments and Values:</B><DD>

<I>datum</I>, <I>arguments</I> - <I><A HREF="../glossary/d.htm#designator">designators</A></I> for a <I><A HREF="../glossary/c.htm#condition">condition</A></I> 
 of default type <A HREF="simple-e.htm"><B>simple-error</B></A>.

<P ID="5">
<DT><B>Description:</B><DD>

<A HREF="#DictEntry_error_636"><B>error</B></A> effectively invokes <A HREF="signal.htm"><B>signal</B></A> on the denoted <I><A HREF="../glossary/c.htm#condition">condition</A></I>.

<P ID="6">
If the <I><A HREF="../glossary/c.htm#condition">condition</A></I> is not handled, <TT>(invoke-debugger <I>condition</I>)</TT> is done.  
As a consequence of calling <A HREF="invoke-d.htm"><B>invoke-debugger</B></A>, <A HREF="#DictEntry_error_636"><B>error</B></A> 
cannot directly return; the only exit from <A HREF="#DictEntry_error_636"><B>error</B></A>
can come by non-local transfer of control in a handler or by use of
an interactive debugging command.

<P ID="7">
<DT><B>Examples:</B><DD>

<PRE ID="8">
 (defun factorial (x)
   (cond ((or (not (typep x 'integer)) (minusp x))
          (error "~S is not a valid argument to FACTORIAL." x))
         ((zerop x) 1)
         (t (* x (factorial (- x 1))))))
<IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9>  FACTORIAL
(factorial 20)
<IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> 2432902008176640000
(factorial -1)
<IMG SRC="../images/triangle.gif" BORDER=0 WIDTH=10 HEIGHT=9> Error: -1 is not a valid argument to FACTORIAL.
<IMG SRC="../images/triangle.gif" BORDER=0 WIDTH=10 HEIGHT=9> To continue, type :CONTINUE followed by an option number:
<IMG SRC="../images/triangle.gif" BORDER=0 WIDTH=10 HEIGHT=9> 1: Return to Lisp Toplevel.
<IMG SRC="../images/triangle.gif" BORDER=0 WIDTH=10 HEIGHT=9> Debug&gt; 
</PRE>

<P ID="9">
<PRE ID="10">
 (setq a 'fred)
<IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9>  FRED
 (if (numberp a) (1+ a) (error "~S is not a number." A))
<IMG SRC="../images/triangle.gif" BORDER=0 WIDTH=10 HEIGHT=9> Error: FRED is not a number.
<IMG SRC="../images/triangle.gif" BORDER=0 WIDTH=10 HEIGHT=9> To continue, type :CONTINUE followed by an option number:
<IMG SRC="../images/triangle.gif" BORDER=0 WIDTH=10 HEIGHT=9> 1: Return to Lisp Toplevel.
<IMG SRC="../images/triangle.gif" BORDER=0 WIDTH=10 HEIGHT=9> Debug&gt; <U>:Continue 1</U>
<IMG SRC="../images/triangle.gif" BORDER=0 WIDTH=10 HEIGHT=9> Return to Lisp Toplevel.
 
 (define-condition not-a-number (error) 
                   ((argument :reader not-a-number-argument :initarg :argument))
   (:report (lambda (condition stream)
              (format stream "~S is not a number."
                      (not-a-number-argument condition)))))
<IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9>  NOT-A-NUMBER
 
 (if (numberp a) (1+ a) (error 'not-a-number :argument a))
<IMG SRC="../images/triangle.gif" BORDER=0 WIDTH=10 HEIGHT=9> Error: FRED is not a number.
<IMG SRC="../images/triangle.gif" BORDER=0 WIDTH=10 HEIGHT=9> To continue, type :CONTINUE followed by an option number:
<IMG SRC="../images/triangle.gif" BORDER=0 WIDTH=10 HEIGHT=9> 1: Return to Lisp Toplevel.
<IMG SRC="../images/triangle.gif" BORDER=0 WIDTH=10 HEIGHT=9> Debug&gt; <U>:Continue 1</U>
<IMG SRC="../images/triangle.gif" BORDER=0 WIDTH=10 HEIGHT=9> Return to Lisp Toplevel.
</PRE>

<P ID="11">
<DT><B>Side Effects:</B><DD>

<I><A HREF="../glossary/h.htm#handler">Handlers</A></I> for the specified condition, if any, are invoked 
and might have side effects.
Program execution might stop, and the debugger might be entered.

<P ID="12">
<DT><B>Affected By:</B><DD>

Existing handler bindings.

<P ID="13">
<A HREF="break-on.htm"><B>*break-on-signals*</B></A>


<P ID="14">
Signals an error of <I><A HREF="../glossary/t.htm#type">type</A></I> <A HREF="type-err.htm"><B>type-error</B></A> if <I>datum</I> and <I>arguments</I> are not <I><A HREF="../glossary/d.htm#designator">designators</A></I> for a <I><A HREF="../glossary/c.htm#condition">condition</A></I>.

<P ID="15">
<DT><B>See Also:</B><DD>

<A HREF="cerror.htm"><B>cerror</B></A>, <A HREF="signal.htm"><B>signal</B></A>, <A HREF="format.htm"><B>format</B></A>, 
<A HREF="ignore-e.htm"><B>ignore-errors</B></A>, <A HREF="break-on.htm"><B>*break-on-signals*</B></A>, 
<A HREF="handler0.htm"><B>handler-bind</B></A>, Section <A HREF="../section/conditio.htm">9.1 Condition System Concepts</A>

<P ID="16">
<DT><B>Notes:</B><DD>

Some implementations may provide debugger
commands for interactively returning from individual stack frames.
However, it should be possible for the programmer to feel confident
about writing code like:

<P ID="17">
<PRE ID="18">
 (defun wargames:no-win-scenario ()
   (if (error "pushing the button would be stupid."))
   (push-the-button))
</PRE>
In this scenario, there should be no chance that
<A HREF="#DictEntry_error_636"><B>error</B></A> will return
and the button will get pushed.

<P ID="19">
While the meaning of this program is clear and it might be proven `safe'
by a formal theorem prover, such a proof is no guarantee that the
program is safe to execute.  Compilers have been known to have bugs,
computers to have signal glitches, and human beings to manually
intervene in ways that are not always possible to predict.  Those kinds
of errors, while beyond the scope of the condition system to formally
model, are not beyond the scope of things that should seriously be
considered when writing code that could have the kinds of sweeping
effects hinted at by this example.

<P ID="20">
<DT><B>Allegro CL Implementation Details:</B><DD>
 None.</DL>
</TD></TR></TABLE>
<HR NOSHADE>
<A HREF="../ansicl.htm" TARGET="_self"><IMG SRC="../images/a-top12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Home"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>

<A HREF="assert.htm"><IMG SRC="../images/a-lft12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Previous"></A> 
<A HREF="../section/dictio15.htm" TARGET="_self"><IMG SRC="../images/a-up12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Up"></A> 
<A HREF="cerror.htm"><IMG SRC="../images/a-rgh12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Next"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/tableofc.htm" TARGET="_self"><IMG SRC="../images/toc.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Table of Contents"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/index.htm" TARGET="_self"><IMG SRC="../images/i16.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Index"></A>
<HR NOSHADE>

<SMALL><I><B>&#169; Franz Inc. 1998-2009</b> - File last updated 7-21-2009</I></SMALL>
</FONT>

</BODY>
</HTML>
