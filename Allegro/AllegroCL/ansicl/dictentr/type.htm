<!doctype HTML public "-//W3O//DTD W3 HTML 3.2//EN">
<HTML>
<HEAD>

<!-- 
  Document                : type.htm
  representing node       : type  [ID:NO-303]
                 of class : DictEntry  [ID:SC-9]
  Generated by SchemaText : 1.52
  From HSDL source        : ansi cl
  At                      : 09:55:12 23.07.98

  About SchemaText        : http://www.schema.de
-->

<META NAME="GENERATOR" CONTENT="SchemaText 1.40f">
<META NAME="AUTHOR" CONTENT="Franz Inc.">
<META NAME="DATE" CONTENT="23.07.98">
<META NAME="TIME" CONTENT="09:51:09">
<META NAME="VERSION" CONTENT="520">

<TITLE>type</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFFF">

<table border="0" width="100%" cellpadding="1" cellspacing="0">
  <tr>
    <td bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3">
      <tr>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/contents.htm"><b>ToC</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/introduction.htm"><b>DocOverview</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/cgide.htm"><b>CGDoc</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/release-notes.htm"><b>RelNotes</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/index.htm"><b>Index</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/permuted-index.htm"><b>PermutedIndex</b></a></td>
      </tr>
    </table>
    </td>
    <td align="right"><b>Allegro CL</b>
    </td>
  </tr>
</table>

<A NAME="DictEntry_type_303"></A>
<FONT FACE="ARIAL,GENEVA,HELVETICA">
<A HREF="../ansicl.htm" TARGET="_self"><IMG SRC="../images/a-top12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Home"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>

<A HREF="dynamic-.htm"><IMG SRC="../images/a-lft12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Previous"></A> 
<A HREF="../section/dictio21.htm" TARGET="_self"><IMG SRC="../images/a-up12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Up"></A> 
<A HREF="inlineno.htm"><IMG SRC="../images/a-rgh12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Next"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/tableofc.htm" TARGET="_self"><IMG SRC="../images/toc.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Table of Contents"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/index.htm" TARGET="_self"><IMG SRC="../images/i16.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Index"></A>
<HR NOSHADE>
<TABLE WIDTH="90%"><TR>
<TD WIDTH=5%>&nbsp;</TD>
<TD WIDTH=95%>
<FONT SIZE=-2>
<A HREF="../ansicl.htm"> ANSI Common Lisp</A>&nbsp;&nbsp;<IMG SRC="../images/a-rgh6b.gif" BORDER=0 WIDTH=6 HEIGHT=6>&nbsp;<A HREF="../chapter/evaluati.htm">3 Evaluation and Compilation</A>&nbsp;&nbsp;<IMG SRC="../images/a-rgh6b.gif" BORDER=0 WIDTH=6 HEIGHT=6>&nbsp;<A HREF="../section/dictio21.htm">3.8 Dictionary Evaluation and Compilation</A>

</FONT>
<P ID="2">
<TABLE BORDER=0 WIDTH="100%">
<TR>
<TD><FONT SIZE="+2">3.8.21  type</FONT></TD>
<TD ALIGN=RIGHT><FONT SIZE="+1"><I>Declaration</I></FONT></TD>
</TR></TABLE>
<DL>


<P ID="3">
<DT><B>Syntax:</B><DD>

<TT>(type <I>typespec</I> {<I>var</I>}*)</TT>

<P ID="4">
<TT>(<I>typespec</I> {<I>var</I>}*)</TT>

<P ID="5">
<DT><B>Arguments:</B><DD>

<I>typespec</I> - a <I><A HREF="../glossary/t.htm#typespecifier">type specifier</A></I>.

<P ID="6">
<I>var</I> - a <I><A HREF="../glossary/v.htm#variable">variable</A></I> <I><A HREF="../glossary/n.htm#name">name</A></I>.

<P ID="7">
<DT><B>Valid Context:</B><DD>

<I><A HREF="../glossary/d.htm#declaration">declaration</A></I> or <I><A HREF="../glossary/p.htm#proclamation">proclamation</A></I>

<P ID="8">
<DT><B>Binding Types Affected:</B><DD>

<I><A HREF="../glossary/v.htm#variable">variable</A></I>

<P ID="9">
<DT><B>Description:</B><DD>

Affects
only variable <I><A HREF="../glossary/b.htm#binding">bindings</A></I> and specifies that the
<I>vars</I> take on 
values only of the specified <I>typespec</I>.
In particular, values assigned to the variables by <A HREF="setq.htm"><B>setq</B></A>,
as well as the initial values of the <I>vars</I> must be of
the specified <I>typespec</I>.
<A HREF="#DictEntry_type_303"><B>type</B></A> declarations never apply to function <I><A HREF="../glossary/b.htm#binding">bindings</A></I> (see <A HREF="ftype.htm"><B>ftype</B></A>).

<P ID="10">

A type declaration of a <I><A HREF="../glossary/s.htm#symbol">symbol</A></I> 
defined by <A HREF="symbol-m.htm"><B>symbol-macrolet</B></A> is equivalent
to wrapping a <A HREF="the.htm"><B>the</B></A> 
expression around the expansion of that <I><A HREF="../glossary/s.htm#symbol">symbol</A></I>,



although the <I><A HREF="../glossary/s.htm#symbol">symbol</A></I>'s <I><A HREF="../glossary/m.htm#macroexpansion">macro expansion</A></I> is not actually affected.


<P ID="11">


<P ID="12">
The meaning of a type declaration
  is equivalent to changing each reference to 
a variable (<I>var</I>) within the scope of the
  declaration to <TT>(the <I>typespec</I> <I>var</I>)</TT>,
changing each expression assigned to the
  variable (<I>new-value</I>) within the scope of the declaration to 
<TT>(the <I>typespec</I> <I>new-value</I>)</TT>,
  and executing 
<TT>(the <I>typespec</I> <I>var</I>)</TT> at the moment the scope of the declaration
  is entered.

<P ID="13">
A <I><A HREF="../glossary/t.htm#type">type</A></I> declaration is valid in all declarations. The interpretation
  of a type declaration is as follows:
<UL>
<LI ID="14">1. During the execution of any reference to the
  declared variable within the scope of the declaration, the consequences
are 


undefined
if
  the value of the declared variable is not of the declared <I><A HREF="../glossary/t.htm#type">type</A></I>.

<P ID="15">
<LI ID="16">2. During the execution of any 
<A HREF="setq.htm"><B>setq</B></A> of the declared variable within the scope
  of the declaration, the consequences are 


undefined
if the newly assigned value of the
  declared variable is not of the declared <I><A HREF="../glossary/t.htm#type">type</A></I>. 

<P ID="17">
<LI ID="18">3. At the moment the
  scope of the declaration is entered, the consequences are 


undefined
if the value of the
  declared variable is not of the declared <I><A HREF="../glossary/t.htm#type">type</A></I>.
</UL>

<P ID="19">
A <I><A HREF="../glossary/t.htm#type">type</A></I> declaration affects only variable references within
its scope.



<P ID="20">
If nested <I><A HREF="../glossary/t.htm#type">type</A></I> declarations refer to the same variable,
  then the value of the variable must be a member of the intersection of
  the declared <I><A HREF="../glossary/t.htm#type">types</A></I>.


<P ID="21">

  If there is a local <TT>type</TT> declaration for a dynamic
  variable, and there is also a global <TT>type</TT> proclamation for that same
  variable, then the value of the variable within the scope of the local
  declaration must be a member of the intersection of the two declared
  <I><A HREF="../glossary/t.htm#type">types</A></I>.


<P ID="22">
<A HREF="#DictEntry_type_303"><B>type</B></A> declarations can  be <I><A HREF="../glossary/f.htm#freedeclaration">free declarations</A></I>
or <I><A HREF="../glossary/b.htm#bounddeclaration">bound declarations</A></I>.

<P ID="23">


A <I><A HREF="../glossary/s.htm#symbol">symbol</A></I> cannot be both the name of a <I><A HREF="../glossary/t.htm#type">type</A></I> and the name of a
declaration.  Defining a <I><A HREF="../glossary/s.htm#symbol">symbol</A></I> as the <I><A HREF="../glossary/n.htm#name">name</A></I> of a <I><A HREF="../glossary/c.htm#class">class</A></I>,
<I><A HREF="../glossary/s.htm#structure">structure</A></I>, <I><A HREF="../glossary/c.htm#condition">condition</A></I>, or <I><A HREF="../glossary/t.htm#type">type</A></I>, when the <I><A HREF="../glossary/s.htm#symbol">symbol</A></I>
has been <I>declared</I> as a declaration name, or vice versa, signals an error.


<P ID="24">
 
Within the <I><A HREF="../glossary/l.htm#lexicalscope">lexical scope</A></I> of an <A HREF="array.htm"><B>array</B></A> type declaration, 
all references to <I><A HREF="../glossary/a.htm#array">array</A></I> <I><A HREF="../glossary/e.htm#element">elements</A></I> are assumed to satisfy the
<I><A HREF="../glossary/e.htm#expressedarrayelementtype">expressed array element type</A></I> (as opposed to the <I><A HREF="../glossary/u.htm#upgradedarrayelementtype">upgraded array element type</A></I>).

A compiler can treat
the code within the scope of the <A HREF="array.htm"><B>array</B></A> type declaration as if each
<I><A HREF="../glossary/a.htm#access">access</A></I> of an <I><A HREF="../glossary/a.htm#array">array</A></I> <I><A HREF="../glossary/e.htm#element">element</A></I> were surrounded by an appropriate 
<A HREF="the.htm"><B>the</B></A> form.
 

<P ID="25">
<DT><B>Examples:</B><DD>

<PRE ID="26">
 (defun f (x y)
   (declare (type fixnum x y))
   (let ((z (+ x y)))
     (declare (type fixnum z))
     z)) <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9>  F
 (f 1 2) <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> 3
 ;; The previous definition of F is equivalent to
 (defun f (x y)
   ;; This declaration is a shorthand form of the TYPE declaration
   (declare (fixnum x y))
   ;; To declare the type of a return value, it's not necessary to
   ;; create a named variable.  A THE special form can be used instead.
   (the fixnum (+ x y))) <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9>  F
 (f 1 2) <IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> 3
</PRE>

<P ID="27">
 

<P ID="28">
<PRE ID="29">
 (defvar *one-array* (make-array 10 :element-type '(signed-byte 5)))
 (defvar *another-array* (make-array 10 :element-type '(signed-byte 8)))
  
 (defun frob (an-array)
   (declare (type (array (signed-byte 5) 1) an-array))
   (setf (aref an-array 1) 31)
   (setf (aref an-array 2) 127)
   (setf (aref an-array 3) (* 2 (aref an-array 3)))
   (let ((foo 0))
     (declare (type (signed-byte 5) foo))
     (setf foo (aref an-array 0))))









 (frob *one-array*)
 (frob *another-array*)
</PRE>

<P ID="30">
The above definition of <TT>frob</TT> is equivalent to:

<P ID="31">
<PRE ID="32">
 (defun frob (an-array)
   (setf (the (signed-byte 5) (aref an-array 1)) 31)
   (setf (the (signed-byte 5) (aref an-array 2)) 127)
   (setf (the (signed-byte 5) (aref an-array 3))
         (* 2 (the (signed-byte 5) (aref an-array 3))))
   (let ((foo 0))
     (declare (type (signed-byte 5) foo))
     (setf foo (the (signed-byte 5) (aref an-array 0)))))
</PRE>

<P ID="33">

Given an implementation in which 
<I><A HREF="../glossary/f.htm#fixnum">fixnums</A></I> are 29 bits but <A HREF="fixnum.htm"><B>fixnum</B></A> <I><A HREF="../glossary/a.htm#array">arrays</A></I> 
are upgraded to signed 32-bit <I><A HREF="../glossary/a.htm#array">arrays</A></I>,
the following 


could be compiled with all <I><A HREF="../glossary/f.htm#fixnum">fixnum</A></I> arithmetic:

<P ID="34">
<PRE ID="35">
 (defun bump-counters (counters)
   (declare (type (array fixnum *) bump-counters))
   (dotimes (i (length counters))
     (incf (aref counters i))))
</PRE>
 

<P ID="36">
<DT><B>See Also:</B><DD>


<A HREF="declare.htm"><B>declare</B></A>,
<A HREF="declaim.htm"><B>declaim</B></A>,
<A HREF="proclaim.htm"><B>proclaim</B></A>

<P ID="37">
<DT><B>Notes:</B><DD>

<TT>(<I>typespec</I> {<I>var</I>}*)</TT> 
is an abbreviation for <TT>(type <I>typespec</I> {<I>var</I>}*)</TT>.





<P ID="38">
A <A HREF="#DictEntry_type_303"><B>type</B></A> declaration for the arguments to a function does not
necessarily imply anything about the type of the result.  The following
function is not permitted to be compiled using <I><A HREF="../glossary/i.htm#implementationdependent">implementation-dependent</A></I>
<I><A HREF="../glossary/f.htm#fixnum">fixnum</A></I>-only arithmetic:

<P ID="39">
<PRE ID="40">
 (defun f (x y) (declare (fixnum x y)) (+ x y))
</PRE>

<P ID="41">
To see why, consider <TT>(f most-positive-fixnum 1)</TT>.
Common Lisp defines that <TT>F</TT> must return a <I>bignum</I> here, rather
than signal an error or produce a mathematically incorrect result.
If you have special knowledge such "<I><A HREF="../glossary/f.htm#fixnum">fixnum</A></I> overflow" cases will
not come up, you can declare the result value to be in the <I><A HREF="../glossary/f.htm#fixnum">fixnum</A></I>
range, enabling some compilers to use more efficient arithmetic:

<P ID="42">
<PRE ID="43">
 (defun f (x y)
   (declare (fixnum x y))
   (the fixnum (+ x y)))
</PRE>

<P ID="44">
Note, however, that in the three-argument case, because of the possibility
of an implicit intermediate value growing too large, the following will not
cause <I><A HREF="../glossary/i.htm#implementationdependent">implementation-dependent</A></I> <I><A HREF="../glossary/f.htm#fixnum">fixnum</A></I>-only arithmetic to be used:

<P ID="45">
<PRE ID="46">
 (defun f (x y)
   (declare (fixnum x y z))
   (the fixnum (+ x y z)))
</PRE>

<P ID="47">
To see why, consider <TT>(f most-positive-fixnum 1 -1).</TT>
Although the arguments and the result are all <I><A HREF="../glossary/f.htm#fixnum">fixnums</A></I>, an intermediate
value is not a <I><A HREF="../glossary/f.htm#fixnum">fixnum</A></I>.  If it is important that 
<I><A HREF="../glossary/i.htm#implementationdependent">implementation-dependent</A></I> <I><A HREF="../glossary/f.htm#fixnum">fixnum</A></I>-only arithmetic be selected
in <I><A HREF="../glossary/i.htm#implementation">implementations</A></I> that provide it, 
consider writing something like this instead:

<P ID="48">
<PRE ID="49">
 (defun f (x y)
   (declare (fixnum x y z))
   (the fixnum (+ (the fixnum (+ x y)) z)))
</PRE>

<P ID="50">
<DT><B>Allegro CL Implementation Details:</B><DD>
 None.</DL>
</TD></TR></TABLE>
<HR NOSHADE>
<A HREF="../ansicl.htm" TARGET="_self"><IMG SRC="../images/a-top12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Home"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>

<A HREF="dynamic-.htm"><IMG SRC="../images/a-lft12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Previous"></A> 
<A HREF="../section/dictio21.htm" TARGET="_self"><IMG SRC="../images/a-up12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Up"></A> 
<A HREF="inlineno.htm"><IMG SRC="../images/a-rgh12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Next"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/tableofc.htm" TARGET="_self"><IMG SRC="../images/toc.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Table of Contents"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/index.htm" TARGET="_self"><IMG SRC="../images/i16.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Index"></A>
<HR NOSHADE>

<SMALL><I><B>&#169; Franz Inc. 1998-2009</b> - File last updated 7-21-2009</I></SMALL>
</FONT>

</BODY>
</HTML>
