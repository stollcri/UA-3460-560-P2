<!doctype HTML public "-//W3O//DTD W3 HTML 3.2//EN">
<HTML>
<HEAD>

<!-- 
  Document                : define_c.htm
  representing node       : define_condition  [ID:NO-654]
                 of class : DictEntry  [ID:SC-9]
  Generated by SchemaText : 1.52
  From HSDL source        : ansi cl
  At                      : 09:53:56 23.07.98

  About SchemaText        : http://www.schema.de
-->

<META NAME="GENERATOR" CONTENT="SchemaText 1.40f">
<META NAME="AUTHOR" CONTENT="Franz Inc.">
<META NAME="DATE" CONTENT="23.07.98">
<META NAME="TIME" CONTENT="09:51:09">
<META NAME="VERSION" CONTENT="520">

<TITLE>define-condition</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFFF">

<table border="0" width="100%" cellpadding="1" cellspacing="0">
  <tr>
    <td bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3">
      <tr>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/contents.htm"><b>ToC</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/introduction.htm"><b>DocOverview</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/cgide.htm"><b>CGDoc</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/release-notes.htm"><b>RelNotes</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/index.htm"><b>Index</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/permuted-index.htm"><b>PermutedIndex</b></a></td>
      </tr>
    </table>
    </td>
    <td align="right"><b>Allegro CL</b>
    </td>
  </tr>
</table>

<A NAME="DictEntry_define_condi_654"></A>
<FONT FACE="ARIAL,GENEVA,HELVETICA">
<A HREF="../ansicl.htm" TARGET="_self"><IMG SRC="../images/a-top12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Home"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>

<A HREF="ignore-e.htm"><IMG SRC="../images/a-lft12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Previous"></A> 
<A HREF="../section/dictio15.htm" TARGET="_self"><IMG SRC="../images/a-up12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Up"></A> 
<A HREF="make-co0.htm"><IMG SRC="../images/a-rgh12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Next"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/tableofc.htm" TARGET="_self"><IMG SRC="../images/toc.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Table of Contents"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/index.htm" TARGET="_self"><IMG SRC="../images/i16.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Index"></A>
<HR NOSHADE>
<TABLE WIDTH="90%"><TR>
<TD WIDTH=5%>&nbsp;</TD>
<TD WIDTH=95%>
<FONT SIZE=-2>
<A HREF="../ansicl.htm"> ANSI Common Lisp</A>&nbsp;&nbsp;<IMG SRC="../images/a-rgh6b.gif" BORDER=0 WIDTH=6 HEIGHT=6>&nbsp;<A HREF="../chapter/conditio.htm">9 Conditions</A>&nbsp;&nbsp;<IMG SRC="../images/a-rgh6b.gif" BORDER=0 WIDTH=6 HEIGHT=6>&nbsp;<A HREF="../section/dictio15.htm">9.2 Dictionary of Conditions</A>

</FONT>
<P ID="2">
<TABLE BORDER=0 WIDTH="100%">
<TR>
<TD><FONT SIZE="+2">9.2.29  define-condition</FONT></TD>
<TD ALIGN=RIGHT><FONT SIZE="+1"><I>Macro</I></FONT></TD>
</TR></TABLE>
<DL>


<P ID="3">


<P ID="4">
<DT><B>Syntax:</B><DD>


<B>define-condition</B>
<I>name ({<I>parent-type</I>}*)
	                ({<I>slot-spec</I>}*)
                        {<I>option</I>}*</I><BR>&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;<IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> <I>name</I>
<P ID="5">
<TABLE BORDER=0>
<TR><TD>
slot-spec::= </TD><TD>slot-name | (slot-name <IMG SRC="../images/downarr.gif" BORDER=0 WIDTH=13 HEIGHT=11>slot-option)</TD></TR><P ID="6">
</TABLE>
<TABLE BORDER=0>
<TR><TD>
slot-option::= </TD>
<TD>[[<TT>{</TT><TT>:reader</TT> <I><A HREF="../glossary/s.htm#symbol">symbol</A></I><TT>}</TT><SUP>*</SUP> |</TD></TR>
<TR><TD></TD><TD><TT>{</TT><TT>:writer</TT> <IMG SRC="../images/downarr.gif" BORDER=0 WIDTH=13 HEIGHT=11>function-name<TT>}</TT><SUP>*</SUP> |</TD></TR>
<TR><TD></TD><TD><TT>{</TT><TT>:accessor</TT> <I><A HREF="../glossary/s.htm#symbol">symbol</A></I><TT>}</TT><SUP>*</SUP>  |</TD></TR>
<TR><TD></TD><TD><TT>{</TT><TT>:allocation</TT> <IMG SRC="../images/downarr.gif" BORDER=0 WIDTH=13 HEIGHT=11>allocation-type<TT>}</TT> |</TD></TR>
<TR><TD></TD><TD><TT>{</TT><TT>:initarg</TT> <I><A HREF="../glossary/s.htm#symbol">symbol</A></I><TT>}</TT><SUP>*</SUP> |</TD></TR>
<TR><TD></TD><TD><TT>{</TT><TT>:initform</TT> <I><A HREF="../glossary/f.htm#form">form</A></I><TT>}</TT> |</TD></TR>
<TR><TD></TD><TD><TT>{</TT><TT>:type</TT> <I>type-specifier</I><TT>}</TT>]]</TD></TR> <P ID="7">
</TABLE>
<TABLE BORDER=0>
<TR><TD>
option::= </TD>
<TD>[[(<TT>:default-initargs</TT> <TT>.</TT> <I>initarg-list</I>) |</TD></TR>
<TR><TD></TD><TD>(<TT>:documentation</TT> <I><A HREF="../glossary/s.htm#string">string</A></I>) |</TD></TR>
<TR><TD></TD><TD>(<TT>:report</TT>        <I>report-name</I>)]]</TD></TR>
<P ID="8">
</TABLE>
<TABLE BORDER=0>
<TR><TD>
function-name::= </TD><TD><TT>{</TT><I><A HREF="../glossary/s.htm#symbol">symbol</A></I> | <TT>(setf <I><A HREF="../glossary/s.htm#symbol">symbol</A></I>)</TT><TT>}</TT></TD></TR><P ID="9">
</TABLE>
<TABLE BORDER=0>
<TR><TD>
allocation-type::= </TD><TD><TT>:instance</TT> | <TT>:class</TT></TD></TR><P ID="10">
</TABLE>
<TABLE BORDER=0>
<TR><TD>
report-name::= </TD><TD><I><A HREF="../glossary/s.htm#string">string</A></I> | <I><A HREF="../glossary/s.htm#symbol">symbol</A></I> | <I><A HREF="../glossary/l.htm#lambdaexpression">lambda expression</A></I></TD></TR><P ID="11">
</TABLE>
<P ID="12">
<DT><B>Arguments and Values:</B><DD>

<I>name</I> - a <I><A HREF="../glossary/s.htm#symbol">symbol</A></I>.

<P ID="13">

<I>parent-type</I> - a <I><A HREF="../glossary/s.htm#symbol">symbol</A></I> naming a <I><A HREF="../glossary/c.htm#condition">condition</A></I> <I><A HREF="../glossary/t.htm#type">type</A></I>.
  If no <I>parent-types</I> are supplied,
  the <I>parent-types</I> default to <TT>(condition)</TT>.

<P ID="14">
<I>default-initargs</I> - a <I><A HREF="../glossary/l.htm#list">list</A></I> of <I><A HREF="../glossary/k.htm#keywordvaluepair">keyword/value pairs</A></I>.

<P ID="15">


<P ID="16">
<I>Slot-spec</I> -- the <I><A HREF="../glossary/n.htm#name">name</A></I> of a <I><A HREF="../glossary/s.htm#slot">slot</A></I> or a <I><A HREF="../glossary/l.htm#list">list</A></I>
consisting of the <I>slot-name</I> followed by zero or more <I>slot-options</I>.

<P ID="17">
<I>Slot-name</I> -- a slot name (a <I><A HREF="../glossary/s.htm#symbol">symbol</A></I>), 
the <I><A HREF="../glossary/l.htm#list">list</A></I> of a slot name, or the 
<I><A HREF="../glossary/l.htm#list">list</A></I> of slot name/slot form pairs.

<P ID="18">
<I>Option</I> -- Any of the following:

<P ID="19">
<UL>

<P ID="20">
<LI ID="21"><TT>:reader</TT>

<P ID="22">
<TT>:reader</TT> can be supplied more than once for a given <I><A HREF="../glossary/s.htm#slot">slot</A></I> 
and cannot be <A HREF="nil.htm"><B>nil</B></A>.

<P ID="23">
<LI ID="24"><TT>:writer</TT>

<P ID="25">
<TT>:writer</TT> can be supplied more than once for a given <I><A HREF="../glossary/s.htm#slot">slot</A></I>
and must name a <I><A HREF="../glossary/g.htm#genericfunction">generic function</A></I>.

<P ID="26">
<LI ID="27"><TT>:accessor</TT>

<P ID="28">
<TT>:accessor</TT> can be supplied more than once for a given <I><A HREF="../glossary/s.htm#slot">slot</A></I>
and cannot be <A HREF="nil.htm"><B>nil</B></A>.

<P ID="29">
<LI ID="30"><TT>:allocation</TT>

<P ID="31">
<TT>:allocation</TT> can be supplied once at most for a given <I><A HREF="../glossary/s.htm#slot">slot</A></I>.
The default if <TT>:allocation</TT> is not supplied is <TT>:instance</TT>.

<P ID="32">
<LI ID="33"><TT>:initarg</TT> 

<P ID="34">
<TT>:initarg</TT> can be supplied more than once for a given <I><A HREF="../glossary/s.htm#slot">slot</A></I>.  

<P ID="35">
<LI ID="36"><TT>:initform</TT>  

<P ID="37">
<TT>:initform</TT> can be supplied once at most for a given <I><A HREF="../glossary/s.htm#slot">slot</A></I>.  

<P ID="38">
<LI ID="39"><TT>:type</TT> 

<P ID="40">
<TT>:type</TT> can be supplied once at most for a given <I><A HREF="../glossary/s.htm#slot">slot</A></I>. 

<P ID="41">
<LI ID="42"><TT>:documentation</TT> 

<P ID="43">
<TT>:documentation</TT> can be supplied once at most for a given <I><A HREF="../glossary/s.htm#slot">slot</A></I>. 

<P ID="44">
<LI ID="45"><TT>:report</TT>

<P ID="46">
<TT>:report</TT> can be supplied once at most.

</UL>


<P ID="47">
<DT><B>Description:</B><DD>


<A HREF="#DictEntry_define_condi_654"><B>define-condition</B></A> defines a new condition type called <I>name</I>, 
which is a <I><A HREF="../glossary/s.htm#subtype">subtype</A></I> of 

the <I><A HREF="../glossary/t.htm#type">type</A></I> or <I><A HREF="../glossary/t.htm#type">types</A></I> named by
  <I>parent-type</I>.  
Each <I>parent-type</I> argument specifies a direct <I><A HREF="../glossary/s.htm#supertype">supertype</A></I>
of the new <I><A HREF="../glossary/c.htm#condition">condition</A></I>. The new <I><A HREF="../glossary/c.htm#condition">condition</A></I>
inherits <I><A HREF="../glossary/s.htm#slot">slots</A></I> and <I><A HREF="../glossary/m.htm#method">methods</A></I> from each of its direct
<I><A HREF="../glossary/s.htm#supertype">supertypes</A></I>, and so on.



<P ID="48">
  If a slot name/slot form pair is supplied,
the slot form is a <I><A HREF="../glossary/f.htm#form">form</A></I> that 
can be evaluated by <A HREF="make-co0.htm"><B>make-condition</B></A> to
  produce a default value when an explicit value is not provided.  If no 
slot form
is supplied, the contents of the <I>slot</I> 
is initialized in an 
  <I><A HREF="../glossary/i.htm#implementationdependent">implementation-dependent</A></I> way.  

<P ID="49">
  If the <I><A HREF="../glossary/t.htm#type">type</A></I> being defined and some other 
<I><A HREF="../glossary/t.htm#type">type</A></I> from which it inherits
  have a slot by the same name, only one slot is allocated in the
  <I><A HREF="../glossary/c.htm#condition">condition</A></I>, 
but the supplied slot form overrides any slot form
  that might otherwise have been inherited from a <I>parent-type</I>.  If no 
slot form is supplied, the inherited slot form (if any) is still visible.

<P ID="50">
Accessors are created according to the same rules as used by 

<A HREF="defclass.htm"><B>defclass</B></A>.

<P ID="51">
A description of <I>slot-options</I> follows:

<P ID="52">


<P ID="53">
<UL>

<P ID="54">
<LI ID="55"><TT>:reader</TT>

<P ID="56">
The <TT>:reader</TT> slot option specifies that an <I><A HREF="../glossary/u.htm#unqualifiedmethod">unqualified method</A></I> is
to be defined on the <I><A HREF="../glossary/g.htm#genericfunction">generic function</A></I> named by the argument
to <TT>:reader</TT> to read the value of the given <I><A HREF="../glossary/s.htm#slot">slot</A></I>.

<P ID="57">
<LI ID="58"> The <TT>:initform</TT> slot option is used to provide a default
initial value form to be used in the initialization of the <I><A HREF="../glossary/s.htm#slot">slot</A></I>.  This
<I><A HREF="../glossary/f.htm#form">form</A></I> is evaluated every time it is used to initialize the 
<I><A HREF="../glossary/s.htm#slot">slot</A></I>.  The
<I><A HREF="../glossary/l.htm#lexicalenvironment">lexical environment</A></I> 
in which this <I><A HREF="../glossary/f.htm#form">form</A></I> is evaluated is the lexical
<I><A HREF="../glossary/e.htm#environment">environment</A></I> in which the <A HREF="#DictEntry_define_condi_654"><B>define-condition</B></A> 
form was evaluated.
Note that the <I><A HREF="../glossary/l.htm#lexicalenvironment">lexical environment</A></I> refers both to variables and to
<I><A HREF="../glossary/f.htm#function">functions</A></I>.  
For <I><A HREF="../glossary/l.htm#localslot">local slots</A></I>, the <I><A HREF="../glossary/d.htm#dynamicenvironment">dynamic environment</A></I> is the dynamic
<I><A HREF="../glossary/e.htm#environment">environment</A></I> 
in which <A HREF="make-co0.htm"><B>make-condition</B></A> was called; for 
<I><A HREF="../glossary/s.htm#sharedslot">shared slots</A></I>, the <I><A HREF="../glossary/d.htm#dynamicenvironment">dynamic environment</A></I> 
is the <I><A HREF="../glossary/d.htm#dynamicenvironment">dynamic environment</A></I> in which the
<A HREF="#DictEntry_define_condi_654"><B>define-condition</B></A> form was evaluated.  


<P ID="59">

No implementation is permitted to extend the syntax of <A HREF="#DictEntry_define_condi_654"><B>define-condition</B></A>
to allow <TT>(<I>slot-name</I> <I>form</I>)</TT> as an abbreviation for
<TT>(<I>slot-name</I> :initform <I>form</I>)</TT>.

<P ID="60">
<LI ID="61"><TT>:initarg</TT>

<P ID="62">
The <TT>:initarg</TT> slot option declares an initialization
argument named by its <I><A HREF="../glossary/s.htm#symbol">symbol</A></I> argument
and specifies that this
initialization argument initializes the given <I><A HREF="../glossary/s.htm#slot">slot</A></I>.  If the
initialization argument has a value in the call to 
<A HREF="initiali.htm"><B>initialize-instance</B></A>, the value is stored into the given <I><A HREF="../glossary/s.htm#slot">slot</A></I>,
and the slot's <TT>:initform</TT> slot option, if any, is not
evaluated.  If none of the initialization arguments specified for a
given <I><A HREF="../glossary/s.htm#slot">slot</A></I> has a value, the <I><A HREF="../glossary/s.htm#slot">slot</A></I> is initialized according to the
<TT>:initform</TT> slot option, if specified.  

<P ID="63">
<LI ID="64"><TT>:type</TT>

<P ID="65">
The <TT>:type</TT> slot option specifies that the contents of the
<I><A HREF="../glossary/s.htm#slot">slot</A></I> is always of the specified <I><A HREF="../glossary/t.htm#type">type</A></I>.  It effectively
declares the result type of the reader generic function when applied
to an <I><A HREF="../glossary/o.htm#object">object</A></I> of this <I><A HREF="../glossary/c.htm#condition">condition</A></I> type.  
The consequences of attempting to store in a
<I><A HREF="../glossary/s.htm#slot">slot</A></I> a value that 
does not satisfy the type of the <I><A HREF="../glossary/s.htm#slot">slot</A></I> is undefined.


<P ID="66">
<LI ID="67"><TT>:default-initargs</TT>

<P ID="68">
This option is treated the same as it would be <A HREF="defclass.htm"><B>defclass</B></A>.

<P ID="69">
<LI ID="70"><TT>:documentation</TT>

<P ID="71">
The <TT>:documentation</TT> slot option provides a <I><A HREF="../glossary/d.htm#documentationstring">documentation string</A></I>
for the <I><A HREF="../glossary/s.htm#slot">slot</A></I>.

<P ID="72">




<LI ID="73"><TT>:report</TT>

<P ID="74">
<I><A HREF="../glossary/c.htm#condition">Condition</A></I> reporting is mediated through the <A HREF="print-ob.htm"><B>print-object</B></A>
method for the <I><A HREF="../glossary/c.htm#condition">condition</A></I> type in question, with <A HREF="print-es.htm"><B>*print-escape*</B></A>
always being <A HREF="nil.htm"><B>nil</B></A>. Specifying <TT>(:report <I>report-name</I>)</TT> 
in the definition of a condition type <TT>C</TT> is equivalent to:

<P ID="75">
<PRE ID="76">
 (defmethod print-object ((x c) stream)
   (if *print-escape* (call-next-method) (<I>report-name</I> x stream)))
</PRE>

<P ID="77">
     If the value supplied by the argument to <TT>:report</TT> (<I>report-name</I>)
is a <I><A HREF="../glossary/s.htm#symbol">symbol</A></I> or a <I><A HREF="../glossary/l.htm#lambdaexpression">lambda expression</A></I>, 
it must be acceptable to 
     <A HREF="function.htm"><B>function</B></A>. <TT>(function <I>report-name</I>)</TT> 
is evaluated
     in the current <I><A HREF="../glossary/l.htm#lexicalenvironment">lexical environment</A></I>.  
It should return a <I><A HREF="../glossary/f.htm#function">function</A></I> 
of two
     arguments, a <I><A HREF="../glossary/c.htm#condition">condition</A></I> and a <I><A HREF="../glossary/s.htm#stream">stream</A></I>, 
that prints on the <I><A HREF="../glossary/s.htm#stream">stream</A></I> a
     description of the <I><A HREF="../glossary/c.htm#condition">condition</A></I>. 
 This <I><A HREF="../glossary/f.htm#function">function</A></I> is called whenever the
     <I><A HREF="../glossary/c.htm#condition">condition</A></I> is printed while <A HREF="print-es.htm"><B>*print-escape*</B></A> is <A HREF="nil.htm"><B>nil</B></A>.

<P ID="78">
If <I>report-name</I> is a <I><A HREF="../glossary/s.htm#string">string</A></I>, it is a shorthand for 

<P ID="79">
<PRE ID="80">
 (lambda (condition stream)
   (declare (ignore condition))
   (write-string <I>report-name</I> stream))
</PRE>

<P ID="81">
This option is processed after the new <I><A HREF="../glossary/c.htm#condition">condition</A></I> type has been defined,
so use of the <I>slot</I> accessors within the <TT>:report</TT> function is permitted.
If this option is not supplied, information about how to report this
type of <I><A HREF="../glossary/c.htm#condition">condition</A></I> is inherited from the <I>parent-type</I>.

</UL>

<P ID="82">



The consequences are unspecifed if an attempt is made to <I><A HREF="../glossary/r.htm#read">read</A></I> a 
<I>slot</I> that has not been explicitly initialized and that has not 
been given a default value.

<P ID="83">
The consequences are unspecified if an attempt is made to assign the
<I>slots</I> by using <A HREF="document.htm"><B>setf</B></A>.

<P ID="84">


If a <A HREF="#DictEntry_define_condi_654"><B>define-condition</B></A> <I><A HREF="../glossary/f.htm#form">form</A></I> appears as a <I><A HREF="../glossary/t.htm#toplevelform">top level form</A></I>,
the <I><A HREF="../glossary/c.htm#compiler">compiler</A></I> must make <I>name</I> recognizable as a valid <I><A HREF="../glossary/t.htm#type">type</A></I> name,
and it must be possible to reference the <I><A HREF="../glossary/c.htm#condition">condition</A></I> <I><A HREF="../glossary/t.htm#type">type</A></I> as the
<I>parent-type</I> of another <I><A HREF="../glossary/c.htm#condition">condition</A></I> <I><A HREF="../glossary/t.htm#type">type</A></I> in a subsequent
<A HREF="#DictEntry_define_condi_654"><B>define-condition</B></A> <I><A HREF="../glossary/f.htm#form">form</A></I> in the <I><A HREF="../glossary/f.htm#file">file</A></I> being compiled.


<P ID="85">
<DT><B>Examples:</B><DD>

The following form defines a condition of <I><A HREF="../glossary/t.htm#type">type</A></I> 
<TT>peg/hole-mismatch</TT> which inherits from a condition type
called <TT>blocks-world-error</TT>:

<P ID="86">
<PRE ID="87">
(define-condition peg/hole-mismatch 
                  (blocks-world-error)
                  ((peg-shape  :initarg :peg-shape
                               :reader peg/hole-mismatch-peg-shape)
                   (hole-shape :initarg :hole-shape
                               :reader peg/hole-mismatch-hole-shape))
  (:report (lambda (condition stream)
             (format stream "A ~A peg cannot go in a ~A hole."
                     (peg/hole-mismatch-peg-shape  condition)
                     (peg/hole-mismatch-hole-shape condition)))))
</PRE>

<P ID="88">
The new type has slots <TT>peg-shape</TT> and <TT>hole-shape</TT>, 
so <A HREF="make-co0.htm"><B>make-condition</B></A> accepts <TT>:peg-shape</TT> and <TT>:hole-shape</TT> keywords.  
The <I><A HREF="../glossary/r.htm#reader">readers</A></I> <TT>peg/hole-mismatch-peg-shape</TT> and <TT>peg/hole-mismatch-hole-shape</TT> 
apply to objects of this type, as illustrated in the <TT>:report</TT> information.

<P ID="89">
The following form defines a <I><A HREF="../glossary/c.htm#condition">condition</A></I> <I><A HREF="../glossary/t.htm#type">type</A></I> named <TT>machine-error</TT>
which inherits from <A HREF="error.htm"><B>error</B></A>: 

<P ID="90">
<PRE ID="91">
(define-condition machine-error 
                  (error)
                  ((machine-name :initarg :machine-name
                                 :reader machine-error-machine-name))
  (:report (lambda (condition stream)
             (format stream "There is a problem with ~A."
                     (machine-error-machine-name condition)))))
</PRE>

<P ID="92">
Building on this definition, a new error condition can be defined which
is a subtype of <TT>machine-error</TT> for use when machines are not available: 

<P ID="93">
<PRE ID="94">
(define-condition machine-not-available-error (machine-error) ()
  (:report (lambda (condition stream)
             (format stream "The machine ~A is not available."
                     (machine-error-machine-name condition)))))
</PRE>

<P ID="95">
This defines a still more specific condition, built upon 
<TT>machine-not-available-error</TT>, which provides a slot initialization form
for <TT>machine-name</TT> but which does not provide any new slots or report
information.  It just gives the <TT>machine-name</TT> slot a default initialization:

<P ID="96">
<PRE ID="97">
(define-condition my-favorite-machine-not-available-error
                  (machine-not-available-error)
  ((machine-name :initform "mc.lcs.mit.edu")))
</PRE>

<P ID="98">
Note that since no <TT>:report</TT> clause was given, the information 
inherited from <TT>machine-not-available-error</TT> is used to
report this type of condition.

<P ID="99">
<PRE ID="100">
 (define-condition ate-too-much (error) 
     ((person :initarg :person :reader ate-too-much-person)
      (weight :initarg :weight :reader ate-too-much-weight)
      (kind-of-food :initarg :kind-of-food
                    :reader :ate-too-much-kind-of-food)))
<IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9>  ATE-TOO-MUCH
 (define-condition ate-too-much-ice-cream (ate-too-much)
   ((kind-of-food :initform 'ice-cream)
    (flavor       :initarg :flavor
                  :reader ate-too-much-ice-cream-flavor
                  :initform 'vanilla ))
   (:report (lambda (condition stream)
              (format stream "~A ate too much ~A ice-cream"
                      (ate-too-much-person condition)
                      (ate-too-much-ice-cream-flavor condition)))))
<IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9>  ATE-TOO-MUCH-ICE-CREAM
 (make-condition 'ate-too-much-ice-cream
                 :person 'fred
                 :weight 300
                 :flavor 'chocolate)
<IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9> #&lt;ATE-TOO-MUCH-ICE-CREAM 32236101&gt;
 (format t "~A" *)
<IMG SRC="../images/triangle.gif" BORDER=0 WIDTH=10 HEIGHT=9> FRED ate too much CHOCOLATE ice-cream
<IMG SRC="../images/rightarr.gif" BORDER=0 WIDTH=14 HEIGHT=9>  NIL
</PRE>

<P ID="101">
<DT><B>See Also:</B><DD>

<A HREF="make-co0.htm"><B>make-condition</B></A>, <A HREF="defclass.htm"><B>defclass</B></A>, Section <A HREF="../section/conditio.htm">9.1 Condition System Concepts</A>

<P ID="102">


<P ID="103">
<DT><B>Allegro CL Implementation Details:</B><DD>
 None.</DL>
</TD></TR></TABLE>
<HR NOSHADE>
<A HREF="../ansicl.htm" TARGET="_self"><IMG SRC="../images/a-top12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Home"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>

<A HREF="ignore-e.htm"><IMG SRC="../images/a-lft12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Previous"></A> 
<A HREF="../section/dictio15.htm" TARGET="_self"><IMG SRC="../images/a-up12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Up"></A> 
<A HREF="make-co0.htm"><IMG SRC="../images/a-rgh12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Next"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/tableofc.htm" TARGET="_self"><IMG SRC="../images/toc.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Table of Contents"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/index.htm" TARGET="_self"><IMG SRC="../images/i16.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Index"></A>
<HR NOSHADE>

<SMALL><I><B>&#169; Franz Inc. 1998-2009</b> - File last updated 7-21-2009</I></SMALL>
</FONT>

</BODY>
</HTML>
