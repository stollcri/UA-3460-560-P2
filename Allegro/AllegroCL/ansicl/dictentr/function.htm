<!doctype HTML public "-//W3O//DTD W3 HTML 3.2//EN">
<HTML>
<HEAD>

<!-- 
  Document                : function.htm
  representing node       : function  [ID:NO-338]
                 of class : DictEntry  [ID:SC-9]
  Generated by SchemaText : 1.52
  From HSDL source        : ansi cl
  At                      : 09:55:03 23.07.98

  About SchemaText        : http://www.schema.de
-->

<META NAME="GENERATOR" CONTENT="SchemaText 1.40f">
<META NAME="AUTHOR" CONTENT="Franz Inc.">
<META NAME="DATE" CONTENT="23.07.98">
<META NAME="TIME" CONTENT="09:51:09">
<META NAME="VERSION" CONTENT="520">

<TITLE>function</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFFF">

<table border="0" width="100%" cellpadding="1" cellspacing="0">
  <tr>
    <td bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3">
      <tr>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/contents.htm"><b>ToC</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/introduction.htm"><b>DocOverview</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/cgide.htm"><b>CGDoc</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/release-notes.htm"><b>RelNotes</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/index.htm"><b>Index</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/permuted-index.htm"><b>PermutedIndex</b></a></td>
      </tr>
    </table>
    </td>
    <td align="right"><b>Allegro CL</b>
    </td>
  </tr>
</table>

<A NAME="DictEntry_function_338"></A>
<FONT FACE="ARIAL,GENEVA,HELVETICA">
<A HREF="../ansicl.htm" TARGET="_self"><IMG SRC="../images/a-top12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Home"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>

<A HREF="boolean.htm"><IMG SRC="../images/a-lft12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Previous"></A> 
<A HREF="../section/dictio20.htm" TARGET="_self"><IMG SRC="../images/a-up12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Up"></A> 
<A HREF="compiled.htm"><IMG SRC="../images/a-rgh12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Next"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/tableofc.htm" TARGET="_self"><IMG SRC="../images/toc.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Table of Contents"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/index.htm" TARGET="_self"><IMG SRC="../images/i16.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Index"></A>
<HR NOSHADE>
<TABLE WIDTH="90%"><TR>
<TD WIDTH=5%>&nbsp;</TD>
<TD WIDTH=95%>
<FONT SIZE=-2>
<A HREF="../ansicl.htm"> ANSI Common Lisp</A>&nbsp;&nbsp;<IMG SRC="../images/a-rgh6b.gif" BORDER=0 WIDTH=6 HEIGHT=6>&nbsp;<A HREF="../chapter/typesand.htm">4 Types and Classes</A>&nbsp;&nbsp;<IMG SRC="../images/a-rgh6b.gif" BORDER=0 WIDTH=6 HEIGHT=6>&nbsp;<A HREF="../section/dictio20.htm">4.4 Dictionary of Types and Classes</A>

</FONT>
<P ID="2">
<TABLE BORDER=0 WIDTH="100%">
<TR>
<TD><FONT SIZE="+2">4.4.3  function</FONT></TD>
<TD ALIGN=RIGHT><FONT SIZE="+1"><I>System Class</I></FONT></TD>
</TR></TABLE>
<DL>


<P ID="3">


<P ID="4">
<DT><B>Class Precedence List:</B><DD>

<A HREF="#DictEntry_function_338"><B>function</B></A>,
<A HREF="t.htm"><B>t</B></A>

<P ID="5">
<DT><B>Description:</B><DD>

A <I><A HREF="../glossary/f.htm#function">function</A></I> is an <I><A HREF="../glossary/o.htm#object">object</A></I> that represents code 
to be executed when an appropriate number of arguments is supplied.



A <I><A HREF="../glossary/f.htm#function">function</A></I> is produced by 
 the <A HREF="#DictEntry_function_338"><B>function</B></A> <I><A HREF="../glossary/s.htm#specialform">special form</A></I>,
 the <I><A HREF="../glossary/f.htm#function">function</A></I> <A HREF="coerce.htm"><B>coerce</B></A>,



or
 the <I><A HREF="../glossary/f.htm#function">function</A></I> <A HREF="compile.htm"><B>compile</B></A>.
A <I><A HREF="../glossary/f.htm#function">function</A></I> can be directly invoked by using it as the first argument to
<A HREF="funcall.htm"><B>funcall</B></A>, <A HREF="apply.htm"><B>apply</B></A>, or <A HREF="multipl4.htm"><B>multiple-value-call</B></A>.

<P ID="6">
<DT><B>Compound Type Specifier Kind:</B><DD>

Specializing.

<P ID="7">
<DT><B>Compound Type Specifier Syntax:</B><DD>


<TT>(function <TT>[</TT>arg-typespec [value-typespec]<TT>]</TT>)</TT>

<P ID="8">

arg-typespec::= <cl_lparen>{<I>typespec</I>}*            <BR>
		      &nbsp;<TT>[</TT><TT>&amp;optional</TT> {<I>typespec</I>}*<TT>]</TT> <BR>
                      &nbsp;<TT>[</TT><TT>&amp;rest</TT> <I>typespec</I><TT>]</TT>    <BR>
                      &nbsp;<TT>[</TT><TT>&amp;key</TT> {(keyword typespec)}*<TT>]</TT><cl_rparen><P ID="9">

<P ID="10">
<DT><B>Compound Type Specifier Arguments:</B><DD>

<I>typespec</I> - a <I><A HREF="../glossary/t.htm#typespecifier">type specifier</A></I>.

<P ID="11">
<I>value-typespec</I> - a <I><A HREF="../glossary/t.htm#typespecifier">type specifier</A></I>.

<P ID="12">
<DT><B>Compound Type Specifier Description:</B><DD>


<P ID="13">
The list form of the <A HREF="#DictEntry_function_338"><B>function</B></A> <I>type-specifier</I>
can be used only for declaration and not for discrimination.
Every element of this <I><A HREF="../glossary/t.htm#type">type</A></I> is


a <I><A HREF="../glossary/f.htm#function">function</A></I> that accepts arguments of the
types   
specified by the  <I>argj-types</I> and returns values that are
members of the <I><A HREF="../glossary/t.htm#type">types</A></I> specified by <I>value-type</I>. The
<A HREF="../subsubse/specifi1.htm"><B>&amp;optional</B></A>, <A HREF="../subsubse/aspecifi.htm"><B>&amp;rest</B></A>, <A HREF="../subsubse/specifi0.htm"><B>&amp;key</B></A>, 

and <A HREF="../subsubsu/suppress.htm"><B>&amp;allow-other-keys</B></A> 

markers can appear in the list of argument types. 

The <I><A HREF="../glossary/t.htm#typespecifier">type specifier</A></I> provided
with <A HREF="../subsubse/aspecifi.htm"><B>&amp;rest</B></A> is the <I><A HREF="../glossary/t.htm#type">type</A></I> 
of each actual argument, not the <I><A HREF="../glossary/t.htm#type">type</A></I> of the
corresponding variable.


<P ID="14">

The <A HREF="../subsubse/specifi0.htm"><B>&amp;key</B></A> parameters 
should be supplied as lists of the form <TT>(<I>keyword</I> <I>type</I>)</TT>.  
The <I>keyword</I> must be a valid keyword-name symbol
as must be supplied in the actual arguments of a
call.

This is usually a <I><A HREF="../glossary/s.htm#symbol">symbol</A></I> in the <A HREF="keyword.htm"><TT>keyword</TT></A> <I><A HREF="../glossary/p.htm#package">package</A></I> but can be any <I><A HREF="../glossary/s.htm#symbol">symbol</A></I>.


When <A HREF="../subsubse/specifi0.htm"><B>&amp;key</B></A> is given in a
<A HREF="#DictEntry_function_338"><B>function</B></A> <I><A HREF="../glossary/t.htm#typespecifier">type specifier</A></I> <I><A HREF="../glossary/l.htm#lambdalist">lambda list</A></I>,
the <I><A HREF="../glossary/k.htm#keywordparameter">keyword parameters</A></I> given
are exhaustive unless <A HREF="../subsubsu/suppress.htm"><B>&amp;allow-other-keys</B></A> is also present. 
<A HREF="../subsubsu/suppress.htm"><B>&amp;allow-other-keys</B></A> is an indication 
that other keyword arguments might actually be
supplied and, if supplied, can be used. 
For example,
the <I><A HREF="../glossary/t.htm#type">type</A></I> of the <I><A HREF="../glossary/f.htm#function">function</A></I> <A HREF="make-lis.htm"><B>make-list</B></A> could be declared as follows:

<P ID="15">
<PRE ID="16">
 (function ((integer 0) &key (:initial-element t)) list)
</PRE>


<P ID="17">
The <I>value-type</I> can be a <A HREF="values.htm"><B>values</B></A> 
<I><A HREF="../glossary/t.htm#typespecifier">type specifier</A></I> in order to indicate the
<I><A HREF="../glossary/t.htm#type">types</A></I> of <I><A HREF="../glossary/m.htm#multiplevalues">multiple values</A></I>.

<P ID="18">


<P ID="19">
Consider a declaration of the following form:

<P ID="20">
<PRE ID="21">
 (ftype (function (arg0-type arg1-type ...) val-type) f))
</PRE>

<P ID="22">
Any <I><A HREF="../glossary/f.htm#form">form</A></I>
<TT>(f arg0 arg1 ...)</TT>
within the scope of
that declaration is equivalent to the following:

<P ID="23">
<PRE ID="24">
 (the val-type (f (the arg0-type arg0) (the arg1-type arg1) ...))
</PRE>

<P ID="25">
That is, the consequences are undefined if any of the arguments are
not of the specified <I><A HREF="../glossary/t.htm#type">types</A></I> or the result is not of the
specified <I><A HREF="../glossary/t.htm#type">type</A></I>. In particular, if any argument is not of the
correct <I><A HREF="../glossary/t.htm#type">type</A></I>, the result is not guaranteed to be of the
specified <I><A HREF="../glossary/t.htm#type">type</A></I>.

<P ID="26">
Thus, an <A HREF="ftype.htm"><B>ftype</B></A> declaration for a <I><A HREF="../glossary/f.htm#function">function</A></I>
describes <I><A HREF="../glossary/c.htm#call">calls</A></I> to the <I><A HREF="../glossary/f.htm#function">function</A></I>, not the actual definition
of the <I><A HREF="../glossary/f.htm#function">function</A></I>.

<P ID="27">
Consider a declaration of the following form:

<P ID="28">
<PRE ID="29">
 (type (function (arg0-type arg1-type ...) val-type) fn-valued-variable)
</PRE>

<P ID="30">
This declaration has the interpretation that, within the scope of the
declaration, the consequences are unspecified if the value of <TT>
fn-valued-variable</TT> is called with arguments not of the specified
<I><A HREF="../glossary/t.htm#type">types</A></I>; the value resulting from a valid call will be of type
<TT>val-type</TT>.

<P ID="31">
As with variable type declarations, nested declarations
imply intersections of <I><A HREF="../glossary/t.htm#type">types</A></I>, as follows:
<UL>
<LI ID="32"> 
Consider the following two
declarations of <A HREF="ftype.htm"><B>ftype</B></A>:

<P ID="33">
<PRE ID="34">
 (ftype (function (arg0-type1 arg1-type1 ...) val-type1) f))
</PRE>
and

<P ID="35">
<PRE ID="36">
 (ftype (function (arg0-type2 arg1-type2 ...) val-type2) f))
</PRE>



<P ID="37">
If both these declarations are in effect,
then within the shared scope of the declarations, calls to <TT>f</TT> can be
treated as if <TT>f</TT> were declared as follows:

<P ID="38">
<PRE ID="39">
 (ftype (function ((and arg0-type1 arg0-type2) (and arg1-type1 arg1-type2 ...) ...)
                  (and val-type1 val-type2)) 
        f))
</PRE>

<P ID="40">


It is permitted to ignore one or all of the <A HREF="ftype.htm"><B>ftype</B></A> declarations in force.

<P ID="41">
<LI ID="42"> 
If two (or more) type declarations are in effect for a variable, and
they are both <TT>function</TT> declarations, the declarations combine similarly.
</UL>

<P ID="43">


<P ID="44">


<P ID="45">
<DT><B>Allegro CL Implementation Details:</B><DD>
 None.</DL>
</TD></TR></TABLE>
<HR NOSHADE>
<A HREF="../ansicl.htm" TARGET="_self"><IMG SRC="../images/a-top12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Home"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>

<A HREF="boolean.htm"><IMG SRC="../images/a-lft12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Previous"></A> 
<A HREF="../section/dictio20.htm" TARGET="_self"><IMG SRC="../images/a-up12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Up"></A> 
<A HREF="compiled.htm"><IMG SRC="../images/a-rgh12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Next"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/tableofc.htm" TARGET="_self"><IMG SRC="../images/toc.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Table of Contents"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/index.htm" TARGET="_self"><IMG SRC="../images/i16.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Index"></A>
<HR NOSHADE>

<SMALL><I><B>&#169; Franz Inc. 1998-2009</b> - File last updated 7-21-2009</I></SMALL>
</FONT>

</BODY>
</HTML>
