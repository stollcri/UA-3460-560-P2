<!doctype HTML public "-//W3O//DTD W3 HTML 3.2//EN">
<HTML>
<HEAD>

<!-- 
  Document                : b.htm
  representing node       : B  [ID:NO-1462]
                 of class : GlossaryEntry  [ID:SC-10]
  Generated by SchemaText : 1.52
  From HSDL source        : ansi cl
  At                      : 09:51:30 23.07.98

  About SchemaText        : http://www.schema.de
-->

<META NAME="GENERATOR" CONTENT="SchemaText 1.40f">
<META NAME="AUTHOR" CONTENT="Franz Inc.">
<META NAME="DATE" CONTENT="23.07.98">
<META NAME="TIME" CONTENT="09:51:09">
<META NAME="VERSION" CONTENT="520">

<TITLE>B</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFFF">

<table border="0" width="100%" cellpadding="1" cellspacing="0">
  <tr>
    <td bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3">
      <tr>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/contents.htm"><b>ToC</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/introduction.htm"><b>DocOverview</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/cgide.htm"><b>CGDoc</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/release-notes.htm"><b>RelNotes</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/index.htm"><b>Index</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/permuted-index.htm"><b>PermutedIndex</b></a></td>
      </tr>
    </table>
    </td>
    <td align="right"><b>Allegro CL</b>
    </td>
  </tr>
</table>

<A NAME="GlossaryEntr_B_1462"></A>
<FONT FACE="ARIAL,GENEVA,HELVETICA">
<A HREF="../ansicl.htm" TARGET="_self"><IMG SRC="../images/a-top12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Home"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>

<A HREF="a.htm"><IMG SRC="../images/a-lft12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Previous"></A> 
<A HREF="../section/glossary.htm" TARGET="_self"><IMG SRC="../images/a-up12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Up"></A> 
<A HREF="c.htm"><IMG SRC="../images/a-rgh12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Next"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/tableofc.htm" TARGET="_self"><IMG SRC="../images/toc.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Table of Contents"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/index.htm" TARGET="_self"><IMG SRC="../images/i16.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Index"></A>
<HR NOSHADE>
<TABLE WIDTH="90%"><TR>
<TD WIDTH=5%>&nbsp;</TD>
<TD WIDTH=95%>
<FONT SIZE=-2>
<A HREF="../ansicl.htm"> ANSI Common Lisp</A>&nbsp;&nbsp;<IMG SRC="../images/a-rgh6b.gif" BORDER=0 WIDTH=6 HEIGHT=6>&nbsp;<A HREF="../chapter/glossary.htm">26 Glossary</A>&nbsp;&nbsp;<IMG SRC="../images/a-rgh6b.gif" BORDER=0 WIDTH=6 HEIGHT=6>&nbsp;<A HREF="../section/glossary.htm">26.1 Glossary</A>

</FONT>
<H1 ID="2">B</H1>
<DL>
<A NAME="backquote">
<DT><B>backquote:</B><DD> <I>n.</I>&nbsp;  the <I><A HREF="s.htm#standardcharacter">standard character</A></I> that is variously called
       "grave accent" 
    or "backquote" (<TT>`</TT>).
  See Figure <A HREF="../subsecti/standard.htm">2.1.3 Standard Characters</A>.

<P ID="3">
<A NAME="backslash">
<DT><B>backslash:</B><DD> <I>n.</I>&nbsp;  the <I><A HREF="s.htm#standardcharacter">standard character</A></I> that is variously called
       "reverse solidus" 
    or "backslash" (<TT>\</TT>).
  See Figure <A HREF="../subsecti/standard.htm">2.1.3 Standard Characters</A>.

<P ID="4">
<A NAME="basecharacter">
<DT><B>base character:</B><DD> <I>n.</I>&nbsp;  a <I><A HREF="c.htm#character">character</A></I>

  of <I><A HREF="t.htm#type">type</A></I> <A HREF="../dictentr/base-cha.htm"><B>base-char</B></A>.


<P ID="5">
<A NAME="basestring">
<DT><B>base string:</B><DD> <I>n.</I>&nbsp;  a <I><A HREF="s.htm#string">string</A></I> of <I><A HREF="t.htm#type">type</A></I> <A HREF="../dictentr/base-str.htm"><B>base-string</B></A>.

<P ID="6">
<A NAME="beforemethod">
<DT><B>before method:</B><DD> <I>n.</I>&nbsp;  a <I><A HREF="m.htm#method">method</A></I> having the <I><A HREF="q.htm#qualifier">qualifier</A></I> <TT>:before</TT>.

<P ID="7">
<A NAME="bidirectional">
<DT><B>bidirectional:</B><DD> <I>adj.</I>&nbsp;(of a <I><A HREF="s.htm#stream">stream</A></I>)
  being both an <I><A HREF="i.htm#input">input</A></I> <I><A HREF="s.htm#stream">stream</A></I> and an <I><A HREF="o.htm#output">output</A></I> <I><A HREF="s.htm#stream">stream</A></I>.

<P ID="8">
<A NAME="binary">
<DT><B>binary:</B><DD> <I>adj.</I>&nbsp;
  1. (of a <I><A HREF="s.htm#stream">stream</A></I>)
     being a <I><A HREF="s.htm#stream">stream</A></I> that has an <I><A HREF="e.htm#elementtype">element type</A></I> that is a <I><A HREF="s.htm#subtype">subtype</A></I> of <I><A HREF="t.htm#type">type</A></I> <A HREF="../dictentr/integer.htm"><B>integer</B></A>.
     The most fundamental operation on a <I><A HREF="#binary">binary</A></I> <I><A HREF="i.htm#input">input</A></I> <I><A HREF="s.htm#stream">stream</A></I> 
     is <A HREF="../dictentr/read-byt.htm"><B>read-byte</B></A> and on a <I><A HREF="#binary">binary</A></I> <I><A HREF="o.htm#output">output</A></I> <I><A HREF="s.htm#stream">stream</A></I> 
     is <A HREF="../dictentr/write-by.htm"><B>write-byte</B></A>.
     See <I><A HREF="c.htm#character">character</A></I>.
  2. (of a <I><A HREF="f.htm#file">file</A></I>)
     having been created by opening a <I><A HREF="#binary">binary</A></I> <I><A HREF="s.htm#stream">stream</A></I>.
     (It is <I><A HREF="i.htm#implementationdependent">implementation-dependent</A></I> whether this is an detectable aspect 
      of the <I><A HREF="f.htm#file">file</A></I>, or whether any given <I><A HREF="c.htm#character">character</A></I> <I><A HREF="f.htm#file">file</A></I> can be
      treated as a <I><A HREF="#binary">binary</A></I> <I><A HREF="f.htm#file">file</A></I>.)

<P ID="9">



<A NAME="bind">
<DT><B>bind:</B><DD> <I>v.t.</I>&nbsp;(a <I><A HREF="v.htm#variable">variable</A></I>)
  to establish a <I><A HREF="#binding">binding</A></I> for the <I><A HREF="v.htm#variable">variable</A></I>.

<P ID="10">
<A NAME="binding">
<DT><B>binding:</B><DD> <I>n.</I>&nbsp;
  an association between a <I><A HREF="n.htm#name">name</A></I> and that which the <I><A HREF="n.htm#name">name</A></I> 
  denotes.  
  A lexical binding is a lexical association between a 
            name and its value.


  When the term <I><A HREF="#binding">binding</A></I> is qualified by the name of a <I><A HREF="n.htm#namespace">namespace</A></I>,
  such as "variable" or "function," 
  it restricts the binding to the indicated namespace, as in:
  <A HREF="../dictentr/letlet.htm"><B>let</B></A> establishes variable bindings.
  or 
  <A HREF="../dictentr/letlet.htm"><B>let</B></A> establishes bindings of variables.

<P ID="11">
<A NAME="bit">
<DT><B>bit:</B><DD> <I>n.</I>&nbsp;
  an <I><A HREF="o.htm#object">object</A></I> of <I><A HREF="t.htm#type">type</A></I> <A HREF="../dictentr/bit.htm"><B>bit</B></A>; 
  that is, the <I><A HREF="i.htm#integer">integer</A></I> <TT>0</TT> or the <I><A HREF="i.htm#integer">integer</A></I> <TT>1</TT>.

<P ID="12">
<A NAME="bitarray">
<DT><B>bit array:</B><DD> <I>n.</I>&nbsp;  a specialized <I><A HREF="a.htm#array">array</A></I> that is of <I><A HREF="t.htm#type">type</A></I> <TT>(array bit)</TT>,
  and whose elements are of <I><A HREF="t.htm#type">type</A></I> <A HREF="../dictentr/bit.htm"><B>bit</B></A>.

<P ID="13">
<A NAME="bitvector">
<DT><B>bit vector:</B><DD> <I>n.</I>&nbsp;
  a specialized <I><A HREF="v.htm#vector">vector</A></I> that is of <I><A HREF="t.htm#type">type</A></I> <A HREF="../dictentr/bit-vect.htm"><B>bit-vector</B></A>,
  and whose elements are of <I><A HREF="t.htm#type">type</A></I> <A HREF="../dictentr/bit.htm"><B>bit</B></A>.

<P ID="14">
<A NAME="bitwiselogicaloperationspecifier">
<DT><B>bit-wise logical operation specifier:</B><DD> <I>n.</I>&nbsp;
  an <I><A HREF="o.htm#object">object</A></I> which names one of the sixteen possible bit-wise logical
  operations that can be performed by the <A HREF="../dictentr/boole.htm"><B>boole</B></A> function,
  and which is the <I><A HREF="v.htm#value">value</A></I> of exactly one of the
  <I><A HREF="c.htm#constantvariable">constant variables</A></I> 
  <A HREF="../dictentr/boole-1b.htm"><B>boole-clr</B></A>,     <A HREF="../dictentr/boole-1b.htm"><B>boole-set</B></A>,
  <A HREF="../dictentr/boole-1b.htm"><B>boole-1</B></A>,       <A HREF="../dictentr/boole-1b.htm"><B>boole-2</B></A>,
  <A HREF="../dictentr/boole-1b.htm"><B>boole-c1</B></A>,      <A HREF="../dictentr/boole-1b.htm"><B>boole-c2</B></A>,
  <A HREF="../dictentr/boole-1b.htm"><B>boole-and</B></A>,     <A HREF="../dictentr/boole-1b.htm"><B>boole-ior</B></A>,
  <A HREF="../dictentr/boole-1b.htm"><B>boole-xor</B></A>,     <A HREF="../dictentr/boole-1b.htm"><B>boole-eqv</B></A>,
  <A HREF="../dictentr/boole-1b.htm"><B>boole-nand</B></A>,    <A HREF="../dictentr/boole-1b.htm"><B>boole-nor</B></A>,
  <A HREF="../dictentr/boole-1b.htm"><B>boole-andc1</B></A>,   <A HREF="../dictentr/boole-1b.htm"><B>boole-andc2</B></A>,
  <A HREF="../dictentr/boole-1b.htm"><B>boole-orc1</B></A>, or <A HREF="../dictentr/boole-1b.htm"><B>boole-orc2</B></A>.

<P ID="15">
<A NAME="block">
<DT><B>block:</B><DD> <I>n.</I>&nbsp;  a named lexical <I><A HREF="e.htm#exitpoint">exit point</A></I>, 
  <I>established</I> explicitly by <A HREF="../dictentr/block.htm"><B>block</B></A>
  		  or implicitly by <I><A HREF="o.htm#operator">operators</A></I> 
		       such as <A HREF="../dictentr/loop.htm"><B>loop</B></A>, <A HREF="../dictentr/dodo.htm"><B>do</B></A> and <A HREF="../dictentr/progprog.htm"><B>prog</B></A>,
  to which control and values may be transfered by 
  using a <A HREF="../dictentr/return-f.htm"><B>return-from</B></A> <I><A HREF="f.htm#form">form</A></I> with the name of the <I><A HREF="#block">block</A></I>.

<P ID="16">
<A NAME="blocktag">
<DT><B>block tag:</B><DD> <I>n.</I>&nbsp;
  the <I><A HREF="s.htm#symbol">symbol</A></I> that, within the <I><A HREF="l.htm#lexicalscope">lexical scope</A></I> 
  of a <A HREF="../dictentr/block.htm"><B>block</B></A> <I><A HREF="f.htm#form">form</A></I>, names the <I><A HREF="#block">block</A></I>
  <I>established</I> by that <A HREF="../dictentr/block.htm"><B>block</B></A> <I><A HREF="f.htm#form">form</A></I>.
  See <A HREF="../dictentr/return.htm"><B>return</B></A> or <A HREF="../dictentr/return-f.htm"><B>return-from</B></A>.

<P ID="17">
<A NAME="boalambdalist">
<DT><B>boa lambda list:</B><DD> <I>n.</I>&nbsp;  a <I><A HREF="l.htm#lambdalist">lambda list</A></I> that is syntactically like an <I><A HREF="o.htm#ordinarylambdalist">ordinary lambda list</A></I>,
  but that is processed in "<B>b</B>y <B>o</B>rder of <B>a</B>rgument" style.
  See Section <A HREF="../subsecti/boalambd.htm">3.4.6 Boa Lambda Lists</A>.

<P ID="18">
<A NAME="bodyparameter">
<DT><B>body parameter:</B><DD> <I>n.</I>&nbsp;  a <I><A HREF="p.htm#parameter">parameter</A></I> available in certain <I><A HREF="l.htm#lambdalist">lambda lists</A></I>
  which from the point of view of <I><A HREF="c.htm#conformingprogram">conforming programs</A></I>
  is like a <I><A HREF="r.htm#restparameter">rest parameter</A></I> in every way except that it is introduced
  by <A HREF="../subsecti/macrolam.htm"><B>&amp;body</B></A> instead of <A HREF="../subsubse/aspecifi.htm"><B>&amp;rest</B></A>.  (<I><A HREF="i.htm#implementation">Implementations</A></I> are 
  permitted to provide extensions which distinguish <I><A HREF="#bodyparameter">body parameters</A></I>
  and <I><A HREF="r.htm#restparameter">rest parameters</A></I> - <I>e.g.</I>,  the <I><A HREF="f.htm#form">forms</A></I> for <I><A HREF="o.htm#operator">operators</A></I>
  which were defined using a <I><A HREF="#bodyparameter">body parameter</A></I> might be pretty printed
  slightly differently than <I><A HREF="f.htm#form">forms</A></I> for <I><A HREF="o.htm#operator">operators</A></I> which were 
  defined using <I><A HREF="r.htm#restparameter">rest parameters</A></I>.)

<P ID="19">
<A NAME="boolean">
<DT><B>boolean:</B><DD> <I>n.</I>&nbsp;
  an <I><A HREF="o.htm#object">object</A></I> of <I><A HREF="t.htm#type">type</A></I> <A HREF="../dictentr/boolean.htm"><B>boolean</B></A>;
  that is, one of the following <I><A HREF="o.htm#object">objects</A></I>: 
       the symbol&nbsp;<A HREF="../dictentr/t.htm"><B>t</B></A>&nbsp;  (representing <I><A HREF="t.htm#true">true</A></I>),
    or the symbol&nbsp;<A HREF="../dictentr/nil.htm"><B>nil</B></A>&nbsp;(representing <I><A HREF="f.htm#false">false</A></I>).
  See <I><A HREF="g.htm#generalizedboolean">generalized boolean</A></I>.

<P ID="20">
<A NAME="booleanequivalent">
<DT><B>boolean equivalent:</B><DD> <I>n.</I>&nbsp;(of an <I><A HREF="o.htm#object">object</A></I> <I>O<SUB>1</SUB></I>)
  any <I><A HREF="o.htm#object">object</A></I> <I>O<SUB>2</SUB></I> that has the same truth value as <I>O<SUB>1</SUB></I>
  when both <I>O<SUB>1</SUB></I> and <I>O<SUB>2</SUB></I> are viewed as <I><A HREF="g.htm#generalizedboolean">generalized booleans</A></I>.

<P ID="21">
<A NAME="bound">
<DT><B>bound:</B><DD> <I>adj.</I>, <I>v.t.</I>&nbsp;
  1. <I>adj.</I>&nbsp;having an associated denotation in a <I><A HREF="#binding">binding</A></I>.
     The variables named by a <A HREF="../dictentr/letlet.htm"><B>let</B></A> are bound within
               its body.
     See <I><A HREF="u.htm#unbound">unbound</A></I>.
  2. <I>adj.</I>&nbsp;having a local <I><A HREF="#binding">binding</A></I> which 
     <I><A HREF="s.htm#shadow">shadows</A></I><SUB>2</SUB> another. 
     The variable <A HREF="../dictentr/print-es.htm"><B>*print-escape*</B></A> is bound while in
               the <A HREF="../dictentr/writepri.htm"><B>princ</B></A> function.
  3. <I>v.t.</I>&nbsp;the past tense of <I><A HREF="#bind">bind</A></I>.

<P ID="22">
<A NAME="bounddeclaration">
<DT><B>bound declaration:</B><DD> <I>n.</I>&nbsp;
  a <I><A HREF="d.htm#declaration">declaration</A></I> that refers to or is associated with a <I><A HREF="v.htm#variable">variable</A></I>
  or <I><A HREF="f.htm#function">function</A></I> and that appears within the <I><A HREF="s.htm#specialform">special form</A></I> 
  that <I>establishes</I> the <I><A HREF="v.htm#variable">variable</A></I> or <I><A HREF="f.htm#function">function</A></I>,
  but before the body of that <I><A HREF="s.htm#specialform">special form</A></I>
  (specifically, at the head of that <I><A HREF="f.htm#form">form</A></I>'s body).


  (If a <I><A HREF="#bounddeclaration">bound declaration</A></I> refers to a <I><A HREF="f.htm#function">function</A></I> <I><A HREF="#binding">binding</A></I> or
   a <I><A HREF="l.htm#lexicalvariable">lexical variable</A></I> <I><A HREF="#binding">binding</A></I>, the <I><A HREF="s.htm#scope">scope</A></I> of
   the <I><A HREF="d.htm#declaration">declaration</A></I> is exactly the <I><A HREF="s.htm#scope">scope</A></I> of that
   <I><A HREF="#binding">binding</A></I>.  If the <I><A HREF="d.htm#declaration">declaration</A></I> refers to a
   <I><A HREF="d.htm#dynamicvariable">dynamic variable</A></I> <I><A HREF="#binding">binding</A></I>, the <I><A HREF="s.htm#scope">scope</A></I> of
   the <I><A HREF="d.htm#declaration">declaration</A></I> is what the <I><A HREF="s.htm#scope">scope</A></I> of the 
   <I><A HREF="#binding">binding</A></I> would have been if it were lexical rather than dynamic.)

<P ID="23">
<A NAME="bounded">
<DT><B>bounded:</B><DD> <I>adj.</I>&nbsp;(of a <I><A HREF="s.htm#sequence">sequence</A></I> <I>S</I>,
			      by an ordered pair
			          of <I>bounding indices</I> <I>i<SUB>start</SUB></I> and <I>i<SUB>end</SUB></I>)
  restricted to a subrange of the <I><A HREF="e.htm#element">elements</A></I> of <I>S</I> that includes each <I><A HREF="e.htm#element">element</A></I>
  beginning with (and including) the one indexed by <I>i<SUB>start</SUB></I> and
  continuing up to (but not including) the one indexed by <I>i<SUB>end</SUB></I>.

<P ID="24">
<A NAME="boundingindex">
<DT><B>bounding index:</B><DD> <I>n.</I>&nbsp;(of a <I><A HREF="s.htm#sequence">sequence</A></I> with <I><A HREF="l.htm#length">length</A></I> <I>n</I>)
  either of a conceptual pair of <I><A HREF="i.htm#integer">integers</A></I>, <I>i<SUB>start</SUB></I> and <I>i<SUB>end</SUB></I>,
  respectively called the "lower bounding index" and "upper bounding index",
  such that <I>0  &lt;=  i<SUB>start</SUB>  &lt;=  i<SUB>end</SUB>  &lt;=  n</I>, and which therefore delimit
  a subrange of the <I><A HREF="s.htm#sequence">sequence</A></I> <I><A HREF="#bounded">bounded</A></I> by <I>i<SUB>start</SUB></I> and <I>i<SUB>end</SUB></I>.

<P ID="25">
<A NAME="boundingindexdesignator">
<DT><B>bounding index designator:</B><DD> (for a <I><A HREF="s.htm#sequence">sequence</A></I>)
  one of two <I><A HREF="o.htm#object">objects</A></I> that, taken together as an ordered pair, 
  behave as a <I><A HREF="d.htm#designator">designator</A></I> for <I>bounding indices</I> of the <I><A HREF="s.htm#sequence">sequence</A></I>; 
  that is, they denote <I>bounding indices</I> of the <I><A HREF="s.htm#sequence">sequence</A></I>,
  and are either:
      an <I><A HREF="i.htm#integer">integer</A></I> (denoting itself) and <A HREF="../dictentr/nil.htm"><B>nil</B></A>&nbsp;
       (denoting the <I><A HREF="l.htm#length">length</A></I> of the <I><A HREF="s.htm#sequence">sequence</A></I>),
   or two <I><A HREF="i.htm#integer">integers</A></I> (each denoting themselves).

<P ID="26">
<A NAME="breakloop">
<DT><B>break loop:</B><DD> <I>n.</I>&nbsp;  A variant of the normal <I>Lisp read-eval-print loop</I> that is recursively
  entered, usually because the ongoing <I><A HREF="e.htm#evaluation">evaluation</A></I> of some other <I><A HREF="f.htm#form">form</A></I>
  has been suspended for the purpose of debugging.  Often, a <I><A HREF="#breakloop">break loop</A></I>
  provides the ability to exit in such a way as to continue the suspended computation.
  See the <I><A HREF="f.htm#function">function</A></I> <A HREF="../dictentr/break.htm"><B>break</B></A>.

<P ID="27">
<A NAME="broadcaststream">
<DT><B>broadcast stream:</B><DD> <I>n.</I>&nbsp;  an <I><A HREF="o.htm#output">output</A></I> <I><A HREF="s.htm#stream">stream</A></I> of <I><A HREF="t.htm#type">type</A></I> <A HREF="../dictentr/broadcas.htm"><B>broadcast-stream</B></A>.

<P ID="28">
<A NAME="builtinclass">
<DT><B>built-in class:</B><DD> <I>n.</I>&nbsp;
  a <I><A HREF="c.htm#class">class</A></I> that is a <I><A HREF="g.htm#generalizedinstance">generalized instance</A></I> of <I><A HREF="c.htm#class">class</A></I> <A HREF="../dictentr/built-in.htm"><B>built-in-class</B></A>.

<P ID="29">

<A NAME="builtintype">
<DT><B>built-in type:</B><DD> <I>n.</I>&nbsp;   one of the <I><A HREF="t.htm#type">types</A></I> in Figure <A HREF="../subsecti/typespec.htm">4.2.3 Type Specifiers</A>.

<P ID="30">
<A NAME="byte">
<DT><B>byte:</B><DD> <I>n.</I>&nbsp;  1. adjacent bits within an <I><A HREF="i.htm#integer">integer</A></I>.
     (The specific number of bits can vary from point to point in the program;
      see the <I><A HREF="f.htm#function">function</A></I> <A HREF="../dictentr/bytebyte.htm"><B>byte</B></A>.)
  2. an integer in a specified range.


     (The specific range can vary from point to point in the program;
      see the <I><A HREF="f.htm#function">functions</A></I> <A HREF="../dictentr/open.htm"><B>open</B></A> and <A HREF="../dictentr/write-by.htm"><B>write-byte</B></A>.)

<P ID="31">
<A NAME="bytespecifier">
<DT><B>byte specifier:</B><DD> <I>n.</I>&nbsp;  An <I><A HREF="o.htm#object">object</A></I> of <I><A HREF="i.htm#implementationdependent">implementation-dependent</A></I> nature 
  that is returned by the <I><A HREF="f.htm#function">function</A></I> <A HREF="../dictentr/bytebyte.htm"><B>byte</B></A> and
  that specifies the range of bits in an <I><A HREF="i.htm#integer">integer</A></I> to be used
  as a <I><A HREF="#byte">byte</A></I> by <I><A HREF="f.htm#function">functions</A></I> such as <A HREF="../dictentr/ldb.htm"><B>ldb</B></A>.

<P ID="32"></DL>
</TD></TR></TABLE>
<HR NOSHADE>
<A HREF="../ansicl.htm" TARGET="_self"><IMG SRC="../images/a-top12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Home"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>

<A HREF="a.htm"><IMG SRC="../images/a-lft12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Previous"></A> 
<A HREF="../section/glossary.htm" TARGET="_self"><IMG SRC="../images/a-up12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Up"></A> 
<A HREF="c.htm"><IMG SRC="../images/a-rgh12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Next"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/tableofc.htm" TARGET="_self"><IMG SRC="../images/toc.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Table of Contents"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/index.htm" TARGET="_self"><IMG SRC="../images/i16.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Index"></A>
<HR NOSHADE>

<SMALL><I><B>&#169; Franz Inc. 1998-2009</b> - File last updated 7-21-2009</I></SMALL>
</FONT>

</BODY>
</HTML>
