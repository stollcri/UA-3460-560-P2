<!doctype HTML public "-//W3O//DTD W3 HTML 3.2//EN">
<HTML>
<HEAD>

<!-- 
  Document                : f.htm
  representing node       : F  [ID:NO-1466]
                 of class : GlossaryEntry  [ID:SC-10]
  Generated by SchemaText : 1.52
  From HSDL source        : ansi cl
  At                      : 09:51:24 23.07.98

  About SchemaText        : http://www.schema.de
-->

<META NAME="GENERATOR" CONTENT="SchemaText 1.40f">
<META NAME="AUTHOR" CONTENT="Franz Inc.">
<META NAME="DATE" CONTENT="23.07.98">
<META NAME="TIME" CONTENT="09:51:09">
<META NAME="VERSION" CONTENT="520">

<TITLE>F</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFFF">

<table border="0" width="100%" cellpadding="1" cellspacing="0">
  <tr>
    <td bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3">
      <tr>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/contents.htm"><b>ToC</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/introduction.htm"><b>DocOverview</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/cgide.htm"><b>CGDoc</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/release-notes.htm"><b>RelNotes</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/index.htm"><b>Index</b></a></td>
        <td align="left" bgcolor="#00FFFF"><a href="../../doc/permuted-index.htm"><b>PermutedIndex</b></a></td>
      </tr>
    </table>
    </td>
    <td align="right"><b>Allegro CL</b>
    </td>
  </tr>
</table>

<A NAME="GlossaryEntr_F_1466"></A>
<FONT FACE="ARIAL,GENEVA,HELVETICA">
<A HREF="../ansicl.htm" TARGET="_self"><IMG SRC="../images/a-top12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Home"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>

<A HREF="e.htm"><IMG SRC="../images/a-lft12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Previous"></A> 
<A HREF="../section/glossary.htm" TARGET="_self"><IMG SRC="../images/a-up12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Up"></A> 
<A HREF="g.htm"><IMG SRC="../images/a-rgh12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Next"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/tableofc.htm" TARGET="_self"><IMG SRC="../images/toc.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Table of Contents"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/index.htm" TARGET="_self"><IMG SRC="../images/i16.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Index"></A>
<HR NOSHADE>
<TABLE WIDTH="90%"><TR>
<TD WIDTH=5%>&nbsp;</TD>
<TD WIDTH=95%>
<FONT SIZE=-2>
<A HREF="../ansicl.htm"> ANSI Common Lisp</A>&nbsp;&nbsp;<IMG SRC="../images/a-rgh6b.gif" BORDER=0 WIDTH=6 HEIGHT=6>&nbsp;<A HREF="../chapter/glossary.htm">26 Glossary</A>&nbsp;&nbsp;<IMG SRC="../images/a-rgh6b.gif" BORDER=0 WIDTH=6 HEIGHT=6>&nbsp;<A HREF="../section/glossary.htm">26.1 Glossary</A>

</FONT>
<H1 ID="2">F</H1>
<DL>
<A NAME="false">
<DT><B>false:</B><DD> <I>n.</I>&nbsp;  the <I><A HREF="s.htm#symbol">symbol</A></I> <A HREF="../dictentr/nil.htm"><B>nil</B></A>,
  used to represent the failure of a <I><A HREF="p.htm#predicate">predicate</A></I> test.

<P ID="3">
<A NAME="fbound">
<DT><B>fbound:</B><DD> <FONT SIZE="+1">[ <B>'ef<SUB>'</SUB>ba&uuml;nd</B> ]</FONT> <I>adj.</I>&nbsp;
							 (of a <I><A HREF="#functionname">function name</A></I>)
  <I><A HREF="b.htm#bound">bound</A></I> in the <I><A HREF="#function">function</A></I> <I><A HREF="n.htm#namespace">namespace</A></I>.
  (The <I><A HREF="n.htm#name">names</A></I> of <I><A HREF="m.htm#macro">macros</A></I> and <I><A HREF="s.htm#specialoperator">special operators</A></I> are <I><A HREF="#fbound">fbound</A></I>,
   but the nature and <I><A HREF="t.htm#type">type</A></I> of the <I><A HREF="o.htm#object">object</A></I> which is their <I><A HREF="v.htm#value">value</A></I>
   is <I><A HREF="i.htm#implementationdependent">implementation-dependent</A></I>.

   Further, defining a <I><A HREF="s.htm#setfexpander">setf expander</A></I> <I>F</I> does not cause the <I><A HREF="s.htm#setffunction">setf function</A></I>
   <TT>(setf <I>F</I>)</TT> to become defined; as such, if there is a such a definition
   of a <I><A HREF="s.htm#setfexpander">setf expander</A></I> <I>F</I>, the <I><A HREF="#function">function</A></I> <TT>(setf <I>F</I>)</TT>
   can be <I><A HREF="#fbound">fbound</A></I> if and only if, by design or coincidence, a
   function binding for <TT>(setf <I>F</I>)</TT> has been independently established.)

  See the <I><A HREF="#function">functions</A></I> <A HREF="../dictentr/fboundp.htm"><B>fboundp</B></A> and <A HREF="../dictentr/symbol-f.htm"><B>symbol-function</B></A>.

<P ID="4">
<A NAME="feature">
<DT><B>feature:</B><DD> <I>n.</I>&nbsp;  1. an aspect or attribute 
        of <I>Common Lisp</I>, 
        of the <I><A HREF="i.htm#implementation">implementation</A></I>,
     or of the <I><A HREF="e.htm#environment">environment</A></I>.
  2. a <I><A HREF="s.htm#symbol">symbol</A></I> that names a <I><A HREF="#feature">feature</A></I><SUB>1</SUB>.
  See Section <A HREF="../subsecti/features.htm">24.1.2 Features</A>.
  The <TT>:ansi-cl</TT> feature is present in all conforming implementations.

<P ID="5">
<A NAME="featureexpression">
<DT><B>feature expression:</B><DD> <I>n.</I>&nbsp;  A boolean combination of <I><A HREF="#feature">features</A></I> used by the <TT>#+</TT> and <TT>#-</TT> 
  <I><A HREF="r.htm#readermacro">reader macros</A></I> in order to direct conditional <I>reading</I> of
  <I><A HREF="e.htm#expression">expressions</A></I> by the <I>Lisp reader</I>.
  See Section <A HREF="../subsubse/featuree.htm">24.1.2.1 Feature Expressions</A>.

<P ID="6">
<A NAME="featureslist">
<DT><B>features list:</B><DD> <I>n.</I>&nbsp;  the <I><A HREF="l.htm#list">list</A></I> that is the <I><A HREF="v.htm#value">value</A></I> of <A HREF="../dictentr/features.htm"><B>*features*</B></A>.

<P ID="7">
<A NAME="file">
<DT><B>file:</B><DD> <I>n.</I>&nbsp;  a named entry in a <I><A HREF="#filesystem">file system</A></I>,
  having an <I><A HREF="i.htm#implementationdefined">implementation-defined</A></I> nature.

<P ID="8">
<A NAME="filecompiler">
<DT><B>file compiler:</B><DD> <I>n.</I>&nbsp;  any <I><A HREF="c.htm#compiler">compiler</A></I> which <I><A HREF="c.htm#compile">compiles</A></I> <I><A HREF="s.htm#sourcecode">source code</A></I> contained in a <I><A HREF="#file">file</A></I>,
  producing a <I><A HREF="c.htm#compiledfile">compiled file</A></I> as output.  The <A HREF="../dictentr/compile-.htm"><B>compile-file</B></A> 
  function is the only interface to such a <I><A HREF="c.htm#compiler">compiler</A></I> provided by <I>Common Lisp</I>,
  but there might be other, <I><A HREF="i.htm#implementationdefined">implementation-defined</A></I> mechanisms for 
  invoking the <I><A HREF="#filecompiler">file compiler</A></I>.

<P ID="9">
<A NAME="fileposition">
<DT><B>file position:</B><DD> <I>n.</I>&nbsp;(in a <I><A HREF="s.htm#stream">stream</A></I>)
  a non-negative <I><A HREF="i.htm#integer">integer</A></I> that represents a position in the <I><A HREF="s.htm#stream">stream</A></I>.
  Not all <I><A HREF="s.htm#stream">streams</A></I> are able to represent the notion of <I><A HREF="#fileposition">file position</A></I>;
  in the description of any <I><A HREF="o.htm#operator">operator</A></I> which manipulates <I><A HREF="#fileposition">file positions</A></I>, 
  the behavior for <I><A HREF="s.htm#stream">streams</A></I> that don't have this notion must be explicitly stated.
  For <I><A HREF="b.htm#binary">binary</A></I> <I><A HREF="s.htm#stream">streams</A></I>, the <I><A HREF="#fileposition">file position</A></I> represents the number 
  of preceding <I><A HREF="b.htm#byte">bytes</A></I> in the <I><A HREF="s.htm#stream">stream</A></I>.
  For <I><A HREF="c.htm#character">character</A></I> <I><A HREF="s.htm#stream">streams</A></I>, the constraint is more relaxed: 
  <I><A HREF="#fileposition">file positions</A></I> must increase monotonically, the amount of the increase
  between <I><A HREF="#fileposition">file positions</A></I> corresponding to any two successive characters
  in the <I><A HREF="s.htm#stream">stream</A></I> is <I><A HREF="i.htm#implementationdependent">implementation-dependent</A></I>.

<P ID="10">
<A NAME="filepositiondesignator">
<DT><B>file position designator:</B><DD> <I>n.</I>&nbsp;(in a <I><A HREF="s.htm#stream">stream</A></I>)
  a <I><A HREF="d.htm#designator">designator</A></I> for a <I><A HREF="#fileposition">file position</A></I> in that <I><A HREF="s.htm#stream">stream</A></I>; that is,
      the symbol <TT>:start</TT>  
        (denoting <TT>0</TT>, the first <I><A HREF="#fileposition">file position</A></I> in that <I><A HREF="s.htm#stream">stream</A></I>),
      the symbol <TT>:end</TT>
	(denoting the last <I><A HREF="#fileposition">file position</A></I> in that <I><A HREF="s.htm#stream">stream</A></I>;
	 <I>i.e.</I>,  the position following the last <I><A HREF="e.htm#element">element</A></I> of the <I><A HREF="s.htm#stream">stream</A></I>),
   or a <I><A HREF="#fileposition">file position</A></I> (denoting itself).

<P ID="11">
<A NAME="filestream">
<DT><B>file stream:</B><DD> <I>n.</I>&nbsp;  an <I><A HREF="o.htm#object">object</A></I> of <I><A HREF="t.htm#type">type</A></I> <A HREF="../dictentr/file-str.htm"><B>file-stream</B></A>.

<P ID="12">
<A NAME="filesystem">
<DT><B>file system:</B><DD> <I>n.</I>&nbsp;  a facility which permits aggregations of data to be stored in named
  <I><A HREF="#file">files</A></I> on some medium that is external to the <I>Lisp image</I>
  and that therefore persists from <I><A HREF="s.htm#session">session</A></I> to <I><A HREF="s.htm#session">session</A></I>.

<P ID="13">

<A NAME="filename">
<DT><B>filename:</B><DD> <I>n.</I>&nbsp;
  a handle, not necessarily ever directly represented as an <I><A HREF="o.htm#object">object</A></I>,
  that can be used to refer to a <I><A HREF="#file">file</A></I> in a <I><A HREF="#filesystem">file system</A></I>.
  <I><A HREF="p.htm#pathname">Pathnames</A></I> and <I><A HREF="n.htm#namestring">namestrings</A></I> are two kinds of <I><A HREF="o.htm#object">objects</A></I> 
  that substitute for <I><A HREF="#filename">filenames</A></I> in <I>Common Lisp</I>.  


<P ID="14">
<A NAME="fillpointer">
<DT><B>fill pointer:</B><DD> <I>n.</I>&nbsp;(of a <I><A HREF="v.htm#vector">vector</A></I>)
  an <I><A HREF="i.htm#integer">integer</A></I> associated with a <I><A HREF="v.htm#vector">vector</A></I> that represents the
  index above which no <I><A HREF="e.htm#element">elements</A></I> are <I><A HREF="a.htm#active">active</A></I>.
  (A <I><A HREF="#fillpointer">fill pointer</A></I> is a non-negative <I><A HREF="i.htm#integer">integer</A></I> no
   larger than the total number of <I><A HREF="e.htm#element">elements</A></I> in the <I><A HREF="v.htm#vector">vector</A></I>.
   Not all <I><A HREF="v.htm#vector">vectors</A></I> have <I><A HREF="#fillpointer">fill pointers</A></I>.)

<P ID="15">
<A NAME="finite">
<DT><B>finite:</B><DD> <I>adj.</I>&nbsp;(of a <I><A HREF="t.htm#type">type</A></I>)
  having a finite number of <I><A HREF="e.htm#element">elements</A></I>.
  The type specifier <TT>(integer 0 5)</TT> denotes a finite type,
	    but the type specifiers <A HREF="../dictentr/integer.htm"><B>integer</B></A> and <TT>(integer 0)</TT> do not.

<P ID="16">
<A NAME="fixnum">
<DT><B>fixnum:</B><DD> <I>n.</I>&nbsp;
  an <I><A HREF="i.htm#integer">integer</A></I> of <I><A HREF="t.htm#type">type</A></I> <A HREF="../dictentr/fixnum.htm"><B>fixnum</B></A>.

<P ID="17">
<A NAME="float">
<DT><B>float:</B><DD> <I>n.</I>&nbsp;  an <I><A HREF="o.htm#object">object</A></I> of <I><A HREF="t.htm#type">type</A></I> <A HREF="../dictentr/float.htm"><B>float</B></A>.

<P ID="18">

<A NAME="forvalue">
<DT><B>for-value:</B><DD> <I>adj.</I>&nbsp;(of a <I><A HREF="r.htm#reference">reference</A></I> to a <I><A HREF="b.htm#binding">binding</A></I>)
  being a <I><A HREF="r.htm#reference">reference</A></I> that <I><A HREF="r.htm#read">reads</A></I><SUB>1</SUB>
  the <I><A HREF="v.htm#value">value</A></I> of the <I><A HREF="b.htm#binding">binding</A></I>.


<P ID="19">
<A NAME="form">
<DT><B>form:</B><DD> <I>n.</I>&nbsp;  1. any <I><A HREF="o.htm#object">object</A></I> meant to be <I>evaluated</I>.
  2.    a <I><A HREF="s.htm#symbol">symbol</A></I>,
        a <I><A HREF="c.htm#compoundform">compound form</A></I>,
     or a <I><A HREF="s.htm#selfevaluatingobject">self-evaluating object</A></I>.
  3. (for an <I><A HREF="o.htm#operator">operator</A></I>, as in "&lt;&lt;<I>operator</I>&gt;&gt; <I><A HREF="#form">form</A></I>")
     a <I><A HREF="c.htm#compoundform">compound form</A></I> having that <I><A HREF="o.htm#operator">operator</A></I> as its first element.
     A <A HREF="../dictentr/quote.htm"><B>quote</B></A> form is a constant form.

<P ID="20">
<A NAME="formalargument">
<DT><B>formal argument:</B><DD> <I>n.</I>&nbsp;<I>Trad.</I>&nbsp;
  a <I><A HREF="p.htm#parameter">parameter</A></I>.

<P ID="21">
<A NAME="formalparameter">
<DT><B>formal parameter:</B><DD> <I>n.</I>&nbsp;<I>Trad.</I>&nbsp;
  a <I><A HREF="p.htm#parameter">parameter</A></I>.

<P ID="22">

<A NAME="format">
<DT><B>format:</B><DD> <I>v.t.</I>&nbsp;(a <I><A HREF="#formatcontrol">format control</A></I> and <I><A HREF="#formatargument">format arguments</A></I>)

  to perform output as if by <A HREF="../dictentr/format.htm"><B>format</B></A>,
  using the <I><A HREF="#formatstring">format string</A></I> and <I><A HREF="#formatargument">format arguments</A></I>.


<P ID="23">

<A NAME="formatargument">
<DT><B>format argument:</B><DD> <I>n.</I>&nbsp;  an <I><A HREF="o.htm#object">object</A></I> which is used as data by functions such as <A HREF="../dictentr/format.htm"><B>format</B></A>
  which interpret <I><A HREF="#formatcontrol">format controls</A></I>.


<P ID="24">
<A NAME="formatcontrol">
<DT><B>format control:</B><DD> <I>n.</I>&nbsp;     a <I><A HREF="#formatstring">format string</A></I>,
  or a <I><A HREF="#function">function</A></I> that obeys the <I><A HREF="a.htm#argument">argument</A></I> conventions
     for a <I><A HREF="#function">function</A></I> returned by the <A HREF="../dictentr/formatte.htm"><B>formatter</B></A> <I><A HREF="m.htm#macro">macro</A></I>.
  See Section <A HREF="../subsubse/compilin.htm">22.2.1.3 Compiling Format Strings</A>.

<P ID="25">
<A NAME="formatdirective">
<DT><B>format directive:</B><DD> <I>n.</I>&nbsp;  1. a sequence of <I><A HREF="c.htm#character">characters</A></I> in a <I><A HREF="#formatstring">format string</A></I>
     which is introduced by a <I><A HREF="t.htm#tilde">tilde</A></I>, and which is specially 
     interpreted by <I><A HREF="c.htm#code">code</A></I> which processes <I><A HREF="#formatstring">format strings</A></I>
     to mean that some special operation should be performed, possibly
     involving data supplied by the <I><A HREF="#formatargument">format arguments</A></I> that 
     accompanied the <I><A HREF="#formatstring">format string</A></I>.  See the <I><A HREF="#function">function</A></I> <A HREF="../dictentr/format.htm"><B>format</B></A>.
     In <TT>"~D base 10 = ~8R"</TT>, the character
     	       sequences `<TT>~D</TT>' and `<TT>~8R</TT>' are format directives.
  2. the conceptual category of all <I><A HREF="#formatdirective">format directives</A></I><SUB>1</SUB>
     which use the same dispatch character.
     Both <TT>"~3d"</TT> and <TT>"~3,'0D"</TT> are valid uses of the
	       `<TT>~D</TT>' format directive.

<P ID="26">
<A NAME="formatstring">
<DT><B>format string:</B><DD> <I>n.</I>&nbsp;  a <I><A HREF="s.htm#string">string</A></I> which can contain both ordinary text and <I><A HREF="#formatdirective">format directives</A></I>,
  and which is used in conjunction with <I><A HREF="#formatargument">format arguments</A></I> to describe how 
  text output should be formatted by certain functions, such as <A HREF="../dictentr/format.htm"><B>format</B></A>.

<P ID="27">
<A NAME="freedeclaration">
<DT><B>free declaration:</B><DD> <I>n.</I>&nbsp;  a declaration that is not a <I><A HREF="b.htm#bounddeclaration">bound declaration</A></I>.
  See <A HREF="../dictentr/declare.htm"><B>declare</B></A>.

<P ID="28">
<A NAME="fresh">
<DT><B>fresh:</B><DD> <I>adj.</I>&nbsp;
  1. (of an <I><A HREF="o.htm#object">object</A></I> <I>yielded</I> by a <I><A HREF="#function">function</A></I>)
     having been newly-allocated by that <I><A HREF="#function">function</A></I>.
     (The caller of a <I><A HREF="#function">function</A></I> that returns a <I><A HREF="#fresh">fresh</A></I> <I><A HREF="o.htm#object">object</A></I>
      may freely modify the <I><A HREF="o.htm#object">object</A></I> without fear that such modification will
      compromise the future correct behavior of that <I><A HREF="#function">function</A></I>.)
  2. (of a <I><A HREF="b.htm#binding">binding</A></I> for a <I><A HREF="n.htm#name">name</A></I>)
     newly-allocated; not shared with other <I><A HREF="b.htm#binding">bindings</A></I> for that <I><A HREF="n.htm#name">name</A></I>.

<P ID="29">
<A NAME="freshline">
<DT><B>freshline:</B><DD> <I>n.</I>&nbsp;  a conceptual operation on a <I><A HREF="s.htm#stream">stream</A></I>, implemented by the <I><A HREF="#function">function</A></I> <A HREF="../dictentr/terprifr.htm"><B>fresh-line</B></A>
  and by the <I><A HREF="#formatdirective">format directive</A></I> <TT>~&amp;</TT>, which advances the display position
  to the beginning of the next line (as if a <I><A HREF="n.htm#newline">newline</A></I> had been typed, or 
  the <I><A HREF="#function">function</A></I> <A HREF="../dictentr/terprifr.htm"><B>terpri</B></A> had been called)
  unless the <I><A HREF="s.htm#stream">stream</A></I> is already known to be positioned at the beginning of a line.
  Unlike <I><A HREF="n.htm#newline">newline</A></I>, <I><A HREF="#freshline">freshline</A></I> is not a <I><A HREF="c.htm#character">character</A></I>.

<P ID="30">
<A NAME="funbound">
<DT><B>funbound:</B><DD> <FONT SIZE="+1">[ <B>'efunba&uuml;nd</B> ]</FONT> <I>n.</I>&nbsp;(of a <I><A HREF="#functionname">function name</A></I>)
  not <I><A HREF="#fbound">fbound</A></I>.

<P ID="31">
<A NAME="function">
<DT><B>function:</B><DD> <I>n.</I>&nbsp;  
  1. an <I><A HREF="o.htm#object">object</A></I> representing code,
     which can be <I>called</I> with zero or more <I><A HREF="a.htm#argument">arguments</A></I>,
     and which produces zero or more <I><A HREF="v.htm#value">values</A></I>.
  2. an <I><A HREF="o.htm#object">object</A></I> of <I><A HREF="t.htm#type">type</A></I> <A HREF="../dictentr/function.htm"><B>function</B></A>.

<P ID="32">
<A NAME="functionblockname">
<DT><B>function block name:</B><DD> <I>n.</I>&nbsp;(of a <I><A HREF="#functionname">function name</A></I>)
  The <I><A HREF="s.htm#symbol">symbol</A></I> that would be used as the name of an <I><A HREF="i.htm#implicitblock">implicit block</A></I>
  which surrounds the body of a <I><A HREF="#function">function</A></I> having that <I><A HREF="#functionname">function name</A></I>.
  If the <I><A HREF="#functionname">function name</A></I> is a <I><A HREF="s.htm#symbol">symbol</A></I>, its <I><A HREF="#functionblockname">function block name</A></I> is
  the <I><A HREF="#functionname">function name</A></I> itself.
  If the <I><A HREF="#functionname">function name</A></I> is a <I><A HREF="l.htm#list">list</A></I> whose <I><A HREF="c.htm#car">car</A></I> is <A HREF="../dictentr/setfpset.htm"><B>setf</B></A>
  and whose <I><A HREF="c.htm#cadr">cadr</A></I> is a <I><A HREF="s.htm#symbol">symbol</A></I>, its <I><A HREF="#functionblockname">function block name</A></I> is 
  the <I><A HREF="s.htm#symbol">symbol</A></I> that is the <I><A HREF="c.htm#cadr">cadr</A></I> of the <I><A HREF="#functionname">function name</A></I>.
  An <I><A HREF="i.htm#implementation">implementation</A></I> which supports additional kinds of <I><A HREF="#functionname">function names</A></I>
  must specify for each how the corresponding <I><A HREF="#functionblockname">function block name</A></I> is computed.

<P ID="33">
<A NAME="functioncell">
<DT><B>function cell:</B><DD> <I>n.</I>&nbsp;<I>Trad.</I>&nbsp;(of a <I><A HREF="s.htm#symbol">symbol</A></I>)
  The <I><A HREF="p.htm#place">place</A></I> which holds the <I>definition</I> of the
  global <I><A HREF="#function">function</A></I> <I><A HREF="b.htm#binding">binding</A></I>, if any, named by that <I><A HREF="s.htm#symbol">symbol</A></I>,
  and which is <I>accessed</I> by <A HREF="../dictentr/symbol-f.htm"><B>symbol-function</B></A>.
  See <I><A HREF="c.htm#cell">cell</A></I>.

<P ID="34">
<A NAME="functiondesignator">
<DT><B>function designator:</B><DD> <I>n.</I>&nbsp;  a <I><A HREF="d.htm#designator">designator</A></I> for a <I><A HREF="#function">function</A></I>; that is,
  an <I><A HREF="o.htm#object">object</A></I> that denotes a <I><A HREF="#function">function</A></I>
  and that is one of:
      a <I><A HREF="s.htm#symbol">symbol</A></I> (denoting the <I><A HREF="#function">function</A></I> named by that <I><A HREF="s.htm#symbol">symbol</A></I>
                       in the <I><A HREF="g.htm#globalenvironment">global environment</A></I>),
   or a <I><A HREF="#function">function</A></I> (denoting itself).
  The consequences are undefined if 
  a <I><A HREF="s.htm#symbol">symbol</A></I> is used as a <I><A HREF="#functiondesignator">function designator</A></I> but
  it does not have a global definition as a <I><A HREF="#function">function</A></I>,
  or it has a global definition as a <I><A HREF="m.htm#macro">macro</A></I> or a <I><A HREF="s.htm#specialform">special form</A></I>.
  See also <I><A HREF="e.htm#extendedfunctiondesignator">extended function designator</A></I>.

<P ID="35">
<A NAME="functionform">
<DT><B>function form:</B><DD> <I>n.</I>&nbsp;  a <I><A HREF="#form">form</A></I> that is a <I><A HREF="l.htm#list">list</A></I> and that has a first element 
  which is the <I><A HREF="n.htm#name">name</A></I> of a <I><A HREF="#function">function</A></I> to be called on
  <I><A HREF="a.htm#argument">arguments</A></I> which are the result of <I>evaluating</I> subsequent
  elements of the <I><A HREF="#functionform">function form</A></I>.

<P ID="36">
<A NAME="functionname">
<DT><B>function name:</B><DD> <I>n.</I>&nbsp;
  1. (in an <I><A HREF="e.htm#environment">environment</A></I>)
     A <I><A HREF="s.htm#symbol">symbol</A></I> or a <I><A HREF="l.htm#list">list</A></I> <TT>(setf <I>symbol</I>)</TT> 
     that is the <I><A HREF="n.htm#name">name</A></I> of a <I><A HREF="#function">function</A></I> in that <I><A HREF="e.htm#environment">environment</A></I>.
  2. A <I><A HREF="s.htm#symbol">symbol</A></I> or a <I><A HREF="l.htm#list">list</A></I> <TT>(setf <I>symbol</I>)</TT>.

<P ID="37">
<A NAME="functionalevaluation">
<DT><B>functional evaluation:</B><DD> <I>n.</I>&nbsp;
  the process of extracting a <I><A HREF="#functionalvalue">functional value</A></I> from a <I><A HREF="#functionname">function name</A></I>

  or a <I><A HREF="l.htm#lambdaexpression">lambda expression</A></I>.
  The evaluator performs <I><A HREF="#functionalevaluation">functional evaluation</A></I> 
       implicitly when it encounters a <I><A HREF="#functionname">function name</A></I> 

 	or a <I><A HREF="l.htm#lambdaexpression">lambda expression</A></I>
        in the <I><A HREF="c.htm#car">car</A></I> of a <I><A HREF="c.htm#compoundform">compound form</A></I>, 
    or explicitly when it encounters a <A HREF="../dictentr/function.htm"><B>function</B></A> <I><A HREF="s.htm#specialform">special form</A></I>.
  Neither a use of a <I><A HREF="s.htm#symbol">symbol</A></I> as a <I><A HREF="#functiondesignator">function designator</A></I> nor a
  use of the <I><A HREF="#function">function</A></I> <A HREF="../dictentr/symbol-f.htm"><B>symbol-function</B></A> to extract the <I><A HREF="#functionalvalue">functional value</A></I>
  of a <I><A HREF="s.htm#symbol">symbol</A></I> is considered a <I><A HREF="#functionalevaluation">functional evaluation</A></I>.

<P ID="38">
<A NAME="functionalvalue">
<DT><B>functional value:</B><DD> <I>n.</I>&nbsp;
  1. (of a <I><A HREF="#functionname">function name</A></I> <I>N</I> in an <I><A HREF="e.htm#environment">environment</A></I> <I>E</I>)
     The <I><A HREF="v.htm#value">value</A></I> of the <I><A HREF="b.htm#binding">binding</A></I> named <I>N</I>
     in the <I><A HREF="#function">function</A></I> <I><A HREF="n.htm#namespace">namespace</A></I> for <I><A HREF="e.htm#environment">environment</A></I> <I>E</I>;

     that is, the contents of the <I><A HREF="#functioncell">function cell</A></I> named <I>N</I> in 
     <I><A HREF="e.htm#environment">environment</A></I> <I>E</I>.
  2. (of an <I><A HREF="#fbound">fbound</A></I> <I><A HREF="s.htm#symbol">symbol</A></I> <I>S</I>)
     the contents of the <I><A HREF="s.htm#symbol">symbol</A></I>'s <I><A HREF="#functioncell">function cell</A></I>; that is,
     the <I><A HREF="v.htm#value">value</A></I> of the <I><A HREF="b.htm#binding">binding</A></I> named <I>S</I>
     in the <I><A HREF="#function">function</A></I> <I><A HREF="n.htm#namespace">namespace</A></I> of the <I><A HREF="g.htm#globalenvironment">global environment</A></I>.
     (A <I><A HREF="n.htm#name">name</A></I> that is a <I><A HREF="m.htm#macroname">macro name</A></I> in the <I><A HREF="g.htm#globalenvironment">global environment</A></I>
      or is a <I><A HREF="s.htm#specialoperator">special operator</A></I> might or might not be <I><A HREF="#fbound">fbound</A></I>.


      But if <I>S</I> is such a <I><A HREF="n.htm#name">name</A></I> and is <I><A HREF="#fbound">fbound</A></I>, the specific
      nature of its <I><A HREF="#functionalvalue">functional value</A></I> is <I><A HREF="i.htm#implementationdependent">implementation-dependent</A></I>;
      in particular, it might or might not be a <I><A HREF="#function">function</A></I>.)

<P ID="39">
<A NAME="furthercompilation">
<DT><B>further compilation:</B><DD> <I>n.</I>&nbsp;
  <I><A HREF="i.htm#implementationdependent">implementation-dependent</A></I> compilation beyond <I><A HREF="m.htm#minimalcompilation">minimal compilation</A></I>.
  Further compilation is permitted to take place at <I><A HREF="r.htm#runtime">run time</A></I>.
  Block compilation and generation of machine-specific instructions
            are examples of further compilation.  

<P ID="40"></DL>
</TD></TR></TABLE>
<HR NOSHADE>
<A HREF="../ansicl.htm" TARGET="_self"><IMG SRC="../images/a-top12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Home"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>

<A HREF="e.htm"><IMG SRC="../images/a-lft12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Previous"></A> 
<A HREF="../section/glossary.htm" TARGET="_self"><IMG SRC="../images/a-up12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Up"></A> 
<A HREF="g.htm"><IMG SRC="../images/a-rgh12b.gif" BORDER=0 WIDTH=12 HEIGHT=12 ALT="Next"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/tableofc.htm" TARGET="_self"><IMG SRC="../images/toc.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Table of Contents"></A><IMG SRC="../images/void16.gif" BORDER=0 WIDTH=16 HEIGHT=16>
<A HREF="../meta/index.htm" TARGET="_self"><IMG SRC="../images/i16.gif" BORDER=0 WIDTH=16 HEIGHT=16 ALT="Index"></A>
<HR NOSHADE>

<SMALL><I><B>&#169; Franz Inc. 1998-2009</b> - File last updated 7-21-2009</I></SMALL>
</FONT>

</BODY>
</HTML>
